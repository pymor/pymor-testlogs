<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="6355" tests="12711" time="1140.081"><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;0]" time="0.001224517822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd519257710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;1]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd519257be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;2]" time="0.0006146430969238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51c7e0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;3]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd519257780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;4]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;5]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;6]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923ca90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;7]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923cf60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;8]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51922f470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;9]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51922f940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;10]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;11]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923c400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;12]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd56407f780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;13]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd519257978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;14]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51922f438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;15]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51922fac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;16]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51922ff98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;17]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51c7e0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;18]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd564070b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;19]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;20]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923c588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;21]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923ce48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;22]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51922fe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;23]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51922f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;24]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd5191a56a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;25]" time="0.0007486343383789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd5191a5b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;26]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51922fe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;27]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923c128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;28]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923c400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;29]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51927df98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;30]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd519257a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;31]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd5191a58d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;32]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd5191a5518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;33]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd5191b10f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;34]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd5191a5550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;35]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd5640978d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;36]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd519257a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;37]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd56407fe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;38]" time="0.0004029273986816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51923c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;39]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51922fd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;40]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51922fa90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;41]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd5191b15f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;42]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fd51922fc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;0]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd51923c630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;1]" time="0.000400543212890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd56407f828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;2]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd564097d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;3]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191a5470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;4]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191a5e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;5]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191b13c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;6]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191b1b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;7]" time="0.0007646083831787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191a5518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;8]" time="0.00039386749267578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd564097e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;9]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd51927d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;10]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd51923c128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;11]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd51922f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;12]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191b1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;13]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191b1668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;14]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191be0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;15]" time="0.0007624626159667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191b1dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;16]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191b1860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;17]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5640a8fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;18]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd51923c748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;19]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd519257cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;20]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5640970f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;21]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191be080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;22]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191be978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;23]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191a5588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;24]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd564097828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;25]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd519257518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;26]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5640a8358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;27]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191b1d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;28]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191b12e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;29]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191be4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;30]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191c4278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;31]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191bef60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;32]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191b1dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;33]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd51922f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;34]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd51923ce48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;35]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd519257550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;36]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd56413c198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;37]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191c42b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;38]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191c4b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;39]" time="0.0005812644958496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191d30b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;40]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191c4b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;41]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd5191c4748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;42]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fd56413cac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;0]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191be6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;1]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191becf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;2]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191b1d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;3]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191a5898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;4]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191a5240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;5]" time="0.0007522106170654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191a5b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;6]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191b1630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;7]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191be4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;8]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191be6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;9]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd56413c198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;10]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191c4588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;11]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191c4b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;12]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd51922f320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;13]" time="0.0006837844848632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd51923c828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;14]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191c4278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;15]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd56413c240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;16]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191be860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;17]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191bed68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;18]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191b1f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;19]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd51922fac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;20]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd519257e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;21]" time="0.0007288455963134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd51927d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;22]" time="0.0003952980041503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd51922f748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;23]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191b1978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;24]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd564163e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;25]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191be2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;26]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd56414b828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;27]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191c4278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;28]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd51927d128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;29]" time="0.0007250308990478516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191d3240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;30]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd51927d208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;31]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd56414b240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;32]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191be9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;33]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd564163fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;34]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191a50f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;35]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd51c7d8d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;36]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191d3390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;37]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191d3860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;38]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd51922fac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;39]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191b12b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;40]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd56413cf60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;41]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191bec18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;42]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fd5191c4278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;0]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd51926dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;1]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191d3668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;2]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191d3d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;3]" time="0.0007534027099609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd51927d080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;4]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191be748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;5]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd56413c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;6]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191b12b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;7]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd51922f748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;8]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191d3ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;9]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191d3160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;10]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191632e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;11]" time="0.0007483959197998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd519257f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;12]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191d3c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;13]" time="0.0004019737243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5640b4908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;14]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd564163fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;15]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191be278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;16]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191c4a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;17]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd519163128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;18]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd519163ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;19]" time="0.0007212162017822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd51916a128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;20]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd519163be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;21]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191632b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;22]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191beba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;23]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5640dab70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;24]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd56407ff60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;25]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191d3f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;26]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd519257f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;27]" time="0.0007402896881103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd51916a668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;28]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191d3b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;29]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5640da780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;30]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd56413cd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;31]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191be278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;32]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191639b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;33]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd519163f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;34]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd51916a550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;35]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd51916ac88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;36]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd519163e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;37]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191b12b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;38]" time="0.0004000663757324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5640da390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;39]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd51922f748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;40]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5191d3978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;41]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd51916ac88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;42]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fd51916a358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;0]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5191751d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;1]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd51916aac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;2]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640b4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;3]" time="0.0004031658172607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd564163908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;4]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640dae10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;5]" time="0.00040221214294433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd56414b828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;6]" time="0.00040221214294433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd519163eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;7]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd519175358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;8]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd519175710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;9]" time="0.0010552406311035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd56413c978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;10]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640b4668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;11]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd51916a940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;12]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd51916a780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;13]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd519163f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;14]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd519163550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;15]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5191d3f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;16]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640a8d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;17]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd51923cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;18]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640c4eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;19]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5191630f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;20]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd56403dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;21]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd51916af28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;22]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640b4c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;23]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640da0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;24]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd519175780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;25]" time="0.0007519721984863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5191752e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;26]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640ea240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;27]" time="0.0004000663757324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd51916ab00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;28]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd56403d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;29]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5191630f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;30]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd56404f550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;31]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640a8d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;32]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd519175908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;33]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd519175e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;34]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd519175c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;35]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640a8d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;36]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd56404fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;37]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd519163b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;38]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640b4f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;39]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd51916ac88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;40]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5191a5390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;41]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd51922c358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;42]" time="0.0008113384246826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fd5640ea390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;0]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51916afd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;1]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd5191639b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;2]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd56404fd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;3]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51923cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;4]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd519175b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;5]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51922c358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;6]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51922c898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;7]" time="0.0007798671722412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd519175f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;8]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd519175780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;9]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd56404f358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;10]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd56403d898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;11]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51916aa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;12]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51922c908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;13]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51922c278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;14]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51918d198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;15]" time="0.0007336139678955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51918d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;16]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51922c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;17]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51916a550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;18]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd519163518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;19]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd5640c4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;20]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd55cdde320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;21]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd519175b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;22]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51918d048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;23]" time="0.00078582763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51918dc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;24]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd55cddec50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;25]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd56404fc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;26]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd56405efd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;27]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51916ae80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;28]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51922cef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;29]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51918d5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;30]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51918d588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;31]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd519196278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;32]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51918da20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;33]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51918dc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;34]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd51922c710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;35]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd5191638d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;36]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd5191d3208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;37]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd519175ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;38]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd519196438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;39]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd519196780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;40]" time="0.0007185935974121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd519175ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;41]" time="0.0003974437713623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd5640c4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;42]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fd5640ea438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;0]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51922c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;1]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51918de48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;2]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51918df98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;3]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd519196588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;4]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd519196cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;5]" time="0.0007064342498779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd519196cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;6]" time="0.00039887428283691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd519196828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;7]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51918d470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;8]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd55cdef668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;9]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51922c908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;10]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd56404f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;11]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd55cddeda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;12]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51911f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;13]" time="0.0004029273986816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd56403dd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;14]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51916aa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;15]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd55cdef5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;16]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51918df60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;17]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd519196908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;18]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd519196588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;19]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51911f400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;20]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51911fe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;21]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd55ce13240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;22]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51916aa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;23]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd519196128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;24]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd519196eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;25]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51911fd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;26]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51911f860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;27]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51918df28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;28]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd55cddef98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;29]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51922c588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;30]" time="0.0007805824279785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51918dc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;31]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51911f908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;32]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51911fe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;33]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd519196f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;34]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd519196cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;35]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd55ce13d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;36]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51922cba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;37]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd5191a5ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;38]" time="0.0007524490356445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd5191a5ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;39]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd55ce136d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;40]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd55ce01f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;41]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd519196320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;42]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fd51911fd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;0]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51911f860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;1]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51918d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;2]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51922f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;3]" time="0.0011899471282958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51912a748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;4]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51918d470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;5]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51911fe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;6]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd5191969b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;7]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd56403d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;8]" time="0.0006108283996582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd55ce13b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;9]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51922cda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;10]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51912a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;11]" time="0.0007719993591308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51912ac88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;12]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd55ce13eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;13]" time="0.00040030479431152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd56403dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;14]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51911f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;15]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51911f978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;16]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd55cda90b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;17]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51912acf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;18]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51912a048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;19]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51913b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;20]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51912aac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;21]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51922fac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;22]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51918d828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;23]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51911f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;24]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd56403dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;25]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51922c240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;26]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51913b320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;27]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51913b7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;28]" time="0.0007567405700683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd55cda4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;29]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd519196a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;30]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51911f588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;31]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd55cda9898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;32]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51912ab70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;33]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51912ad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;34]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51913b668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;35]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51913bd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;36]" time="0.0007541179656982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51913bd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;37]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51913b828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;38]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51912a048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;39]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd55cda96a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;40]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd51911f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;41]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd55cdef128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;42]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fd55cda4198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;0]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd519143630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;1]" time="0.0007965564727783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd519143b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;2]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd55cdcae10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;3]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51911f080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;4]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51922f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;5]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51912af60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;6]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51913b400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;7]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd519143828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;8]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd5191434e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;9]" time="0.0007545948028564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51914d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;10]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd519143710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;11]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51913b940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;12]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd56404f550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;13]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51922f668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;14]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd55cdef128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;15]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd55cd5ba58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;16]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51914d208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;17]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51914d710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;18]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd55cd5ba58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;19]" time="0.0006613731384277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51923c320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;20]" time="0.0006501674652099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51912ad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;21]" time="0.0007684230804443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51913bd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;22]" time="0.0006265640258789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd519143940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;23]" time="0.0006079673767089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd519143c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;24]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51914d588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;25]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51914dc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;26]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd519143d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;27]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51913bd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;28]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd55cda9550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;29]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd55cdef128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;30]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd519196f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;31]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51914dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;32]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51914d828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;33]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd519158198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;34]" time="0.0010941028594970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd55cd6fba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;35]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd55cda9f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;36]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51914d940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;37]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51914d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;38]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51913b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;39]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd519143208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;40]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd519143320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;41]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51912ab70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;42]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fd51912a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;0]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd519143d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;1]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd51913ba58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;2]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cdcae10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;3]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd51914dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;4]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cdef128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;5]" time="0.00039887428283691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cd6fa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;6]" time="0.0004019737243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cdde908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;7]" time="0.000736236572265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd519158198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;8]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd519175d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;9]" time="0.0003991127014160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd51911f400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;10]" time="0.0003960132598876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd51914dc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;11]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cd944e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;12]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd51913ba90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;13]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd519143e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;14]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd5191582e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;15]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd519158898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;16]" time="0.0005578994750976562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd519143160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;17]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd51913bd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;18]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cdca208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;19]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd51914d940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;20]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cd6f278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;21]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd5191757b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;22]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd5191586a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;23]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd519158da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;24]" time="0.0007483959197998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd519158b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;25]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cddef98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;26]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd51922f668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;27]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd51914de48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;28]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cd94ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;29]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd51913beb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;30]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd519143c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;31]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd5190e9320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;32]" time="0.0007181167602539062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd51912ab70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;33]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cd7f320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;34]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cd94ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;35]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cd6fba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;36]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd55cddef98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;37]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd519158908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;38]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd5190e9160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;39]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd5190e9be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;40]" time="0.0007326602935791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd5190f0160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;41]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd5190e9978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;42]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fd5191589b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;0]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55785e438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;1]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55cda9b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;2]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd51922cb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;3]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd519143208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;4]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190f0080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;5]" time="0.0007307529449462891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190f06a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;6]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55cdca208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;7]" time="0.00040078163146972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd51914d400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;8]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55ce13828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;9]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd519158518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;10]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190e9240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;11]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190e9be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;12]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190f0208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;13]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190f0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;14]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190e92e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;15]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55785ec18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;16]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55cda9550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;17]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55cd94978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;18]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd519143198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;19]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190f0cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;20]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190f0390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;21]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190fd208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;22]" time="0.0008244514465332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190f0400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;23]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190f0780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;24]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55786ec88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;25]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd519175978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;26]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55785eb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;27]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190e9048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;28]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190fd320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;29]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190fd748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;30]" time="0.0007097721099853516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190e9be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;31]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5578824a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;32]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55785e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;33]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55cd940f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;34]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190f02b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;35]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190f0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;36]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190fd080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;37]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd519108048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;38]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190fdd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;39]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190fd4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;40]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd5190f0a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;41]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55cd94f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;42]" time="0.0003991127014160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fd55cd6f470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;0]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd557882be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;1]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5191084a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;2]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd519108908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;3]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5578822b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;4]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd55785eb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;5]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5578930b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;6]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190fd748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;7]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190fdb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;8]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190f0f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;9]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190e9f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;10]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190e95c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;11]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd519158dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;12]" time="0.0008158683776855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd519158710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;13]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd51913bf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;14]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190f0a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;15]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190fdd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;16]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190fde10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;17]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd557828ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;18]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd557882898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;19]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd51912acc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;20]" time="0.0007212162017822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5191432e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;21]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd51914d400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;22]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd557893208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;23]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190fd9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;24]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190f0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;25]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd51913bd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;26]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190e9550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;27]" time="0.000400543212890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd519108240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;28]" time="0.0007381439208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5191181d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;29]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5191087f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;30]" time="0.0003998279571533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190e9908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;31]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190f06d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;32]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190fdd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;33]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd55cd6fe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;34]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd56404f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;35]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd519118080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;36]" time="0.0007636547088623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd519118710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;37]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd557828fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;38]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190fdac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;39]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd557837710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;40]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd5190f0a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;41]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd519108e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;42]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fd519108630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;0]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd519118390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;1]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd519118d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;2]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5191086a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;3]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190f0198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;4]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd557837a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;5]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd55cd6fe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;6]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd557882be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;7]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd519118d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;8]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd519118438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;9]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190a2278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;10]" time="0.0009558200836181641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd519118780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;11]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd557882f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;12]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd55ce01f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;13]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd557837a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;14]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190e9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;15]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd519108320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;16]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190a2320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;17]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190a27b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;18]" time="0.0007433891296386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5191086a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;19]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190e9940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;20]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd557837a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;21]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd557828b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;22]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5577dd0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;23]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5191182e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;24]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190a2470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;25]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190ab0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;26]" time="0.0007801055908203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190ab5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;27]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190a2048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;28]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd519118ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;29]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5577dd0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;30]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190fd438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;31]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5578373c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;32]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5191084e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;33]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190ab080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;34]" time="0.0007684230804443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190abb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;35]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd51913b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;36]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd557828908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;37]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5577dd588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;38]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd519118c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;39]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190a2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;40]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190ab828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;41]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190ab3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;42]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fd5190b7198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;0]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190ab8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;1]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190a2048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;2]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd55cdca748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;3]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd557882f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;4]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5578373c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;5]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5577ed198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;6]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190b7278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;7]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190b76a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;8]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190f0128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;9]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5577dd4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;10]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd519118c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;11]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190a2f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;12]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190ab908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;13]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190abf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;14]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190b74e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;15]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190b7be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;16]" time="0.0011012554168701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5577ddfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;17]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190f0278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;18]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190abf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;19]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190abc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;20]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190a2828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;21]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd51912ab70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;22]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd519118710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;23]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd519108978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;24]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5578826a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;25]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd519118d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;26]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190a2588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;27]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd557847c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;28]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190ab438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;29]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd557800fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;30]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5577dd198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;31]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190b7710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;32]" time="0.0007681846618652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190b73c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;33]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd557800d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;34]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190abc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;35]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190a2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;36]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5578136a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;37]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd519108940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;38]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190b7320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;39]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190b7d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;40]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190c7320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;41]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5190b71d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;42]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fd5191089b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;0]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5578132b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;1]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190a2a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;2]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190abc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;3]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190fdb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;4]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190c7320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;5]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190c7828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;6]" time="0.0007357597351074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190e9940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;7]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190ab9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;8]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5577a1e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;9]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd519118f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;10]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190b7908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;11]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190b7c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;12]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190c76d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;13]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190c7d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;14]" time="0.0007686614990234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190c7d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;15]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190c7828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;16]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190b7828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;17]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd51918da58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;18]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5191183c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;19]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190a2630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;20]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190e9550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;21]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190ce668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;22]" time="0.0007097721099853516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190ceba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;23]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190a2630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;24]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd557813be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;25]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5577b5668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;26]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190b79e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;27]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190c74a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;28]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190ce908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;29]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190ce550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;30]" time="0.0007755756378173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd519059128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;31]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190ce668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;32]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190c7a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;33]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190b7908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;34]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5191084e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;35]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5191183c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;36]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190a2630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;37]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd519059240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;38]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd519059748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;39]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5578136a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;40]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5577b51d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;41]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd557828c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;42]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fd5190c7470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;0]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190cecf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;1]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190cec88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;2]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd519059550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;3]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd519059c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;4]" time="0.0008037090301513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190cedd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;5]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190c7588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;6]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd557828c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;7]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5577b53c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;8]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd557813d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;9]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd519059dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;10]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190592e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;11]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190641d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;12]" time="0.0007116794586181641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190aba20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;13]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd519059898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;14]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190a2b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;15]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5577c53c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;16]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd55775acc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;17]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190c7c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;18]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190641d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;19]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd519064a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;20]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190ce630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;21]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd55775a630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;22]" time="0.0004019737243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190b7320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;23]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190a2a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;24]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd519059a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;25]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190aba20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;26]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd519064208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;27]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd51906f390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;28]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190aba20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;29]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd55776d438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;30]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190647f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;31]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd519064400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;32]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd55775afd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;33]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190592e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;34]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190c7c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;35]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190ce668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;36]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190ce128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;37]" time="0.0007898807525634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190cec18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;38]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190c7898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;39]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd5190592e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;40]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd55775a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;41]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd519064278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;42]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fd55776dac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;0]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd5577b5ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;1]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd5190b7978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;2]" time="0.0008373260498046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd5190b7978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;3]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd5577b5710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;4]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519064f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;5]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd5190643c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;6]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519059d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;7]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519059128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;8]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd5190ce668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;9]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51906f048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;10]" time="0.0007562637329101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51906fc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;11]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd5190c7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;12]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519059b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;13]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519064400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;14]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519064898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;15]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd55777afd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;16]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51906f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;17]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51906f550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;18]" time="0.0008118152618408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51907d198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;19]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51906f278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;20]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd55777ac88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;21]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd55776d828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;22]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd557828c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;23]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519059da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;24]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd5190ce668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;25]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51907d208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;26]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51907d7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;27]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd557790b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;28]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519059f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;29]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519064dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;30]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd55776d438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;31]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51906f978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;32]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51906f358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;33]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51907d5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;34]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51907dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;35]" time="0.0007569789886474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51906f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;36]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd55776d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;37]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519064400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;38]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519059ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;39]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd5190c7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;40]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51907dda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;41]" time="0.0005657672882080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd51907d898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;42]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fd519089240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;0]" time="0.0007636547088623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd5190ce668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;1]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd51907dba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;2]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd557790e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;3]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519059128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;4]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd55775ac18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;5]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd5577b5278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;6]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519089080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;7]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519089b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;8]" time="0.0007436275482177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519091080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;9]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd5190897b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;10]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd51906fa20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;11]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd55776d438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;12]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519059320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;13]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd5190c7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;14]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd51907dda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;15]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd5190ce630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;16]" time="0.0008025169372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd5190915c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;17]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd51907d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;18]" time="0.0006363391876220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd557734908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;19]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd5577ddcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;20]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd557721a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;21]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519089208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;22]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519089be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;23]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519091470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;24]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519091be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;25]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd5190896d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;26]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd557721748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;27]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd5577ddfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;28]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd557734908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;29]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd51907d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;30]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519091c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;31]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519091630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;32]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd51901d128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;33]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519091630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;34]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd5577902b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;35]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd51907d828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;36]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd5577ddeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;37]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd557744b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;38]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519089cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;39]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd51901d278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;40]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd51901d668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;41]" time="0.0012340545654296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd557744b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;42]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fd519059f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;0]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd519091a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;1]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd519091128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;2]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd519089940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;3]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd5190895f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;4]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51907def0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;5]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51906fc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;6]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51906fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;7]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51907df60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;8]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd519089cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;9]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd5577542b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;10]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd519091ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;11]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd519091c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;12]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd519064da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;13]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51901d7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;14]" time="0.000789642333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51901d128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;15]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd557734fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;16]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd519091978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;17]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd557790d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;18]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd519089128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;19]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51907d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;20]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51906f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;21]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51901d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;22]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51901dd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;23]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51907def0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;24]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd5190895c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;25]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd557790f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;26]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd519091fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;27]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd5577ed588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;28]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51901de48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;29]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51901d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;30]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51902d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;31]" time="0.0007336139678955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51901d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;32]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51901deb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;33]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd5190919b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;34]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd557754f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;35]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd5576ebd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;36]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51906f438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;37]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51902d470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;38]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51902d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;39]" time="0.0008027553558349609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd51907def0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;40]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd5576ebb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;41]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd5190c7e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;42]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fd519091ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;0]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51901d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;1]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51901d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;2]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51902d278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;3]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd5190360f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;4]" time="0.0007920265197753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519036630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;5]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51902d518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;6]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51901deb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;7]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd5576fb588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;8]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519091c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;9]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519089358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;10]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51906f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;11]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519036128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;12]" time="0.0007617473602294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519036b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;13]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd557754f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;14]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519091240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;15]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51901dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;16]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd55770e898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;17]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51902de10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;18]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519036860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;19]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519036438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;20]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd5190401d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;21]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519036a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;22]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd5190366a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;23]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51902d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;24]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51901d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;25]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd5190919b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;26]" time="0.0008871555328369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd5190899b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;27]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd5190402e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;28]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd5190406d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;29]" time="0.0007700920104980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd557721358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;30]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd5576fb390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;31]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd55770ed30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;32]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51902df60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;33]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519036da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;34]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519036ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;35]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd5190404a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;36]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519040c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;37]" time="0.0007598400115966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519040c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;38]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519040780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;39]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd519036a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;40]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd55769f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;41]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51902d518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;42]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fd51901dba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;0]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd557734cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;1]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51904b518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;2]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd557734cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;3]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd55770e748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;4]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51902d400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;5]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd519036f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;6]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd519036898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;7]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5190404a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;8]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51904b358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;9]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51904bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;10]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5576c4128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;11]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5576b1390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;12]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd519040588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;13]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd519040978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;14]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51904bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;15]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51904b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;16]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5576eb828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;17]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd519036f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;18]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51902dd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;19]" time="0.0007731914520263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd519036828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;20]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51904b710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;21]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51904b358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;22]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd519040da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;23]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5190899b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;24]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd55769fd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;25]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5576c43c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;26]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51902db70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;27]" time="0.0007548332214355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51902db70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;28]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5576c4c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;29]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd519091f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;30]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5190406a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;31]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5576ebac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;32]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51904bc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;33]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd519036898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;34]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5191088d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;35]" time="0.0007545948028564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5190536a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;36]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd519036898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;37]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51904bf28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;38]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5577345c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;39]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd5190402e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;40]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd557744a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;41]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd51902d438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;42]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fd519053550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;0]" time="0.0007472038269042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519053be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;1]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd5576c4860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;2]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519040a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;3]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd5576eb8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;4]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd51904b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;5]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd5190b7ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;6]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519053d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;7]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519053320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;8]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fe5240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;9]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519053da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;10]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd51906fc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;11]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd51904beb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;12]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519089d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;13]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519091c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;14]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd5576c4860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;15]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fe52e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;16]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fe5748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;17]" time="0.0007455348968505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd5576c4908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;18]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd5576b1f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;19]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd5576cf668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;20]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd51904bb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;21]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519053e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;22]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519053400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;23]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fe5518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;24]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fe5c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;25]" time="0.0007343292236328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fe5c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;26]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fe57f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;27]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519053978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;28]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519036898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;29]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd5576796d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;30]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519040b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;31]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd5576c4e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;32]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fee588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;33]" time="0.0007569789886474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518feeac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;34]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519089128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;35]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd5576cf278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;36]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd51906fe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;37]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd519053a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;38]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fe52e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;39]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fee780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;40]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fee438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;41]" time="0.0007791519165039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518ff6048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;42]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fd518fee908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;0]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518fe5400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;1]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518fe57f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;2]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd51901d390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;3]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd519059320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;4]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd519040f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;5]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518ff6160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;6]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518ff6668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;7]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd519040b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;8]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd51904b080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;9]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd519053f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;10]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518fe59e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;11]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518fee2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;12]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518feeef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;13]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518ff64e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;14]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518ff6b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;15]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518fee908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;16]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518fe5470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;17]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd51906fe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;18]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd5576794e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;19]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd55761d208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;20]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518ff6b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;21]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518ff6780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;22]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd5190020f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;23]" time="0.0011358261108398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd55761db38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;24]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd51906fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;25]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518ff6f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;26]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518ff6c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;27]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518fe5b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;28]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518feecc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;29]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518feeba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;30]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd519053470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;31]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd5576c4cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;32]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518fee160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;33]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518fe5780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;34]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518ff6c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;35]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518ff62e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;36]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd5190899b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;37]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd55761d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;38]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd51901d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;39]" time="0.0007665157318115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd5190020b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;40]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd51901deb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;41]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd51904bac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;42]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fd518ff6940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;0]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd557679eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;1]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd55762f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;2]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518feeba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;3]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519002390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;4]" time="0.0005648136138916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd5190027f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;5]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518fee080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;6]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518fe5390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;7]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd55768bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;8]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518ff6b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;9]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd55761ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;10]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519036b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;11]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd5190025f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;12]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519002cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;13]" time="0.0007593631744384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd51902d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;14]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518ff6940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;15]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd557679240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;16]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519053470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;17]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd5576417b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;18]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519002e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;19]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519002278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;20]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519012278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;21]" time="0.0008232593536376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519002518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;22]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519002e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;23]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd5576c4ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;24]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd55762f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;25]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518ff6320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;26]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd55761d898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;27]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd5190120b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;28]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519012b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;29]" time="0.0008041858673095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518f990b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;30]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519012b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;31]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519012438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;32]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518ff6358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;33]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd55762f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;34]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd5576519b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;35]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519002ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;36]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519002f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;37]" time="0.0008158683776855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518f995f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;38]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518fee208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;39]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd557651ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;40]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518fe5390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;41]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd518ff6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;42]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fd519012978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;0]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd519012e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;1]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518f994a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;2]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518f99c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;3]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd519012da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;4]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd5575e21d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;5]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd519053320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;6]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd557641fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;7]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd519002ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;8]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518f99cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;9]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518f99518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;10]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518fa3160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;11]" time="0.0007641315460205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518f99710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;12]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd519002cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;13]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd557641b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;14]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd55762f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;15]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd55761d898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;16]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd5190127f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;17]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518fa32b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;18]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518fa36a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;19]" time="0.0007288455963134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd519012ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;20]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd5575e6780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;21]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd51904bac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;22]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd557641fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;23]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd519002ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;24]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518f999e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;25]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518fa3278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;26]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518fa3f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;27]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518fa3c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;28]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518fa3400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;29]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518f99be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;30]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd5576417b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;31]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd55761d898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;32]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd5575e6240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;33]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518fae0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;34]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518fae860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;35]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd5575e6b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;36]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd55768bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;37]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518fa3d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;38]" time="0.0005483627319335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518fa3668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;39]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd5190ce048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;40]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd518f992b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;41]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd519012da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;42]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fd55775a630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;0]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd5190027f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;1]" time="0.000766754150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd519002a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;2]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd519012da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;3]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518f99748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;4]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fa38d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;5]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fa3b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;6]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd5576084e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;7]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd557651470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;8]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd55769f898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;9]" time="0.0007383823394775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd55769f898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;10]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518ff6668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;11]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd557608828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;12]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fa3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;13]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518f99978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;14]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518f99e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;15]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd51907df60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;16]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fae198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;17]" time="0.0007789134979248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fc0128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;18]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fae668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;19]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd5190127b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;20]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518f99ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;21]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd557599940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;22]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fa37f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;23]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518ff6e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;24]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd55769f898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;25]" time="0.0007407665252685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fc0668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;26]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd557641fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;27]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fa3e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;28]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518f995f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;29]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd5575ac6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;30]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fae5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;31]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fae0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;32]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fc0550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;33]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fc0c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;34]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fae6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;35]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd5575ac2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;36]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd519036940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;37]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fa3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;38]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518feecf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;39]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fc0c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;40]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fc0208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;41]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fcb1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;42]" time="0.0007431507110595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fd518fc0ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;0]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fc08d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;1]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd557608780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;2]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd557599c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;3]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd519012550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;4]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd5575acdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;5]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fcb358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;6]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fcb710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;7]" time="0.0007190704345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fae710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;8]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd5575ac9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;9]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518f997b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;10]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fa3e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;11]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fc0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;12]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fc0eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;13]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fcb048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;14]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fcbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;15]" time="0.0007596015930175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fd3550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;16]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fcb780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;17]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd5575bc358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;18]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fc0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;19]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd5575d0a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;20]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd519012ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;21]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fae4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;22]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fd30b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;23]" time="0.0007545948028564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fd3a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;24]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd519012470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;25]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd5575d0470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;26]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fc0780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;27]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518feeb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;28]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fcbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;29]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fd3780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;30]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fd32b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;31]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518f5d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;32]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fd32b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;33]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fcb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;34]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fcb080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;35]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fc03c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;36]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fa3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;37]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518f997b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;38]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd5575ac9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;39]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518f5d5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;40]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518f995c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;41]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd557599c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;42]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fd518fc0c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;0]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fcb278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;1]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fd3160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;2]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fd3e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;3]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518f5d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;4]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518f5db38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;5]" time="0.0012056827545166016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd5575617b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;6]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd5575d0860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;7]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fd3e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;8]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fd3a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;9]" time="0.0005464553833007812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fcb358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;10]" time="0.0005698204040527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd5575bc0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;11]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd557599f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;12]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518faeef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;13]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd5575e6198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;14]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fc0a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;15]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fcb940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;16]" time="0.0006213188171386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fcbd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;17]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fd3dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;18]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd557572cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;19]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd557561320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;20]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518f5d860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;21]" time="0.0008437633514404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518f5d5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;22]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fa3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;23]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fd3dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;24]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd557586390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;25]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fcb0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;26]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fae4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;27]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518f5ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;28]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518f5d748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;29]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518f6e278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;30]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518f5d710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;31]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518faed68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;32]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fcbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;33]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd557586cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;34]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fd3b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;35]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd5575d0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;36]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518f6e438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;37]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518f6e780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;38]" time="0.0008664131164550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd5575d0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;39]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd5575868d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;40]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd5575ac160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;41]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518fc0630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;42]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fd518f5d860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;0]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f5dc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;1]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f6e588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;2]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f6ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;3]" time="0.0008234977722167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f6ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;4]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f6e0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;5]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f5d828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;6]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd557599f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;7]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518fcb978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;8]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd557516438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;9]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd557572d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;10]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f785c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;11]" time="0.0007302761077880859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f78b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;12]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd557586e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;13]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518fcb978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;14]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f5de80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;15]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd55752b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;16]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f6edd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;17]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f78860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;18]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f784a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;19]" time="0.0007646083831787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f80080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;20]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f78668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;21]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f6e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;22]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd55752bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;23]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f5d828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;24]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518fcb278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;25]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd557586390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;26]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f80198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;27]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f806a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;28]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd5576fb390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;29]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd5576ebfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;30]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd55752bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;31]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f6ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;32]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f787f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;33]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f78f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;34]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f804a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;35]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f80ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;36]" time="0.0007433891296386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f78dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;37]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f6ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;38]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518fae198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;39]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518fcbd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;40]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd5575ac160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;41]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f80d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;42]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fd518f80240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;0]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f8d128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;1]" time="0.0007147789001464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518fd3eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;2]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f80240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;3]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd557516198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;4]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd55753c748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;5]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518fae470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;6]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f6ec88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;7]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f8d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;8]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f8d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;9]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f784a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;10]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd55752bf28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;11]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518fcbac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;12]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd55754de48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;13]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f80da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;14]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518fd3c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;15]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f8d128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;16]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f972e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;17]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518fd32e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;18]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd557599f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;19]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f8d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;20]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f8dd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;21]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f80eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;22]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f80ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;23]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f6ec88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;24]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f78e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;25]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f780f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;26]" time="0.0007593631744384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f78b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;27]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f6ec88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;28]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f80c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;29]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f8d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;30]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f8da90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;31]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd55754de48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;32]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd5574e1710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;33]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f5d5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;34]" time="0.000988006591796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518fd3e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;35]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd5574e1c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;36]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f8da58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;37]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f8de10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;38]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f80e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;39]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd55752b208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;40]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f78da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;41]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f972e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;42]" time="0.0007543563842773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fd518f97b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;0]" time="0.0005881786346435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f6e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;1]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f80f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;2]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f8d438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;3]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f8d518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;4]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f5dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;5]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518fd3e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;6]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f977b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;7]" time="0.0007295608520507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f240f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;8]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f97908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;9]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd5574e1ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;10]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd55753c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;11]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f8d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;12]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd55752bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;13]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd519036fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;14]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f24208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;15]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f24710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;16]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd5190365f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;17]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd55752bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;18]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f8d780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;19]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd55753c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;20]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f97e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;21]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f97f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;22]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f24518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;23]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f24c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;24]" time="0.0007696151733398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f97e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;25]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd55753c898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;26]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f8d780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;27]" time="0.00040221214294433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd55752bc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;28]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd5190365f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;29]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f24da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;30]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f242b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;31]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f32198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;32]" time="0.0007474422454833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f78cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;33]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f24a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;34]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd5574f1278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;35]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd557507eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;36]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f8da58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;37]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd5574e1668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;38]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f321d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;39]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f32a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;40]" time="0.0007836818695068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f32f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;41]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f32e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;42]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fd518f321d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;0]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd557496630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;1]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f8d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;2]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f80e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;3]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f24da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;4]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f784a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;5]" time="0.0007817745208740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f36518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;6]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f24fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;7]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd557507f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;8]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd55754da58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;9]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd557496d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;10]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f32860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;11]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f97390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;12]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f363c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;13]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f36b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;14]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f32668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;15]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd55753c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;16]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f803c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;17]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd5574a8f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;18]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f24a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;19]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f36b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;20]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f36588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;21]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f45080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;22]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f36630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;23]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd557599c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;24]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f24be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;25]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f800b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;26]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f97da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;27]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f32a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;28]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f451d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;29]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f455c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;30]" time="0.0011153221130371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd5574bb748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;31]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f6eac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;32]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f36b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;33]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f36518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;34]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f327b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;35]" time="0.0031638145446777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f32518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;36]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f24780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;37]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f97b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;38]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f97b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;39]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f242e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;40]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f32a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;41]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd5574962e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;42]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fd518f36ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;0]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd5575160f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;1]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd5574bbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;2]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f45710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;3]" time="0.0008115768432617188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f45080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;4]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd557507cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;5]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f36dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;6]" time="0.0005590915679931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd5574960f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;7]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f32ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;8]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f24da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;9]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f97a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;10]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f45128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;11]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f45cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;12]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f240b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;13]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd5574e1fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;14]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd5575160f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;15]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f36588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;16]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd55745e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;17]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f45da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;18]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f45828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;19]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f53208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;20]" time="0.0007963180541992188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f45f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;21]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f45048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;22]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd55745e860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;23]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f362b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;24]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd5574cb550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;25]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f97f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;26]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f53320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;27]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f53748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;28]" time="0.0007860660552978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f241d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;29]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f32400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;30]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd55746f320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;31]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f36240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;32]" time="0.0005640983581542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd557561320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;33]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f45f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;34]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f53080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;35]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518ede048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;36]" time="0.0008025169372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518ede588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;37]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f53780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;38]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f45ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;39]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd55745ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;40]" time="0.0005593299865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd55746f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;41]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd557496588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;42]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fd518f32a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;0]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518ede080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;1]" time="0.0007977485656738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518edeac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;2]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518f97f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;3]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd55746f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;4]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd557507cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;5]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518f45f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;6]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518f53da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;7]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518ede7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;8]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518ede358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;9]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518ee8128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;10]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518ede358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;11]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518f53518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;12]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518f537b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;13]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd55745eb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;14]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd5574962e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;15]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd557481828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;16]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518f24748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;17]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fd518ee8630&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem0]" time="0.0008432865142822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd5574cb550&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem1]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd5574962e8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem2]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd55745e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem3]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518f53e10&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem4]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518ede128&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem5]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518ede438&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem6]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518ee83c8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem7]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518ee8ba8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem8]" time="0.0007722377777099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518edee10&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem9]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518f53cc0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem10]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518f45978&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem11]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518f36e80&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem12]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd557481e10&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem13]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518ee84e0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem14]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518ee8630&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem15]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fd518ef34a8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem0]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd518ee8f98&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem1]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd518ee8c50&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem2]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd518f36240&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem3]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd518f45f60&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem4]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd54fb7e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem5]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd518edeb70&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem6]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd518ef32e8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem7]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd518ef3d68&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem8]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd54fb7ed30&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem9]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd55746f860&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem10]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd518ef3940&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem11]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fd518ef3198&gt;</skipped></testcase><testcase classname="src.pymortests.basic" file="src/pymortests/basic.py" line="6" name="test_importable" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/basic.py:6: &lt;py._xmlgen.raw object at 0x7fd54fd45c18&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="13" name="test_apply" time="0.0005390644073486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:13: &lt;py._xmlgen.raw object at 0x7fd518ee8978&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="39" name="test_apply_adjoint" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:39: &lt;py._xmlgen.raw object at 0x7fd518f32668&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="65" name="test_block_diagonal" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:65: &lt;py._xmlgen.raw object at 0x7fd518ede7b8&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="76" name="test_blk_diag_apply_inverse" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:76: &lt;py._xmlgen.raw object at 0x7fd518f533c8&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="98" name="test_blk_diag_apply_inverse_adjoint" time="0.0008139610290527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:98: &lt;py._xmlgen.raw object at 0x7fd518edee10&gt;</skipped></testcase><testcase classname="src.pymortests.cache.TestCache" file="src/pymortests/cache.py" line="57" name="test_runtime" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/cache.py:57: &lt;py._xmlgen.raw object at 0x7fd518ee89e8&gt;</skipped></testcase><testcase classname="src.pymortests.cache.TestCache" file="src/pymortests/cache.py" line="83" name="test_region_api" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/cache.py:83: &lt;py._xmlgen.raw object at 0x7fd518ee8400&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="11" name="test_complex" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:11: &lt;py._xmlgen.raw object at 0x7fd518ef3b38&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="65" name="test_real_imag" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:65: &lt;py._xmlgen.raw object at 0x7fd518ef3518&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="82" name="test_scal" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:82: &lt;py._xmlgen.raw object at 0x7fd55745e470&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="95" name="test_axpy" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:95: &lt;py._xmlgen.raw object at 0x7fd518f53978&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="107" name="test_dot" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:107: &lt;py._xmlgen.raw object at 0x7fd518f78b00&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="114" name="test_pairwise_dot" time="0.0008697509765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:114: &lt;py._xmlgen.raw object at 0x7fd518f53c50&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;0 0 0 0&apos;]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd54fb7edd8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;1 2 0 3&apos;]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd54fb95160&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--rect 1 2 0 3&apos;]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518ef3da0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;0 0 2 1&apos;]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd54fbcf390&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 0 0 0 0&apos;]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518ee8518&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 1 2 0 3&apos;]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f45240&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv --rect 1 2 0 3&apos;]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518fae940&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 0 0 2 1&apos;]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518efe748&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic2:&apos;1 20&apos;]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518ede940&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic2:&apos;--fv 1 20&apos;]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518ee8278&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_oned:&apos;1 20&apos;]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd5462c77f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_oned:&apos;--fv 1 20&apos;]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518ef3518&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=lax_friedrichs 0.1&apos;]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f369b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=engquist_osher 0.1&apos;]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f531d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=simplified_engquist_osher 0.1&apos;]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518efeac8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat 1&apos;]" time="0.0007467269897460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f0d048&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --rect 1&apos;]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518efe2e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --fv 1&apos;]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f531d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --rect --fv 1&apos;]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd557481b70&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;dar 1&apos;]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518ef3a90&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;dar --rect 1&apos;]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd5462c7a90&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_unstructured:&apos;6.0 16 0.1&apos;]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd55753ca90&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f0d160&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f0d668&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f32908&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd5462c7e80&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518ef3780&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f533c8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_adaptive:&apos;10&apos;]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd5462d80b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_adaptive:&apos;--visualize-refinement 10&apos;]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518efeeb8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;pymor naive 2 10 10&apos;]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f0d470&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;fenics greedy 2 10 10&apos;]" time="0.0005831718444824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f0db70&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;ngsolve greedy 2 10 10&apos;]" time="0.0008063316345214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518efe668&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;pymor-text adaptive_greedy -1 3 3&apos;]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd5462d8400&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_gui:&apos;--testing 2 2 3 5&apos;]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd54fd45c18&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers_ei:&apos;1 2 2 5 2 5 --plot-ei-err&apos;]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd54fbcf390&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers_ei:&apos;1 2 2 5 2 5 --ei-alg=deim&apos;]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518ee8f28&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;pymor greedy 2 3 1&apos;]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f0dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;pymor pod 2 3 1&apos;]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f0d208&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;fenics adaptive_greedy 2 3 1&apos;]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f150f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[heat:&apos;&apos;]" time="0.0008537769317626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518edec88&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[delay:&apos;&apos;]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f0d780&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[string_equation:&apos;&apos;]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518fae940&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 0.01 10 100&apos;]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd54fbcfc50&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 --threads=2 0.01 10 100&apos;]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd518f36828&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 --procs=2 0.01 10 100&apos;]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fd5462d85f8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="171" name="test_analyze_pickle1" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:171: &lt;py._xmlgen.raw object at 0x7fd518f152b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="181" name="test_analyze_pickle2" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:181: &lt;py._xmlgen.raw object at 0x7fd518f159b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="192" name="test_analyze_pickle3" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:192: &lt;py._xmlgen.raw object at 0x7fd518efe8d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="203" name="test_analyze_pickle4" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:203: &lt;py._xmlgen.raw object at 0x7fd5462d8f28&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;0 0 0 0&apos;]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd54fbcfcf8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;1 2 0 3&apos;]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd5462e7978&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--rect 1 2 0 3&apos;]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518f0d550&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;0 0 2 1&apos;]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518edeef0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 0 0 0 0&apos;]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518f15860&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 1 2 0 3&apos;]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518e9e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv --rect 1 2 0 3&apos;]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518f15eb8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 0 0 2 1&apos;]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518edeef0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic2:&apos;1 20&apos;]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518f0def0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic2:&apos;--fv 1 20&apos;]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd5462e7978&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_oned:&apos;1 20&apos;]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd54fd45cc0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_oned:&apos;--fv 1 20&apos;]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd5462d80b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=lax_friedrichs 0.1&apos;]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518e9e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=engquist_osher 0.1&apos;]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518e9eb70&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=simplified_engquist_osher 0.1&apos;]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ea90f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat 1&apos;]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ef34a8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --rect 1&apos;]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ee8a58&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --fv 1&apos;]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518f0d208&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --rect --fv 1&apos;]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd5462f7a20&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;dar 1&apos;]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518e9e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;dar --rect 1&apos;]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518f156a0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_unstructured:&apos;6.0 16 0.1&apos;]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ea9470&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.0007936954498291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ea99b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518e9e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd54628b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518f0df28&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd5462c77f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd5462d80b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_adaptive:&apos;10&apos;]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ea9710&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_adaptive:&apos;--visualize-refinement 10&apos;]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ea9a90&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;pymor naive 2 10 10&apos;]" time="0.001348257064819336"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ea9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;fenics greedy 2 10 10&apos;]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd5462f7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;ngsolve greedy 2 10 10&apos;]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ea9be0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;pymor-text adaptive_greedy -1 3 3&apos;]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ea9828&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_gui:&apos;--testing 2 2 3 5&apos;]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ea90b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers_ei:&apos;1 2 2 5 2 5 --plot-ei-err&apos;]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518e9ea58&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers_ei:&apos;1 2 2 5 2 5 --ei-alg=deim&apos;]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518e9e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;pymor greedy 2 3 1&apos;]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518f159b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;pymor pod 2 3 1&apos;]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518f15ba8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;fenics adaptive_greedy 2 3 1&apos;]" time="0.0007762908935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518e9e4a8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[heat:&apos;&apos;]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518e9e860&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[delay:&apos;&apos;]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ea9518&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[string_equation:&apos;&apos;]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ea9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 0.01 10 100&apos;]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd54628b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 --threads=2 0.01 10 100&apos;]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518ef3eb8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 --procs=2 0.01 10 100&apos;]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7fd518f15828&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7fd518f0de10&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7fd518f0de10&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7fd518f15320&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7fd518ee8518&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7fd54629c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7fd518ea9d30&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="240" name="test_burgers_ei_results" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:240: &lt;py._xmlgen.raw object at 0x7fd518e9ea20&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="249" name="test_parabolic_mor_results" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:249: &lt;py._xmlgen.raw object at 0x7fd518e9e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;0]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518efeb38&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;1]" time="0.0007662773132324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518f452e8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;2]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518efec18&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;3]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518e9ef98&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;4]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518ea9a20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;5]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd54629cc18&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;6]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd54628ba20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;7]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518f15550&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;8]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518f0def0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;9]" time="0.0007617473602294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518ede588&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;10]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518f15e80&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;11]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518ef3eb8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;12]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd54628b828&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;13]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518ea97b8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;14]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518e9ea20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;15]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518efe8d0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;16]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518efe780&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;17]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518eb5550&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;18]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518efe470&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;19]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518e9ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;20]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518ea9630&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;21]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd5462f7d68&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;22]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518f15e80&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;23]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fd518f240b8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518eb52b0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518eb5a58&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.0007677078247070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd546230ac8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518f15860&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd55745e860&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518f531d0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd54fbcc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518eb5c50&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518eb56a0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518eb5f98&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.0007455348968505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518eb5550&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518eb5908&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518efe550&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd54629cac8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd54628beb8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd54fbdbf60&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518ec7128&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518ec7898&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.0007634162902832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518ec7dd8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd546241c18&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;20]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518ea9a20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;21]" time="0.0005447864532470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fd518e9ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;0]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518efeb38&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;1]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518eb5668&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;2]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ec7ba8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;3]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ec7518&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;4]" time="0.0007586479187011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ed1358&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;5]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ec7b70&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;6]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518eb5da0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;7]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518f977b8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;8]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd54629c550&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;9]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd54628b198&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;10]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518f153c8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;11]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ed1198&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;12]" time="0.000400543212890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ed1978&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;13]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd546241630&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;14]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518e9e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;15]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd54621ce10&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;16]" time="0.0004019737243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518eb58d0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;17]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ec7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;18]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ed1a90&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;19]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ed1400&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;20]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ed1e80&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;21]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ed1cf8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;22]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ec7518&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;23]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fd518ec7ba8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function0]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd546090a58&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function1]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd518f531d0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function2]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd546241a20&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function3]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd518f15668&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function4]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd518e5c438&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function5]" time="0.0011205673217773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd54fbdbf60&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function6]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd5460b6128&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function7]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd518ed17b8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function8]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd518ed1b70&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function9]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd518eb5630&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function10]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd518ec76a0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function11]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fd518ec70f0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="35" name="test_lincomb_function" time="0.0005452632904052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:35: &lt;py._xmlgen.raw object at 0x7fd518f531d0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function0]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd518f53fd0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function1]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd518ec78d0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function2]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd518eb57b8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function3]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd518ed1390&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function4]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd518ed1860&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function5]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd5460b6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function6]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd518f977b8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function7]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd5462e7160&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function8]" time="0.0007486343383789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd518e5c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function9]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd54629c550&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function10]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd546090b00&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function11]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7fd518ed1c18&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function0]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7fd5460c60b8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function1]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7fd518ede5c0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function2]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7fd518ec7240&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function3]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7fd518e5c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function4]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7fd518e5cb38&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function5]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7fd518ec7128&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function6]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7fd518eb5550&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function7]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7fd518ed1668&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function0]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd518efeef0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function1]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd5462d8a90&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function2]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd518e5ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function3]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd518e5c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function4]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd518e69080&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function5]" time="0.0008928775787353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd518e5cd68&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function6]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd518e5c048&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function7]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd546090b00&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function8]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd518ed1048&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function9]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd518eb5e10&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function10]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd5460b0c18&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function11]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7fd518ec75f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;0]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e695c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;1]" time="0.0008192062377929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518ec7240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;2]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd5460b05c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;3]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd5462302e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;4]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518ed1240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;5]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e5c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;6]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e5c940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;7]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e694a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;8]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e69e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;9]" time="0.0007853507995605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e71400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;10]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e69208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;11]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e5c048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;12]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd5460b6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;13]" time="0.0004012584686279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd546241a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;14]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd5460dbcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;15]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518ec78d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;16]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e712b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;17]" time="0.0007445812225341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e71940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;18]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd5460dbdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;19]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518ede588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;20]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd5460b6978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;21]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e5c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;22]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e694a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;23]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e715c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;24]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e710f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;25]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e71f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;26]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e71b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;27]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e69b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;28]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e69390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;29]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e5c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;30]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd5460ee828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;31]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd5460c6b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;32]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518ec74a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;33]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e7c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;34]" time="0.0008056163787841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd5460b0160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;35]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd5460eea20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;36]" time="0.0003991127014160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e5cd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;37]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e695f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;38]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e71ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;39]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e71c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;40]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e7c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;41]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e7c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;42]" time="0.0007598400115966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fd518e71cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;0]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd545e4f208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;1]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e69748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;2]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518ed17f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;3]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd5460ee828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;4]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e7ca20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;5]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e7c748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;6]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e872e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;7]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd5460b0160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;8]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e7c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;9]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518eb5da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;10]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e5cf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;11]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e69da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;12]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e711d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;13]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e870f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;14]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e87ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;15]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd545e4fa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;16]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd546241a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;17]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e87be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;18]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e873c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;19]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e7c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;20]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e7c630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;21]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518f24828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;22]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e71978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;23]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e69b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;24]" time="0.0008554458618164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e71ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;25]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e7ce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;26]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd5460dbdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;27]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e872e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;28]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518eb5da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;29]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd54613c940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;30]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e69828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;31]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd54fbdbf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;32]" time="0.0007460117340087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd5462e7400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;33]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518ed1da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;34]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd5460ee828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;35]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e87898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;36]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd54612c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;37]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e7ce80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;38]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e71eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;39]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518f0d780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;40]" time="0.0007638931274414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e90470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;41]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e71e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;42]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fd518e7c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;0]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5460b6978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;1]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e87cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;2]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd54613c048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;3]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e699e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;4]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e90320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;5]" time="0.0008642673492431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e909b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;6]" time="0.00039958953857421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5461be048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;7]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e87860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;8]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5460b6978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;9]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e7cb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;10]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518f45cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;11]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e90630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;12]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e90160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;13]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e20048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;14]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e90cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;15]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e90550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;16]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518f24828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;17]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd54612c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;18]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e87470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;19]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5461be320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;20]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e69898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;21]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e20518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;22]" time="0.0007772445678710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e69780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;23]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e87be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;24]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e7ce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;25]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518ec7278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;26]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e90c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;27]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e907f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;28]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e20128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;29]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e20a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;30]" time="0.0007195472717285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e90208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;31]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518f0d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;32]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e7ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;33]" time="0.0003993511199951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e87588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;34]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd54613c048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;35]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e20a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;36]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e20208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;37]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e2b358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;38]" time="0.0007541179656982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e2b898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;39]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518e20438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;40]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd5461ab400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;41]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd54612c898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;42]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fd518ec75f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;0]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e90dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;1]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e2b588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;2]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e2b1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;3]" time="0.0007436275482177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e2bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;4]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd5460b5358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;5]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e7ce80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;6]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd5461abd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;7]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e20f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;8]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e205f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;9]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e2bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;10]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e2b748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;11]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e35438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;12]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e2b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;13]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e20128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;14]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd5460ee2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;15]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd54613c400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;16]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e7ce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;17]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e90b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;18]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e35198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;19]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e35940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;20]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e90860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;21]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd54613cf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;22]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e203c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;23]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd54610a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;24]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e2bac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;25]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e359e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;26]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e355c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;27]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e35e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;28]" time="0.001132965087890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e35cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;29]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e35320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;30]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518f0d780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;31]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd54611edd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;32]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e2bac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;33]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e200f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;34]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e20e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;35]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e69be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;36]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e69da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;37]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e201d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;38]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e2ba58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;39]" time="0.00039958953857421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e2b780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;40]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518f0d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;41]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd54610abe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;42]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fd518e35da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;0]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e5c898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;1]" time="0.0007214546203613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e3d048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;2]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e5c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;3]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e35748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;4]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd54610a208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;5]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd54611ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;6]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e2bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;7]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e200f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;8]" time="0.0003991127014160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e69da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;9]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e3d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;10]" time="0.0005519390106201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e205f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;11]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e2bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;12]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e7ce80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;13]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e90470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;14]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e5c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;15]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e71400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;16]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e3d320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;17]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e3dac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;18]" time="0.0007450580596923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd545e5ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;19]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e35cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;20]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e87630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;21]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e2bc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;22]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e200f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;23]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e3db70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;24]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e3d320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;25]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e4f048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;26]" time="0.0007481575012207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd5461abd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;27]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e3df28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;28]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e3db70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;29]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e2b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;30]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e90dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;31]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e35da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;32]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e4f128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;33]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e4f908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;34]" time="0.0007698535919189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e4fe48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;35]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e35390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;36]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e7ce80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;37]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e20b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;38]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e3de80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;39]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e69898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;40]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e4fc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;41]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e4f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;42]" time="0.0007669925689697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fd518e583c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;0]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e4fcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;1]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e3de48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;2]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e3d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;3]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e2b978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;4]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd545e75978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;5]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd545e5c630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;6]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e58208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;7]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e589e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;8]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e5c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;9]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e2b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;10]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e3dd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;11]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd5461ab400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;12]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e4fac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;13]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e58a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;14]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e58320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;15]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e58ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;16]" time="0.0007479190826416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e58da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;17]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e4fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;18]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e4fba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;19]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e3db70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;20]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd545e3a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;21]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd54611edd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;22]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e35cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;23]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518de0470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;24]" time="0.0007855892181396484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e35cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;25]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e7cf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;26]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd54619a550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;27]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e3dd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;28]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e4fa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;29]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e586a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;30]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518de02b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;31]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518de0d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;32]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518de0d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;33]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518de04a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;34]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e58898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;35]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd54618ec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;36]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd54619add8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;37]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd545e3a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;38]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd54610a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;39]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518dea630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;40]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518e2b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;41]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd54618ec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;42]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fd518de0470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;0]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518de09b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;1]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e58898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;2]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e58c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;3]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e4fb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;4]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e4f160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;5]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e3df28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;6]" time="0.0007889270782470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e4f320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;7]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd545e3a048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;8]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e58080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;9]" time="0.0004017353057861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518de06a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;10]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518de0a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;11]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd5461b25f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;12]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd545e75208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;13]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd5461ab748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;14]" time="0.0007653236389160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd5461ab748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;15]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd54619a358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;16]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518de0470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;17]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518de0780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;18]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e583c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;19]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd545e3ad30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;20]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e4f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;21]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518dea550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;22]" time="0.0007827281951904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518deaeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;23]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e9e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;24]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e58c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;25]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd5461b2358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;26]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518de0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;27]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd54619ac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;28]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518deac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;29]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518dea438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;30]" time="0.0007781982421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518dfe438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;31]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518deac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;32]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd54619a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;33]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518de02e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;34]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e58dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;35]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd5461749b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;36]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e4fba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;37]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518dfe278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;38]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518dfea58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;39]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd546174470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;40]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518e90320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;41]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd518de0828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;42]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fd54619a358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;0]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dea160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;1]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dfe9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;2]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dfe518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;3]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dfef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;4]" time="0.0007889270782470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dfeda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;5]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dfeb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;6]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518deafd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;7]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518de0390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;8]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e58dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;9]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd546174860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;10]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e4f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;11]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e054e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;12]" time="0.0007271766662597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd545e5c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;13]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd546183908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;14]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e58668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;15]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd54619ac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;16]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd546169fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;17]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dfe940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;18]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e05358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;19]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e05da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;20]" time="0.0008227825164794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e0e320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;21]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e05240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;22]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dfe978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;23]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dea748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;24]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518de0c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;25]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd5461839b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;26]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd54614e588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;27]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e0e198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;28]" time="0.0007696151733398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e0e860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;29]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd546174278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;30]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd546183860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;31]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dea2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;32]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dfe7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;33]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e05278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;34]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e0e940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;35]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e0e278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;36]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e0ee80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;37]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e0ed30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;38]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd5461cc2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;39]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518e05a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;40]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dfeda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;41]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd518dea668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;42]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fd546174b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;0]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd54614e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;1]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518d9b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;2]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd546174278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;3]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd54619ac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;4]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd5461ab748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;5]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e05f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;6]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e0e0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;7]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e0eb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;8]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518d9b048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;9]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518d9b908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;10]" time="0.0010845661163330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd546183ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;11]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd54614eb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;12]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e0e278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;13]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd546174860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;14]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e05550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;15]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd546169f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;16]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518dfe4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;17]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518dea358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;18]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518dea668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;19]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518dfe128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;20]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e05da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;21]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e05f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;22]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e0e860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;23]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd5461df940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;24]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e58a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;25]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518d9b978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;26]" time="0.0008733272552490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518d9b518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;27]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd5461df6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;28]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e0ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;29]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd5461f0400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;30]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e050f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;31]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e90fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;32]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518d9b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;33]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518d9b278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;34]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518da9080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;35]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518d9ba90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;36]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518dfee48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;37]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e05588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;38]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd546174278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;39]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e0e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;40]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd5461dfe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;41]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518e4f780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;42]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fd518da9550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;0]" time="0.0008835792541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd5461df6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;1]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd5461f0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;2]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518e058d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;3]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd5460b5390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;4]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518d9b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;5]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518d9bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;6]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518da92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;7]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518da9a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;8]" time="0.0008378028869628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518d9ba58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;9]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518deaf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;10]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518e05550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;11]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd5461f0940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;12]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518e0eda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;13]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518da9a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;14]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518da9668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;15]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518db4390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;16]" time="0.0007512569427490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518db48d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;17]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518da9320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;18]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518e0ef98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;19]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518e05358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;20]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518dfe438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;21]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518d9b828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;22]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518db45f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;23]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518db4240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;24]" time="0.0007767677307128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518db4e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;25]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518db49b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;26]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518d9bba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;27]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd545dc5ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;28]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518e90fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;29]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd5461f0748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;30]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518da9a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;31]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd5461df550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;32]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518dbc470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;33]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518da9240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;34]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd5461f05f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;35]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518dfeeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;36]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518deaf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;37]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518db4240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;38]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518db4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;39]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518dbc048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;40]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518dbc978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;41]" time="0.0007851123809814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518db4470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;42]" time="0.0003979206085205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fd518deaef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;0]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518e05e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;1]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518da9898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;2]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd545dd7518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;3]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dbcac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;4]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dbc1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;5]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dbceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;6]" time="0.0007784366607666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dbcf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;7]" time="0.0004029273986816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dbc748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;8]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518e0e940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;9]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518da9630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;10]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518e05ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;11]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dea668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;12]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518db4278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;13]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dc77b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;14]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518db4278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;15]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd545dc5c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;16]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd545de7d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;17]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd545dd73c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;18]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dbc7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;19]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dbc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;20]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dc7630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;21]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dd00b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;22]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd545d78198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;23]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518e05780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;24]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dbc320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;25]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dc7da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;26]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dc74a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;27]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dc71d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;28]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518db4c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;29]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd545dc5278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;30]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518da9cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;31]" time="0.0008227825164794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518da92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;32]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518db4e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;33]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dc7240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;34]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dc7cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;35]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dbc898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;36]" time="0.0005621910095214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518e050b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;37]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd545d78b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;38]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd54614eb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;39]" time="0.0008151531219482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd5461b25f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;40]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd545de76d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;41]" time="0.0005669593811035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dbca20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;42]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fd518dc7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;0]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dc7128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;1]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518db4588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;2]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518da9908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;3]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dd0240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;4]" time="0.0007791519165039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dd0940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;5]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd5462002e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;6]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd545d88e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;7]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dc7470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;8]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518e050b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;9]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd545de7e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;10]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518d9b160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;11]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dd0550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;12]" time="0.0007970333099365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dd0e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;13]" time="0.0004012584686279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dd0240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;14]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd545d78e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;15]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dbc4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;16]" time="0.00040030479431152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dc79e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;17]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd545d9b748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;18]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518db4588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;19]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dea278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;20]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518d614e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;21]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd5461df6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;22]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd545d880f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;23]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dc7438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;24]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dbca90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;25]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd54614eb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;26]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dd0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;27]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518d61240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;28]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518d619e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;29]" time="0.0007605552673339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dd0128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;30]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd545de7e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;31]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dc71d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;32]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd545d9bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;33]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518db4160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;34]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518d61a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;35]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518d61240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;36]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518d61f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;37]" time="0.0007722377777099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518e3d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;38]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518d61668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;39]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd5461dffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;40]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd5461f0be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;41]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd518dc7208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;42]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fd545de7630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;0]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d6a128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;1]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d6a828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;2]" time="0.0007493495941162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d6ad68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;3]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518dbc5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;4]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd545dab898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;5]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd545d9b208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;6]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d61860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;7]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d61cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;8]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d6ab38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;9]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d6a160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;10]" time="0.0007758140563964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d752e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;11]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d6a588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;12]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518db47b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;13]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d618d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;14]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd545dab2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;15]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518dbca90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;16]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518dd0b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;17]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d75128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;18]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d75908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;19]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd545d3eb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;20]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518dbcf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;21]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d61f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;22]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d61198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;23]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d6ae10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;24]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d75860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;25]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d75128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;26]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d75e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;27]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d75c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;28]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d75a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;29]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d6aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;30]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d61cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;31]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd545dab400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;32]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd545d3eba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;33]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd545d78198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;34]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d80390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;35]" time="0.0017023086547851562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518dc7a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;36]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd545d9b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;37]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d757b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;38]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d75358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;39]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d61a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;40]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d6ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;41]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518d6a208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;42]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fd518dd0710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;0]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518dd0940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;1]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d6a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;2]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd545dab7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;3]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d61748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;4]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d75e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;5]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd545d4df98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;6]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518dc7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;7]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518da9d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;8]" time="0.0007755756378173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d80208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;9]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518dbc0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;10]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd545d72390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;11]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d75e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;12]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d614e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;13]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d6a278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;14]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518dd00f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;15]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d803c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;16]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d80a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;17]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd545d5cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;18]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d61cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;19]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d754a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;20]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd545d72630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;21]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518dc7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;22]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d80c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;23]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d80080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;24]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d80fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;25]" time="0.0007817745208740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d80eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;26]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518da9898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;27]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd545d3ea58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;28]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd545d728d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;29]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d75f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;30]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d6a470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;31]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd545dab2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;32]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d8e518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;33]" time="0.0007483959197998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd545d5ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;34]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d61860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;35]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d75c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;36]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd545d72828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;37]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518da9eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;38]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d80be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;39]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d8e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;40]" time="0.0004031658172607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d8edd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;41]" time="0.0007941722869873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d19358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;42]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fd518d8e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;0]" time="0.00039505958557128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d804e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;1]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518dbccf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;2]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd545d72d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;3]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d75240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;4]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d6a470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;5]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d19208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;6]" time="0.0007915496826171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d19898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;7]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d6a588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;8]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd545d018d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;9]" time="0.0004019737243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd545d11b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;10]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d80080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;11]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d8e630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;12]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d199b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;13]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d19080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;14]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d19eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;15]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d19da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;16]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d8ea20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;17]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d8ec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;18]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518da9da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;19]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd545d72588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;20]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d75ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;21]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518dd0dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;22]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d25400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;23]" time="0.0007479190826416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d6a160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;24]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd545d72fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;25]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518dc7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;26]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d8ef98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;27]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d19630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;28]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d19b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;29]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d25400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;30]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d25940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;31]" time="0.0007014274597167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d19c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;32]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd545d23b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;33]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d8eac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;34]" time="0.00039696693420410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d80080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;35]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd545d018d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;36]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d25a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;37]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d25550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;38]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d2c240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;39]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd545d72a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;40]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d257b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;41]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd545d11e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;42]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fd518d8e550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;0]" time="0.00040030479431152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd545d237f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;1]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d19278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;2]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d2c048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;3]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d2cb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;4]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd545d23358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;5]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd545d018d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;6]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d2ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;7]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d2c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;8]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d75a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;9]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d25f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;10]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d25da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;11]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d19780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;12]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d8eb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;13]" time="0.0007634162902832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d19c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;14]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d25c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;15]" time="0.00039505958557128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d2cb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;16]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d2cb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;17]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd545d11940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;18]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518da9898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;19]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d8e630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;20]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d80780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;21]" time="0.0007405281066894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d80780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;22]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd545d237f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;23]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd545cb8668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;24]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d2c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;25]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d2c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;26]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d257f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;27]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d19eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;28]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518db4978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;29]" time="0.0007865428924560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d373c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;30]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d19080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;31]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d25da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;32]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d2c400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;33]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd545d11940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;34]" time="0.00040149688720703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd545cb8518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;35]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d8e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;36]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d37278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;37]" time="0.0007615089416503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d37908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;38]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd545d014e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;39]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd545d9b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;40]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d2cb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;41]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd518d25d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;42]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fd545cd55c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;0]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d37a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;1]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d370b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;2]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d37f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;3]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d37e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;4]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d6a160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;5]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd545cd5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;6]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d25a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;7]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d2cb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;8]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd545cb8f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;9]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d8e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;10]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d48470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;11]" time="0.0007548332214355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d8e860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;12]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d2cb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;13]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d25f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;14]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518dd0940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;15]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d37588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;16]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d37c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;17]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d48198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;18]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d489b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;19]" time="0.001012563705444336"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d37c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;20]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd545c7a240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;21]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d9b780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;22]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d256d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;23]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d2cb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;24]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d489e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;25]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d48710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;26]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d512b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;27]" time="0.0007836818695068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d517f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;28]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d48240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;29]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d2c978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;30]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd545cd5a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;31]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd545ce7d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;32]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d37828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;33]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d51438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;34]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d51128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;35]" time="0.0007581710815429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d51d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;36]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd545c7ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;37]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd545d5c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;38]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d25748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;39]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d48ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;40]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d48588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;41]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d51b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;42]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fd518d51518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;0]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cda390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;1]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d51390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;2]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d48fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;3]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd545c8b390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;4]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd545cd5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;5]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd545ce7cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;6]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d37198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;7]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cda0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;8]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cda898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;9]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd545c7afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;10]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd545cd5470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;11]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd545c8b390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;12]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd545c8f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;13]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d51ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;14]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cdaa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;15]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cda160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;16]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cdadd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;17]" time="0.0011267662048339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cdabe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;18]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cda898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;19]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d2cf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;20]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d25cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;21]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d514a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;22]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d512e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;23]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d48198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;24]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d37160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;25]" time="0.0033762454986572266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d37080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;26]" time="0.0008988380432128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d481d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;27]" time="0.0006515979766845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d51630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;28]" time="0.0005598068237304688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d6a940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;29]" time="0.0006878376007080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd545c8f940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;30]" time="0.0006210803985595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cda898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;31]" time="0.0007505416870117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd545c8f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;32]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d518d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;33]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd545cad550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;34]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d48198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;35]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cda668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;36]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd545cb8668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;37]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d2cf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;38]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518dd01d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;39]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cdabe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;40]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518cda588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;41]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d48dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;42]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fd518d517f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;0]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd545c7aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;1]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd5461cc780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;2]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518dea978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;3]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518de0390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;4]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518dd0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;5]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd545c7a198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;6]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd545cad358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;7]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518d48d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;8]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518cda400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;9]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518d2ce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;10]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd5460a23c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;11]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd5460a2278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;12]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518d2ce10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;13]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518cdadd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;14]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd545cad550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;15]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd545c7aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;16]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518d25748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;17]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518dea898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;18]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd5574bb550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;19]" time="0.0005631446838378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518f5da58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;20]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd5461cc4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;21]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd545c8f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;22]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518d51e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;23]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518d487b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;24]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518cda0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;25]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd545cb8128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;26]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518fae9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;27]" time="0.0008223056793212891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd557666a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;28]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd5575728d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;29]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518e87e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;30]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518cda5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;31]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd545c503c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;32]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd545c3dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;33]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd5461cc630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;34]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd5190404a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;35]" time="0.0007867813110351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd557744da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;36]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd5574bb940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;37]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518dea978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;38]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518d515f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;39]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd545c507b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;40]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518d2cf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;41]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd518e87f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;42]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fd5577447b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;0]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd5190b7b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;1]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd557572a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;2]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd5460a2668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;3]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd518cdabe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;4]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd545c503c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;5]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd518d51e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;6]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd545c8f358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;7]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd519053208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;8]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd519108ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;9]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd5578002b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;10]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd518f8de48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;11]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd545c62470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;12]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd545c50a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;13]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd518d2cf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;14]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd557666e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;15]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd51906f588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;16]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd51911fda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;17]" time="0.0007874965667724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd55cd5bf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;18]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd557666e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;19]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd518d2cf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;20]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd545c507b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;21]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd518efe160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;22]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd5190404a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;23]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd557800be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;24]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd56414b828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;25]" time="0.0007872581481933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd51912a240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;26]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd519108a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;27]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd545c8f358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;28]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd545c505c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;29]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd518cda0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;30]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd545c75198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;31]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd5190b7e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;32]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd545d23940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;33]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd545d23b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;34]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd518faec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;35]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd518e87ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;36]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd5576c4320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;37]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd55cd6fda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;38]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd545c05240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;39]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd5191c4da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;40]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd557744cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;41]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd518f97550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;42]" time="0.0008723735809326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fd557666e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;0]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd5191c4f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;1]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c05828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;2]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd519108ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;3]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c505c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;4]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c75ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;5]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd51c7e0400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;6]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd518ea9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;7]" time="0.0008065700531005859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd518f975c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;8]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd51906f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;9]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c75a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;10]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c14e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;11]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd519108cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;12]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd564097588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;13]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd557666e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;14]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545d4d470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;15]" time="0.0010724067687988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c8fe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;16]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545d4d908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;17]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd5191c4128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;18]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c05c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;19]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd51912a240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;20]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c507b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;21]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd51906f588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;22]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd518f97630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;23]" time="0.0008056163787841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd518d08048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;24]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd51cc27f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;25]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c754e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;26]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c50ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;27]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c05240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;28]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd5191c4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;29]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545d4d470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;30]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd518d08160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;31]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd518d08668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;32]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545d4db00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;33]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c27160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;34]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd51912a080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;35]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c14e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;36]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c75f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;37]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd518d19b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;38]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd518d08470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;39]" time="0.000560760498046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd518d08b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;40]" time="0.0007798671722412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd5460a2860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;41]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd545c14e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;42]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fd51912a240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;0]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545c275f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;1]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545d4d470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;2]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d08e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;3]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d08470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;4]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d100f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;5]" time="0.0007548332214355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd557800400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;6]" time="0.0003981590270996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d08f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;7]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d082b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;8]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545c27e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;9]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545c62320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;10]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545c14a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;11]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d101d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;12]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d109b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;13]" time="0.0007786750793457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d10ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;14]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545c05c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;15]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd51912a080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;16]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545de7e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;17]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d08a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;18]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545bcca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;19]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d10cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;20]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d10668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;21]" time="0.0008006095886230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d18470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;22]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d10d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;23]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545bcc860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;24]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d08cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;25]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518e35b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;26]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd5191c4dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;27]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518cda898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;28]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d182e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;29]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d18a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;30]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545c35160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;31]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545ce7cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;32]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d08518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;33]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545bccba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;34]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d10cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;35]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d18b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;36]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d180f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;37]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d18fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;38]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d18160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;39]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545c8ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;40]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d10be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;41]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd545bdc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;42]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fd518d08e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;0]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545c27550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;1]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518f976a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;2]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd5191ac518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;3]" time="0.0012278556823730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545c75630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;4]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545bdc128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;5]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d18be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;6]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d18cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;7]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545bcce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;8]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d10828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;9]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d19128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;10]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d80dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;11]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d80208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;12]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd51cc27e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;13]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d10f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;14]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d18358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;15]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d18b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;16]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545bdc320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;17]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545c27e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;18]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518efe0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;19]" time="0.0008182525634765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd5191ac400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;20]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545ce7c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;21]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545bdcb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;22]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d18630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;23]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d10c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;24]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545b80828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;25]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d08588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;26]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd5191ac2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;27]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd5191acc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;28]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545b80390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;29]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d104e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;30]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d18be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;31]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd557666e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;32]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545c75f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;33]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd5191accc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;34]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd5191ac7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;35]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518cab160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;36]" time="0.0008087158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd5191ac208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;37]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd5191acb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;38]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545bdc470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;39]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d18b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;40]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518d10f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;41]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd545b80588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;42]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fd518cab2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;0]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cab6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;1]" time="0.000762939453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518d08160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;2]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd545b80e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;3]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd545bebd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;4]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518f8d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;5]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd5191ac5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;6]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd5191aceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;7]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cab400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;8]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cabf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;9]" time="0.0007603168487548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cb24e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;10]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cab6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;11]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd5191acd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;12]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd545bdcba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;13]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518d18e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;14]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518d10f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;15]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518d80160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;16]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cb2400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;17]" time="0.0008440017700195312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cb2a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;18]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd545ba1c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;19]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd545bebcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;20]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd545c62320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;21]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd5191ac7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;22]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cabbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;23]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cb2be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;24]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cb2240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;25]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cbb080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;26]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cb2278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;27]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd545bb1400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;28]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cabc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;29]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd5191ac978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;30]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518d18c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;31]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd545ba16a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;32]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518d08ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;33]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cbb588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;34]" time="0.0007634162902832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd545c8ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;35]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518d18d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;36]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd5191acda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;37]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cabd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;38]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cb2400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;39]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cb2d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;40]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cbb2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;41]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cbbac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;42]" time="0.0009047985076904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fd518cb2ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;0]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd545bb1dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;1]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cabd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;2]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd5191ac8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;3]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd545ba1550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;4]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cbbac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;5]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cbb6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;6]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cc73c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;7]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518d106a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;8]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cbb208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;9]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd5191ac668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;10]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cab710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;11]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd545b40ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;12]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cb22e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;13]" time="0.0008082389831542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cc71d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;14]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cc7c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;15]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd545b40ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;16]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518d18518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;17]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cc79b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;18]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cc7438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;19]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cbbc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;20]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cbb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;21]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cb2ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;22]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd545b904e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;23]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cab320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;24]" time="0.0008294582366943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cb28d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;25]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cbbf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;26]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cbbf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;27]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cc7080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;28]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cc7da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;29]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd545b55320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;30]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cabe48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;31]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd545c3d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;32]" time="0.0007836818695068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd545c3d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;33]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd545bb1400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;34]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd545b55a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;35]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cc77f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;36]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cc7748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;37]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cbb320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;38]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cb2a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;39]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd54fb7ee80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;40]" time="0.0007710456848144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518ccd550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;41]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cb2a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;42]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fd518cbb320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;0]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518cc7748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;1]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518e355f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;2]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545bb1208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;3]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518cab9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;4]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518ccd400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;5]" time="0.0008137226104736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518ccda90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;6]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545b64128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;7]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518e355f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;8]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518cc7668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;9]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518cbbd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;10]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd54fb7ee80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;11]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518ccd710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;12]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518ccd240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;13]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518c5c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;14]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518ccdeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;15]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518ccdb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;16]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518cbb9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;17]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518cc7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;18]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545af74e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;19]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545bb1dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;20]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545b40e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;21]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518c5c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;22]" time="0.0008552074432373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518cab2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;23]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545af7438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;24]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545bcce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;25]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518cbb978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;26]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518ccd320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;27]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518ccdf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;28]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518c5c358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;29]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518c5cb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;30]" time="0.0007700920104980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518ccdda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;31]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545b80780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;32]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545bebf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;33]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545af7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;34]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545b55320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;35]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518c5cb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;36]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518c5c710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;37]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518c68438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;38]" time="0.000774383544921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518c68978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;39]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518c5c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;40]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd545b08b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;41]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518cc7128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;42]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fd518cbbcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;0]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518ccd978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;1]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c686a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;2]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c682b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;3]" time="0.0008172988891601562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c68eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;4]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c68a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;5]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c688d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;6]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518ccdeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;7]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd545af7e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;8]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd545b08438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;9]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c5c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;10]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518cab748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;11]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c72518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;12]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c5c978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;13]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518cc73c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;14]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518cbb630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;15]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518ccd630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;16]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c68d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;17]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c68358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;18]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c72320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;19]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c72a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;20]" time="0.0006077289581298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c681d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;21]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd545b800f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;22]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd545af74e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;23]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd545b2a940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;24]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c5c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;25]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c726a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;26]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c72160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;27]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c72f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;28]" time="0.0012388229370117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c72e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;29]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd545b55ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;30]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd545b2a940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;31]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518d08ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;32]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c68d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;33]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c68978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;34]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c5ca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;35]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd545b64470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;36]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518dea240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;37]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c5c278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;38]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd545b16278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;39]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c68f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;40]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518cbbb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;41]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd545b2a208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;42]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fd518c72a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;0]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd5191ace48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;1]" time="0.0008192062377929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c7c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;2]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518efe0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;3]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c72160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;4]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd545b2add8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;5]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c689b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;6]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd545b16d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;7]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c5cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;8]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518dea240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;9]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c7c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;10]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c5ce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;11]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c68b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;12]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518d08588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;13]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd545c625f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;14]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd5191ac1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;15]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd545cadd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;16]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c7c438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;17]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c7cba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;18]" time="0.0009710788726806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd545aca9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;19]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c72e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;20]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518e355f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;21]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c68898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;22]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518dea240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;23]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c7cc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;24]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c7c438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;25]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c8b128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;26]" time="0.0007798671722412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c7c860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;27]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c7cc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;28]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518dea240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;29]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c68898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;30]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd545add278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;31]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c72208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;32]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c8b320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;33]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c8b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;34]" time="0.0008051395416259766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c8bf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;35]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd545b2af28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;36]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd545add470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;37]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c681d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;38]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c5ce80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;39]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c7cd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;40]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c8bd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;41]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c8b160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;42]" time="0.0007879734039306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fd518c974a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;0]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c8b630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;1]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c7c278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;2]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c5cda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;3]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518cc7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;4]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545add128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;5]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545aca860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;6]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c97358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;7]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c97ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;8]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545b2ac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;9]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518cc7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;10]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c5c860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;11]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c7c860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;12]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c8bb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;13]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c97be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;14]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c97128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;15]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c1e080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;16]" time="0.000823974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c97198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;17]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545aebf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;18]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c8bda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;19]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c5ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;20]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545b16dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;21]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545a7f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;22]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c72940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;23]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c1e550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;24]" time="0.0007658004760742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545aca860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;25]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545addef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;26]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545ab84a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;27]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c7c438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;28]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c8b630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;29]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c97be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;30]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c1e400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;31]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c1ee10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;32]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c1ee80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;33]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c1e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;34]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c979e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;35]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c8b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;36]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545b082e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;37]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545a7fd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;38]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c72940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;39]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c2a710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;40]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd518c72160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;41]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545aeb358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;42]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fd545a7f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;0]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c1eba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;1]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c1e780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;2]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c97198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;3]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545aca5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;4]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c8b080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;5]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c7c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;6]" time="0.0008580684661865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c8b470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;7]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c97f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;8]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c97ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;9]" time="0.0025734901428222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c1ec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;10]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545a7ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;11]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545a8f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;12]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c685c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;13]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545b649e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;14]" time="0.0007925033569335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545b64518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;15]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545addba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;16]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545a7f198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;17]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c1ef98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;18]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c979b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;19]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545aa1dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;20]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c8b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;21]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c2a048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;22]" time="0.0008122920989990234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c2afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;23]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c2a828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;24]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c8b320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;25]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c97dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;26]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c1ea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;27]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545a7ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;28]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545add518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;29]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545b64518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;30]" time="0.0007791519165039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c38518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;31]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545a8f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;32]" time="0.000400543212890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c1e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;33]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c973c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;34]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545ab3358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;35]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c2a048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;36]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c2aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;37]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c383c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;38]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c38b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;39]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c2ad30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;40]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd545ab3f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;41]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c97e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;42]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fd518c1e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;0]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545b2abe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;1]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c38c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;2]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c38198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;3]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c45080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;4]" time="0.0007765293121337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c38e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;5]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c38c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;6]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545a8f198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;7]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c1ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;8]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545ab39e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;9]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545aa1a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;10]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c2a748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;11]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c455c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;12]" time="0.0007658004760742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c2a748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;13]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c8b320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;14]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545a7f198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;15]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c7c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;16]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545a56128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;17]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c38b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;18]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c454a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;19]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c45e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;20]" time="0.0007684230804443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c4d400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;21]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c451d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;22]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c38c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;23]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545a56ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;24]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545a41ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;25]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545ab3898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;26]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c2a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;27]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c4d278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;28]" time="0.0008492469787597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c4d940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;29]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c97d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;30]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545a41fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;31]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545a56470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;32]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c389e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;33]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c454a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;34]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c4d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;35]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c4d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;36]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c4df60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;37]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c4db38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;38]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c450f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;39]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c452e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;40]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd518c38f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;41]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545a41fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;42]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fd545a65710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;0]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c2a748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;1]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c584a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;2]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd545a651d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;3]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd545a41fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;4]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c38a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;5]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c456a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;6]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c4d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;7]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c4df60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;8]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c58208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;9]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c589e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;10]" time="0.0011630058288574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd545a56860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;11]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd5459f7c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;12]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c4df60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;13]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c4d940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;14]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c45358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;15]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c386d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;16]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd545b90588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;17]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c2a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;18]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c2afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;19]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd545b64518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;20]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c45e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;21]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c453c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;22]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c4dac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;23]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd5459f78d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;24]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd545a65710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;25]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c586d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;26]" time="0.0007936954498291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c58588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;27]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd5459f7b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;28]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c4d278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;29]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c45908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;30]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c382e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;31]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c7c128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;32]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c58c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;33]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c58b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;34]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518be9128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;35]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c58b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;36]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518cb2978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;37]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd545a078d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;38]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518c45b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;39]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd545aa1a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;40]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd5459f78d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;41]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518be92e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;42]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fd518be9630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;0]" time="0.0007777214050292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd5459f7a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;1]" time="0.0005612373352050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518c45f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;2]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518c380f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;3]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd545a076d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;4]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518c58d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;5]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518c58e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;6]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518be93c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;7]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518be9b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;8]" time="0.0007865428924560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518be9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;9]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518be9748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;10]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518c58b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;11]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518ccd978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;12]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd545a07240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;13]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518c45d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;14]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd5459f7d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;15]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bf7470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;16]" time="0.0007731914520263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bf79b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;17]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518c45be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;18]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd545a07c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;19]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd545a2c358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;20]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518c58f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;21]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518be9a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;22]" time="0.00039696693420410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bf7710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;23]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bf7358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;24]" time="0.0007352828979492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bf7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;25]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bf7550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;26]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518be93c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;27]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518c2ad30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;28]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518ccdfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;29]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd545b64518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;30]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518c459e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;31]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bff048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;32]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bff550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;33]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd545a076d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;34]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd545a2c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;35]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518c58e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;36]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518be92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;37]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bf7278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;38]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bf7d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;39]" time="0.0004031658172607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bff320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;40]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bffa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;41]" time="0.0007729530334472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518bf74e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;42]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fd518be96a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;0]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518ccdac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;1]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c380f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;2]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd545a07390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;3]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518bffba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;4]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518bff320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;5]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518bfffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;6]" time="0.0007576942443847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c4d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;7]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518bff1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;8]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd545a076d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;9]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd5459cdba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;10]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518ccd978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;11]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518be9198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;12]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c07160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;13]" time="0.0004017353057861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c07898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;14]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518bf7cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;15]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd5459bc358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;16]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd5459cdfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;17]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd545a2c748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;18]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518bff6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;19]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c4d630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;20]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c077b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;21]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c12198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;22]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd545a07eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;23]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd5459df320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;24]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c4d630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;25]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518bff320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;26]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c07f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;27]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c07ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;28]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c07400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;29]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518bf75f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;30]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518be9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;31]" time="0.0008673667907714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518be9198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;32]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c07c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;33]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c07b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;34]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c07eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;35]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518bff6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;36]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd5459cdba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;37]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd5459df128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;38]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518c97e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;39]" time="0.0007948875427246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd545a2c898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;40]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd5459dfe48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;41]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd5459bc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;42]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fd518bff898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;0]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c076d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;1]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c073c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;2]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518be9f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;3]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c126a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;4]" time="0.0007550716400146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c12a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;5]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518bf7a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;6]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c07470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;7]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c07588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;8]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c4d278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;9]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c385c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;10]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c97e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;11]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c12278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;12]" time="0.000782012939453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c12f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;13]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c12320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;14]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd5459df860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;15]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd5459ee5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;16]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c07208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;17]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c07ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;18]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd5459f3438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;19]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518ba4080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;20]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518ba45c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;21]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd5459f3240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;22]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c07048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;23]" time="0.0004012584686279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518bffd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;24]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd5459cdef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;25]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd5459df1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;26]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c12e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;27]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518ba43c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;28]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518ba4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;29]" time="0.0007731914520263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c12320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;30]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd5459dffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;31]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518bff9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;32]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c07668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;33]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd5459f3828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;34]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518ba4d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;35]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518ba43c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;36]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518bac048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;37]" time="0.0007643699645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518be92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;38]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518ba4470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;39]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd5459f3390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;40]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518c07400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;41]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd518bff940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;42]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fd5459bc940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;0]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bac128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;1]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bac908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;2]" time="0.0007610321044921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bace48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;3]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd545990b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;4]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518c4d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;5]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518c070b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;6]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518ba49e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;7]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518ba4eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;8]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bacc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;9]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bac5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;10]" time="0.0007693767547607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bb63c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;11]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bac940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;12]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518ba4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;13]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd5459f3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;14]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bf7588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;15]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd545990588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;16]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518c12eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;17]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bb6208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;18]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bb69e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;19]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd5459a39e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;20]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bf7a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;21]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd5459b6358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;22]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518ba4978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;23]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bacda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;24]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bb6b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;25]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bb64a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;26]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bb6ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;27]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bb6e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;28]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bac5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;29]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bac0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;30]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518ba40f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;31]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd5459f38d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;32]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd5459902e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;33]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd5459a39e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;34]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bc3470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;35]" time="0.001153707504272461"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518c07cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;36]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd5459b6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;37]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bb64e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;38]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd5459df860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;39]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bacf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;40]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518bac5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;41]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd545990a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;42]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fd518c12828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;0]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518c12f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;1]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd5459906d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;2]" time="0.00039887428283691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bac4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;3]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518ba4208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;4]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bb6f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;5]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bb6240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;6]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd5459f3390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;7]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518be9358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;8]" time="0.0007674694061279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bc3320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;9]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd5459b6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;10]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bb62e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;11]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bb6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;12]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bac710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;13]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd54595b518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;14]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518c12da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;15]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bc3048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;16]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bc3b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;17]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518c12a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;18]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bac160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;19]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518ba49e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;20]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bb6b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;21]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518be9358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;22]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bc3c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;23]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bc3278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;24]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bd10b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;25]" time="0.0007719993591308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bc3e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;26]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bc3470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;27]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd5459b6208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;28]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bb6898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;29]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bacac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;30]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd54595b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;31]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518c12a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;32]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bd15f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;33]" time="0.0007326602935791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd5459904e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;34]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518ba4828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;35]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bb6860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;36]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518be9f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;37]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd5459691d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;38]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bc3a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;39]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bd14e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;40]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bd1eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;41]" time="0.0007731914520263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518b5a438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;42]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fd518bd1518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;0]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bc3470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;1]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd545969b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;2]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd545944400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;3]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bacb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;4]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518c12eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;5]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b5a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;6]" time="0.0007567405700683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b5a978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;7]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518ba4c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;8]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd545944400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;9]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd5458f8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;10]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bc3940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;11]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bd14e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;12]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b5ab00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;13]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b5a160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;14]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b5afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;15]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b5aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;16]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b5a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;17]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bd1668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;18]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bc3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;19]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd545969908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;20]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bac320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;21]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518c12eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;22]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b634e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;23]" time="0.0008261203765869141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518ba4828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;24]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd5458f8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;25]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bc3908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;26]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bd1f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;27]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b5aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;28]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b5aef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;29]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b63198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;30]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b63a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;31]" time="0.0007615089416503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b5ad30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;32]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd54590cb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;33]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bd1f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;34]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bc37f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;35]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518be9ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;36]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b63a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;37]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b630b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;38]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b6f320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;39]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bac320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;40]" time="0.0005533695220947266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518b63668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;41]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bb6588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;42]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fd518bc3518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;0]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd54590c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;1]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b5ab70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;2]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b6f128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;3]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b6fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;4]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd54590c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;5]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd5458f8b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;6]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b6fc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;7]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b6f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;8]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b63240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;9]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b63278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;10]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd54595be48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;11]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b5a390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;12]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518bd10f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;13]" time="0.0008389949798583984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b5a0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;14]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b63cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;15]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b630b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;16]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b6f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;17]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b6f208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;18]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd54592fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;19]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd54590c780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;20]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518bd1908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;21]" time="0.0008046627044677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518bd1940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;22]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd54590c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;23]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd5458f8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;24]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b6f908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;25]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd54595b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;26]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b63828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;27]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b5afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;28]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd545a7f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;29]" time="0.0007853507995605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b784a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;30]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b5a390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;31]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b63a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;32]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd5458bc208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;33]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b6f630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;34]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd54592fd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;35]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518bd1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;36]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b78358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;37]" time="0.00078582763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b789e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;38]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd54592ff28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;39]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b6f128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;40]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd5458bca90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;41]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b63898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;42]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fd518b5a390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;0]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b78668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;1]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b78198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;2]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b87048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;3]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b78d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;4]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b783c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;5]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b63c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;6]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd5458bc4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;7]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd5459b66a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;8]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd54590c240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;9]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518bd1ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;10]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b87550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;11]" time="0.0008032321929931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd54590cb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;12]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd54591b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;13]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b63e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;14]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd5458cdf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;15]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b78c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;16]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b788d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;17]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b872b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;18]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b87a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;19]" time="0.0007684230804443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b78f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;20]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518bc3358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;21]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b633c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;22]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd5458bc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;23]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b6f400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;24]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b87a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;25]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b87668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;26]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b92390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;27]" time="0.0007441043853759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b928d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;28]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b876d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;29]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd54595bf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;30]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd5458e29b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;31]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd5458cdba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;32]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b78da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;33]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b925c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;34]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b92208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;35]" time="0.0007414817810058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b92e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;36]" time="0.0008056163787841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b929e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;37]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b787f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;38]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518bac320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;39]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b635c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;40]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd5458e2710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;41]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b87f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;42]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fd518b87160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;0]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b1c470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;1]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b87ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;2]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd5458e2470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;3]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd5458cdba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;4]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b78f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;5]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b92cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;6]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b92eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;7]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b1c208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;8]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b1c978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;9]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b92eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;10]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518bac320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;11]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd5458bc160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;12]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b6f940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;13]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b87630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;14]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b1c128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;15]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b1c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;16]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b1ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;17]" time="0.001268625259399414"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b1cd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;18]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b1c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;19]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd545885588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;20]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd5458f15c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;21]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b92a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;22]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd5458e27b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;23]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b878d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;24]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b78128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;25]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b78c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;26]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b87908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;27]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b92c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;28]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b92a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;29]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd5458cdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;30]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b6f940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;31]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b1c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;32]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518bc34a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;33]" time="0.000820159912109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b250b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;34]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518bd10f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;35]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b1c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;36]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd545885a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;37]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b92ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;38]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd5458e2e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;39]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b87b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;40]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b783c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;41]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b255f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;42]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fd518b87eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;0]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd5458e2668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;1]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd5458bc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;2]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd545885828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;3]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b1cda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;4]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518bc34a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;5]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b25358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;6]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b25b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;7]" time="0.0007476806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518bc3da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;8]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd545885828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;9]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd5458a3ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;10]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b929e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;11]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b78c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;12]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b25ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;13]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b25358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;14]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b35080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;15]" time="0.0007476806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b255f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;16]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b25a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;17]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b78c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;18]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd545895780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;19]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd5458a3ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;20]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b1c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;21]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b35160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;22]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b35940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;23]" time="0.0007381439208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b35e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;24]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd5458bc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;25]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b92be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;26]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd54583a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;27]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b87160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;28]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b252e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;29]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b35cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;30]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b350f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;31]" time="0.0007295608520507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b3d400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;32]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b35cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;33]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b25ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;34]" time="0.0003993511199951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b87438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;35]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd545895198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;36]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b92e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;37]" time="0.0004031658172607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b1c588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;38]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b3d240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;39]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b3da20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;40]" time="0.0005676746368408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd518b1c518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;41]" time="0.00040030479431152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd545895198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;42]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fd54584a320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;0]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b25780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;1]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b35b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;2]" time="0.0003986358642578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b3dac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;3]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b3d048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;4]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b3df28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;5]" time="0.0007486343383789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b3dda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;6]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b3d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;7]" time="0.00040149688720703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b35ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;8]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b25940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;9]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd54583a470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;10]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd545895780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;11]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518bc3da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;12]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b4a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;13]" time="0.0007607936859130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b1c898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;14]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd5458a3c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;15]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b25710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;16]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b35588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;17]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd54585c668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;18]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b3d940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;19]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b4a320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;20]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b4ad68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;21]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b4ada0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;22]" time="0.00039649009704589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b4a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;23]" time="0.00039577484130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b3d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;24]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b35da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;25]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b254e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;26]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd54584afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;27]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518bc3da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;28]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b52668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;29]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd518b1cb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;30]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fd54584a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype0]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7fd518b4abe0&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype1]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7fd518b4a080&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype2]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7fd54585c518&gt;</skipped></testcase><testcase classname="src.pymortests.la" file="src/pymortests/la.py" line="13" name="test_induced" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/la.py:13: &lt;py._xmlgen.raw object at 0x7fd518b3d940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-False-1-100]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b35748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-False-1-200]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b35400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-False-2-100]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b25d30&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-False-2-200]" time="0.0008044242858886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b25da0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-True-1-100]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b35940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-True-1-200]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b3d898&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-True-2-100]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd54585cf98&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-True-2-200]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b4aac8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-False-1-100]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b4a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-False-1-200]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd54583ae48&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-False-2-100]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b78a20&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-False-2-200]" time="0.0007724761962890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd545895780&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-True-1-100]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd54586acf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-True-1-200]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b4a630&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-True-2-100]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b4a908&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-True-2-200]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b3d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-False-1-100]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b35470&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-False-1-200]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b255f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-False-2-100]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b520f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-False-2-200]" time="0.000896453857421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b52fd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-True-1-100]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b52390&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-True-1-200]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b35400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-True-2-100]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b3d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-True-2-200]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd53ab7ee10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-False-1-100]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b4a908&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-False-1-200]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd54586aa58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-False-2-100]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd545895588&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-False-2-200]" time="0.0008094310760498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518ae4550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-True-1-100]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd53ab84198&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-True-1-200]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b4a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-True-2-100]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd54585cba8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-True-2-200]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b3df28&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-False-1-100]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b52c88&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-False-1-200]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b521d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-False-2-100]" time="0.0005741119384765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518ae4400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-False-2-200]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518ae4b70&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-True-1-100]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b52160&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-True-1-200]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b3d358&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-True-2-100]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd54585c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-True-2-200]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b4a358&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-False-1-100]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b87d68&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-False-1-200]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518ae4c18&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-False-2-100]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518ae4470&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-False-2-200]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518aed0b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-True-1-100]" time="0.0007977485656738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518ae4e48&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-True-1-200]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518ae4b38&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-True-2-100]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd53ab84ac8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-True-2-200]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b4a160&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-False-1-100]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd54585c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-False-1-200]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b35588&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-False-2-100]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b52c18&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-False-2-200]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518aed5f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-True-1-100]" time="0.0007846355438232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b52c18&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-True-1-200]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b3df28&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-True-2-100]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd53ab7e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-True-2-200]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b87160&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-False-1-100]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518ae46d8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-False-1-200]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518ae4f28&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-False-2-100]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518aed4e0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-False-2-200]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518aedeb8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-True-1-100]" time="0.0008385181427001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518af8438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-True-1-200]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518aed240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-True-2-100]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518ae4908&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-True-2-200]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd53ab84828&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-False-1-100]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b4aac8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-False-1-200]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd53ab93198&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-False-2-100]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b52cf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-False-2-200]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518af82b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-True-1-100]" time="0.0008137226104736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518af8978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-True-1-200]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518b25da0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-True-2-100]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd53ab934e0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-True-2-200]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd53ab84cc0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-False-1-100]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518ae4f60&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-False-1-200]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518aed4e0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-False-2-100]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518af8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-False-2-200]" time="0.0007119178771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518af8128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-True-1-100]" time="0.0007803440093994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518af8f98&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-True-1-200]" time="0.0007190704345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518af8198&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-True-2-100]" time="0.0006103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518aed3c8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-True-2-200]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7fd518aedeb8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-False-1-100]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518ae4668&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-False-1-200]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b4a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-False-2-100]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab93b70&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-False-2-200]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b52cf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-True-1-100]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b034e0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-True-1-200]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab7ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-True-2-100]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab84ac8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-True-2-200]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518ae4e48&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-False-1-100]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518aed080&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-False-1-200]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518af8828&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-False-2-100]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518af8630&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-False-2-200]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b03240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-True-1-100]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b03a20&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-True-1-200]" time="0.0011768341064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab43470&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-True-2-100]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab93d68&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-True-2-200]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518af8da0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-False-1-100]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518af84e0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-False-1-200]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518aedc18&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-False-2-100]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518aed9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-False-2-200]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518ae45c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-True-1-100]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b52cc0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-True-1-200]" time="0.0005652904510498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab7ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-True-2-100]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518ae40b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-True-2-200]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518aed2e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-False-1-100]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518af89b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-False-1-200]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd54585cb00&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-False-2-100]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab93e10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-False-2-200]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab43908&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-True-1-100]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b03748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-True-1-200]" time="0.000812530517578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b034a8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-True-2-100]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab93c18&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-True-2-200]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b92a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-False-1-100]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518af8940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-False-1-200]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518aed240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-False-2-100]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd54586acf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-False-2-200]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b03cc0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-True-1-100]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b031d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-True-1-200]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b11160&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-True-2-100]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b03240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-True-2-200]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518ae4f60&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-False-1-100]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518aed9e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-False-1-200]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518af89b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-False-2-100]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab4f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-False-2-200]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b25048&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-True-1-100]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b112b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-True-1-200]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd518b11668&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-True-2-100]" time="0.0008015632629394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab43860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-True-2-200]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7fd53ab4f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="21" name="test_selection_op" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:21: &lt;py._xmlgen.raw object at 0x7fd518aed748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="53" name="test_lincomb_op" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:53: &lt;py._xmlgen.raw object at 0x7fd518b522b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;0]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b03080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;1]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b03ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;2]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b11438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;3]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b11be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;4]" time="0.0008716583251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b11ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;5]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b116d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;6]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b031d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;7]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518ae4588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;8]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518aed978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;9]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd54585cb00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;10]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd53ab84cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;11]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518a9b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;12]" time="0.0007994174957275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518a9ba20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;13]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518af81d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;14]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518aed860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;15]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b035f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;16]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd51fc3e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;17]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b11cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;18]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518a9b780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;19]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518a9b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;20]" time="0.0008118152618408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518a9bf60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;21]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518a9b518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;22]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b116d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;23]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b11780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;24]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd54592fd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;25]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518aed4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;26]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518af8630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;27]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518aa6080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;28]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518aa65c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;29]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd51fe726d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;30]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b03b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;31]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd51fc3ef28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;32]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b11518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;33]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518a9bb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;34]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518a9bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;35]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518aa63c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;36]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518aa6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;37]" time="0.0008237361907958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518a9be80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;38]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518b11518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;39]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518ae4048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;40]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fd518af8630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd51fc25358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aa6c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aa6160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aad048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.0007545948028564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd53ab4f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aa66a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aa6c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aedc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518ae4588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518b117f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aad0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aad908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518a9b710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd51fc3ef28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aed4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd51fc38b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aa6a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd53ab4f278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aad048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518ab9208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;20]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd53ab4f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;21]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518af8780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;22]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aa6da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;23]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aa6630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;24]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aad630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;25]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aad278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;26]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd51fc3e550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;27]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518b11f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;28]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518a9b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;29]" time="0.0008244514465332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518a9bc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;30]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd53ab84ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;31]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aad2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;32]" time="0.0007016658782958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aade80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;33]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd518aa67f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;34]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd51fc38780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;35]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd51fbcc780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;36]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd53ab43ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;37]" time="0.0008053779602050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd53ab4fc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;38]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd51fbcc2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;39]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fd54592fd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;0]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518aa6f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;1]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518aad6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;2]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd51fc3eb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;3]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518a9b550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;4]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ab92b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;5]" time="0.0008106231689453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ab9a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;6]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518b118d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;7]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd51fbdac88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;8]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518aade80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;9]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518aa6e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;10]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd51fbccc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;11]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd53ab4fe48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;12]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ab92b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;13]" time="0.0008549690246582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ab9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;14]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ab97b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;15]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd51fc25748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;16]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd51fbccf60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;17]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd51fbee2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;18]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518aad7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;19]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd545969908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;20]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ac6128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;21]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ac6630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;22]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd545969908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;23]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518aad518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;24]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518aa6fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;25]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd51fbcc0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;26]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd53ab93240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;27]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ab9eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;28]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ac6438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;29]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ac6b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;30]" time="0.0007722377777099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ab9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;31]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd5457a5588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;32]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd51fbeee80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;33]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd51fc3e940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;34]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518b87780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;35]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ac6cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;36]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ac61d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;37]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ad10b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;38]" time="0.0007746219635009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518b11cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;39]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518ac6128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;40]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fd518b784e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;0]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fbee208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;1]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fbff208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;2]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fc25748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;3]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ad1278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;4]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ad1978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;5]" time="0.0007784366607666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ad1eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;6]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518aa6a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;7]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fbff4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;8]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518aada58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;9]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ac6a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;10]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ac6eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;11]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ad1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;12]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ad1160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;13]" time="0.0007817745208740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518a5b438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;14]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ad1d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;15]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ac6da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;16]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ac6940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;17]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fbee208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;18]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ab9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;19]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fb907f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;20]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518a5b278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;21]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518a5ba58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;22]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fb90c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;23]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518aa66a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;24]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518aada90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;25]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ac6710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;26]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ad19b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;27]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518a5bb00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;28]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518a5b550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;29]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518a5bf60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;30]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518a5bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;31]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518a5b668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;32]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ad1ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;33]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518ac6c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;34]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fc38fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;35]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fba04a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;36]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fb90358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;37]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518a694e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;38]" time="0.001157999038696289"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fba09e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;39]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd51fbeea90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;40]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fd518a5b860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;0]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a5b978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;1]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ad1160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;2]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ad14a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;3]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518c12898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;4]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ab9a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;5]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518b11e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;6]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ac6e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;7]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ad1470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;8]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ad1978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;9]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a5b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;10]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd51fbff550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;11]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd51fba04a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;12]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a9b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;13]" time="0.0007762908935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a693c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;14]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd51fbee898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;15]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd51fc3ee80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;16]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a5bf60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;17]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ad1390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;18]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ac6780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;19]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ab9940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;20]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a69278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;21]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a69be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;22]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ac6d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;23]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ad1358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;24]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a5bf60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;25]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd51fba0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;26]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518aadf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;27]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a69d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;28]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a692e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;29]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a72128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;30]" time="0.0007860660552978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a691d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;31]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a69ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;32]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd51fbc56a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;33]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a5b080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;34]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd51fbb1be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;35]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ad13c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;36]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ab9860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;37]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a72668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;38]" time="0.0007507801055908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518b11e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;39]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518ad12e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;40]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fd518a5b320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;0]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fbee898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;1]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a69a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;2]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a69ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;3]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a72550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;4]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a72f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;5]" time="0.0007846355438232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a7d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;6]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a72630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;7]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a69a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;8]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fbc5b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;9]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fba0d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;10]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fb526d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;11]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518ab9940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;12]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a7d390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;13]" time="0.0007960796356201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a7d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;14]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fb52400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;15]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fbee550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;16]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fb666a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;17]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a69ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;18]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a72f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;19]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a7db70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;20]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a7d160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;21]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a87048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;22]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a7d208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;23]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a72d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;24]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a72668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;25]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fbc5898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;26]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fb665f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;27]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fbb1dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;28]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518ab9860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;29]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a87550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;30]" time="0.0007755756378173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fbdac88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;31]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fb66e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;32]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd51fbc5d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;33]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a72630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;34]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a7d048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;35]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a7dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;36]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a87048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;37]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a87a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;38]" time="0.0007350444793701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a7ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;39]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a72320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;40]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fd518a696d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;0]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd51fbc5898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;1]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd51fb66be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;2]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a87080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;3]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a87630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;4]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a94390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;5]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518ad1978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;6]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a87128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;7]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a5b438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;8]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd51fb756a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;9]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a72d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;10]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a7da58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;11]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a94198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;12]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a94c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;13]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd51fba0d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;14]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd51fb66208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;15]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a94da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;16]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a941d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;17]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a94780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;18]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a87320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;19]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518ad1978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;20]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a7d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;21]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a72d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;22]" time="0.0007791519165039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a7ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;23]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a87d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;24]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd51fbdac88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;25]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a94358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;26]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a94b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;27]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd51fb66208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;28]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd51fba0d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;29]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a9b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;30]" time="0.0007810592651367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a9b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;31]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd51fb75208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;32]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd51fb66400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;33]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a949e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;34]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd51fb19358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;35]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a870f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;36]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a7da90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;37]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518b03eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;38]" time="0.0008027553558349609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a1c518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;39]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a7da90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;40]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fd518a878d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;0]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd51fb19be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;1]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a94a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;2]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd51fb86fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;3]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a72978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;4]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a1c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;5]" time="0.0007996559143066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a1ca58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;6]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd51fb869e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;7]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a942b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;8]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd51fb19f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;9]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a87f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;10]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518ab9d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;11]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a1cba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;12]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a1c198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;13]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a2a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;14]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a1ce10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;15]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a1c748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;16]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd51fb27160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;17]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd51fb19dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;18]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a94780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;19]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd51fb3a358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;20]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a9bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;21]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a2a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;22]" time="0.0007927417755126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd51fb86dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;23]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a94390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;24]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a87518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;25]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518ad1fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;26]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a1c978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;27]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a1c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;28]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a2a320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;29]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a2ab00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;30]" time="0.0007884502410888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a1cf98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;31]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a69048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;32]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a87f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;33]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a94c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;34]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd51fb3a400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;35]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a2a208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;36]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a2a668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;37]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a38400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;38]" time="0.0007576942443847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a38940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;39]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd518a2a710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;40]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fd51fb3abe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;0]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a94c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;1]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518b11cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;2]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a1cf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;3]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a38668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;4]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a38278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;5]" time="0.0008404254913330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a38e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;6]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a382b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;7]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd51fade6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;8]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a1cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;9]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd51fb27160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;10]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a94780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;11]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a2a358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;12]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a2a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;13]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a414e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;14]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a2ab00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;15]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd51fb199e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;16]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518b11cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;17]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd51fb4a160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;18]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a38080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;19]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a38be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;20]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a412b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;21]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a419e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;22]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a382b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;23]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd51fade7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;24]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a1c860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;25]" time="0.0005688667297363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd51fb19be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;26]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a2a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;27]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a41ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;28]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a41630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;29]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a41f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;30]" time="0.0011370182037353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a41d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;31]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a41048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;32]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a94978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;33]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd51faed4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;34]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a38da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;35]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd51fb4a160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;36]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a2a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;37]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a1c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;38]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a1c828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;39]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a2a898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;40]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fd518a38668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;0]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51fadebe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;1]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51faed4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;2]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51fb3afd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;3]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a414a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;4]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a69ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;5]" time="0.0008428096771240234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a480b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;6]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a69e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;7]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a41828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;8]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51fb3a748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;9]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51faed6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;10]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a38e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;11]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a2a668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;12]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a1cf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;13]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a48668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;14]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a2ae48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;15]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a38710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;16]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51faed7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;17]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51fb199e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;18]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a415f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;19]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a7de48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;20]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a483c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;21]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a48b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;22]" time="0.0008294582366943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a72940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;23]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51fb3ae80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;24]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51faed940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;25]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a385c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;26]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a1c828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;27]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a48d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;28]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a487b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;29]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a580f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;30]" time="0.0008113384246826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a2ae48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;31]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a482e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;32]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51fa90e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;33]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51fb4a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;34]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51faed898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;35]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a41828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;36]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a582b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;37]" time="0.0008144378662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a589b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;38]" time="0.0007469654083251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a58ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;39]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd51fafedd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;40]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fd518a38be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;0]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd51fa90f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;1]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a48470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;2]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a48f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;3]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a58d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;4]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a580b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;5]" time="0.0007653236389160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189e5470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;6]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a58e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;7]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a48358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;8]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a48470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;9]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd51fa902b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;10]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd51faa1400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;11]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a41358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;12]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189e52b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;13]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189e5a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;14]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a417f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;15]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd51fa90940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;16]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a487b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;17]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd51fab59e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;18]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a585c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;19]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189e5c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;20]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189e5390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;21]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189e5f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;22]" time="0.0007829666137695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189e5e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;23]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a582b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;24]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd51fab5fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;25]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a2af60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;26]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a48710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;27]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a38940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;28]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a417f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;29]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189ee518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;30]" time="0.0008502006530761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd51fb3ae80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;31]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd51fa90400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;32]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a48dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;33]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd51fac25f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;34]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd518a58be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;35]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189e59b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;36]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189ee390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;37]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189eedd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;38]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189eedd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;39]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189ee080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;40]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fd5189e58d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;0]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fac2208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;1]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fab59e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;2]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fa90550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;3]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51faa10b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;4]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189f76d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;5]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fafec88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;6]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fab5400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;7]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189ee0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;8]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189ee9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;9]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189ee940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;10]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189e5f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;11]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd518a580b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;12]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd518a584a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;13]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd518a48710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;14]" time="0.0007998943328857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd518a58470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;15]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189e5d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;16]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189e5748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;17]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189ee7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;18]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd518a417f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;19]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fa53fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;20]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd518a385c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;21]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd518a1c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;22]" time="0.0007991790771484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd518a1c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;23]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fab5400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;24]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fa90550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;25]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189ee518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;26]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fa67358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;27]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189e5c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;28]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd518a58be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;29]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189f7080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;30]" time="0.0009047985076904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189f7f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;31]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189e5c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;32]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fa67358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;33]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189ee0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;34]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fac2e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;35]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd518a488d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;36]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189f7cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;37]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189f7550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;38]" time="0.0007994174957275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd518a094e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;39]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd5189f7d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;40]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fd51fab5550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;0]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd51fac2e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;1]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd5189ee748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;2]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd5189e5f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;3]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a58390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;4]" time="0.0004019737243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a09390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;5]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a09b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;6]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd5189e54e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;7]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd5189ee6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;8]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd51faa1400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;9]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a488d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;10]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd5189f7160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;11]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a09ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;12]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a09400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;13]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a10048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;14]" time="0.0007879734039306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a09eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;15]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a09048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;16]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd51fa764e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;17]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a48668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;18]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd51fb3a748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;19]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd51fa88898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;20]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a587f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;21]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a10588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;22]" time="0.0007646083831787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a587f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;23]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd5189e5128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;24]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd5189ee940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;25]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd51fab5898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;26]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd5189f76d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;27]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a09be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;28]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a10438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;29]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a10e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;30]" time="0.0008234977722167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd51899c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;31]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a10cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;32]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a09ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;33]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd5189f73c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;34]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd518a48fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;35]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd5189eef60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;36]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd51fa88748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;37]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd51899c240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;38]" time="0.0008502006530761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd51899c908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;39]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd5189e5f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;40]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fd51fa539e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;0]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd5189f7080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;1]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51fa175f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;2]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a102e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;3]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51899ca20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;4]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51899c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;5]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51899cf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;6]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51899cac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;7]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51fa297f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;8]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a102e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;9]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a097f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;10]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd5189f7080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;11]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd5189ee748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;12]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51fa88b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;13]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd5189a8470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;14]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51fa88a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;15]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51fa76160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;16]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51fa17748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;17]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a10ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;18]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51899c438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;19]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51899cef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;20]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd5189a8128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;21]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd5189a89b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;22]" time="0.001127004623413086"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51fa29c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;23]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51899cd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;24]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51899c438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;25]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a10b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;26]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a10278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;27]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a09908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;28]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51fa67e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;29]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a72940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;30]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a72d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;31]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a09f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;32]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a10908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;33]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd518a10b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;34]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51899c710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;35]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51fa3a898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;36]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51fa53fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;37]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd5189a86a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;38]" time="0.0007793903350830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd5189a8518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;39]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51fa3ad30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;40]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fd51899ce10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;0]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd518a109b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;1]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd518a108d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;2]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd518a48518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;3]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189a8c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;4]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189a8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;5]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189b60f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;6]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189a8470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;7]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd51fa67a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;8]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd518a09860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;9]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd518a101d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;10]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd51899c710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;11]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd51fa3ae80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;12]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd51fb3aa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;13]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189b65f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;14]" time="0.0007898807525634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd51fa88160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;15]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd51899cd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;16]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd518a10320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;17]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd518a091d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;18]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189a8080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;19]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189a8dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;20]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189b6358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;21]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189b6b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;22]" time="0.0007410049438476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189a8ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;23]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd51fa67b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;24]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd518a10ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;25]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd51f9dd7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;26]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd51899cac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;27]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189b6240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;28]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189b66a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;29]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189bd438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;30]" time="0.0007488727569580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189bd978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;31]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189b6668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;32]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd51fa3ae80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;33]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd51f9dd208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;34]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd518a09d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;35]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189a8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;36]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189bd080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;37]" time="0.0004029273986816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189bd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;38]" time="0.0007460117340087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189bdeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;39]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189bd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;40]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fd5189f7e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;0]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189a8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;1]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51fa4bf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;2]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51f9ee860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;3]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189b6c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;4]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51fa88e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;5]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189cb518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;6]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189b6908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;7]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51fa00160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;8]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51fa4bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;9]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189a8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;10]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189bd0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;11]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189bd4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;12]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189cb278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;13]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189cba20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;14]" time="0.0011229515075683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189bd1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;15]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189a8358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;16]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51f9ddb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;17]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51fa00940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;18]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51fa53fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;19]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189cbc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;20]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189cb668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;21]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189cbf60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;22]" time="0.0008008480072021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189cb518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;23]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189cb8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;24]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189b66d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;25]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51fa00be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;26]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51f9ddf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;27]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189a8ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;28]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189d30f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;29]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189d3860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;30]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189bdfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;31]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd518a09c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;32]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51899cd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;33]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd51f9902b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;34]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189cbc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;35]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189cb550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;36]" time="0.0005772113800048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fd5189d3748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;0]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51895e160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;1]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51f990748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;2]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51f9ee4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;3]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd518a108d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;4]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189cb198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;5]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189d3f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;6]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189d3a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;7]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189d3390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;8]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189bdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;9]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189b6828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;10]" time="0.00078582763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189bdfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;11]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189d3278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;12]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189d3d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;13]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189cb208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;14]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51f9a2550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;15]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51fa00748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;16]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189b6d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;17]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd518a69048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;18]" time="0.0007703304290771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd518a69048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;19]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51f9902b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;20]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51f9ee0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;21]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51f9a2be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;22]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189cb5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;23]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189d3518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;24]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189bdd68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;25]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51895e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;26]" time="0.000774383544921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51895e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;27]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189d3a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;28]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189d3908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;29]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51f9b3550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;30]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51f9a2dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;31]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51fa00208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;32]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189b6d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;33]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51895e630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;34]" time="0.0007848739624023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51895ef28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;35]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd51895e320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;36]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fd5189b6828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;0]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51fa00208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;1]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51f9b3940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;2]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189cbf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;3]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189d3c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;4]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51896e048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;5]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51896e588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;6]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189d3f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;7]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189cbf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;8]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51f9a2b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;9]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51fa53fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;10]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189b6f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;11]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51895ed68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;12]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51896e358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;13]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51896ea90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;14]" time="0.0007436275482177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51895ee48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;15]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51fa67940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;16]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51f9b39e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;17]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51f9c3e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;18]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189d3080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;19]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51896ec88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;20]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51896e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;21]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51896efd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;22]" time="0.0008442401885986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189bd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;23]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51896e198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;24]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189d35f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;25]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189cb668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;26]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51f9a2c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;27]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd518a09eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;28]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189780f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;29]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189788d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;30]" time="0.0007679462432861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd518978e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;31]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51f956ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;32]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51f9b3550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;33]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd5189d3470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;34]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51896efd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;35]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51896ee10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;36]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd518978c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;37]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd518978160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;38]" time="0.0007603168487548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd518982390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;39]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd518978710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;40]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fd51896edd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;0]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51896ef98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;1]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd5189cbf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;2]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51f956e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;3]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51f9905f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;4]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd5189821d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;5]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd5189829b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;6]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51f956630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;7]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51f9c3a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;8]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51896e550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;9]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd5189f7ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;10]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518978470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;11]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518982a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;12]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518982470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;13]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518982eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;14]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518982d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;15]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd5189bd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;16]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518978f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;17]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51896e978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;18]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd5189cbf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;19]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51f978ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;20]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518a69390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;21]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518990438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;22]" time="0.0011837482452392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51f978588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;23]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51f965f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;24]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518982198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;25]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518982c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;26]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51896ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;27]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd5189785c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;28]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518978358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;29]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51895e6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;30]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51895eef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;31]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518978358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;32]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518978c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;33]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51f956978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;34]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd5189826d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;35]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51f965fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;36]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51f978ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;37]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd5189bdcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;38]" time="0.0008137226104736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd5189902b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;39]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd51f9a2d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;40]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fd518982400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;0]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518982dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;1]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51896ec88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;2]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd5189785f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;3]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51895eac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;4]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518990128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;5]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518990b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;6]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518978470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;7]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51f919978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;8]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51f956978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;9]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518982828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;10]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518a728d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;11]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd5189904e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;12]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd5189901d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;13]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51891b080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;14]" time="0.0008482933044433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518990128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;15]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd5189a8eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;16]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518982470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;17]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51f9566d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;18]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51f919cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;19]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51895ea90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;20]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518978f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;21]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51891b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;22]" time="0.0008113384246826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518978550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;23]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51f9882e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;24]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51f919828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;25]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518982c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;26]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd5189bdd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;27]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518990898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;28]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51891b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;29]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51891be80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;30]" time="0.0007970333099365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518924400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;31]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51891b1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;32]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518990940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;33]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd5189bdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;34]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd5189823c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;35]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51f92a828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;36]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51f9884e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;37]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd5189242b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;38]" time="0.0008060932159423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd518924940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;39]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51896ef98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;40]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fd51f92ab70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;0]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd5189bdd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;1]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518990b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;2]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51891b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;3]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd5189241d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;4]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518924080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;5]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518924f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;6]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518924198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;7]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51891bac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;8]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51891b278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;9]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd5189906d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;10]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518982710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;11]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51f92a630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;12]" time="0.0005738735198974609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518978550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;13]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd5189324a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;14]" time="0.0008177757263183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51896ec18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;15]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51f9c3a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;16]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51f939eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;17]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51891b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;18]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518924748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;19]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518924e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;20]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518932080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;21]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd5189329e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;22]" time="0.0009596347808837891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51f8cd828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;23]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518924a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;24]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51891bf98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;25]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518990198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;26]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51f92a630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;27]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd5189329e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;28]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518932630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;29]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51893b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;30]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518982ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;31]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd5189320b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;32]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51f92af60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;33]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51891bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;34]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd518924b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;35]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51f8cdc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;36]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51893b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;37]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51893bba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;38]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51f8cd630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;39]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51f8dd390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;40]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fd51893bb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;0]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51893b748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;1]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518932f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;2]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518932860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;3]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51f988438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;4]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518924cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;5]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51891b828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;6]" time="0.0008263587951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518924b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;7]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518932c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;8]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd5189329e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;9]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51893b518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;10]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51893b198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;11]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51f92a240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;12]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51891b978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;13]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd5189906a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;14]" time="0.0007865428924560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd5189906a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;15]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51891b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;16]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51f9788d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;17]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51893b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;18]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51f8f0ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;19]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518932ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;20]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518924ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;21]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd5189ee748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;22]" time="0.0007627010345458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518945470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;23]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518924b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;24]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518932128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;25]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51f8f0e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;26]" time="0.0004029273986816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51893b780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;27]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51f8dd9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;28]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51891bf60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;29]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518945320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;30]" time="0.0008449554443359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd5189459b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;31]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51891b978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;32]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51893b320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;33]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51f8f0438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;34]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518932780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;35]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd51f8ff438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;36]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518945b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;37]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd5189450f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;38]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518945fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;39]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd518945d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;40]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fd5189456a0&gt;</skipped></testcase><testcase classname="src.pymortests.parameters" file="src/pymortests/parameters.py" line="18" name="test_uniform" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/parameters.py:18: &lt;py._xmlgen.raw object at 0x7fd51f8ff198&gt;</skipped></testcase><testcase classname="src.pymortests.parameters" file="src/pymortests/parameters.py" line="25" name="test_randomly" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/parameters.py:25: &lt;py._xmlgen.raw object at 0x7fd518932630&gt;</skipped></testcase><testcase classname="src.pymortests.playground" file="src/pymortests/playground.py" line="12" name="test_eval" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/playground.py:12: &lt;py._xmlgen.raw object at 0x7fd51f939e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-False-1-1]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8dd240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-False-1-2]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518958160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-False-2-1]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189585c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-False-2-2]" time="0.000789642333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8cd8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-True-1-1]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189823c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-True-1-2]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518932e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-True-2-1]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8ff630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-True-2-2]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189458d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-False-1-1]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518945d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-False-1-2]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189583c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-False-2-1]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518958b00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-False-2-2]" time="0.0008711814880371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51895e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-True-1-1]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189450f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-True-1-2]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8ffd68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-True-2-1]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518932240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-True-2-2]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51893bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-False-1-1]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518958828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-False-1-2]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189582b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-False-2-1]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-False-2-2]" time="0.0007677078247070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-True-1-1]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518958630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-True-1-2]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51893b208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-True-2-1]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518932780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-True-2-2]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8a2da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-False-1-1]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518945cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-False-1-2]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-False-2-1]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-False-2-2]" time="0.0007901191711425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0e80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-True-1-1]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-True-1-2]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-True-2-1]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518945dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-True-2-2]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8ff198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-False-1-1]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518932b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-False-1-2]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518958be0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-False-2-1]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8cd828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-False-2-2]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e84e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-True-1-1]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189586d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-True-1-2]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8f0630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-True-2-1]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f81f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-True-2-2]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189457f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-False-1-1]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e04a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-False-1-2]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-False-2-1]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e82b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-False-2-2]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e89e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-True-1-1]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-True-1-2]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7988d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-True-2-1]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f81f358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-True-2-2]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8cbc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-False-1-1]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f939320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-False-1-2]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-False-2-1]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e8630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-False-2-2]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e8f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-True-1-1]" time="0.0011525154113769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e8da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-True-1-2]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e8b38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-True-2-1]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8cb048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-True-2-2]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f80d588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-False-1-1]" time="0.0005409717559814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e04a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-False-1-2]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-False-2-1]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518958d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-False-2-2]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518945b00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-True-1-1]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8b4748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-True-1-2]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189584a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-True-2-1]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e07b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-True-2-2]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f81f208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-False-1-1]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f80d630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-False-1-2]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f939320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-False-2-1]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e8588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-False-2-2]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518978b38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-True-1-1]" time="0.0007791519165039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ef080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-True-1-2]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51891b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-True-2-1]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e87b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-True-2-2]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518932cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-False-1-1]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f80db70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-False-1-2]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-False-2-1]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189586d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-False-2-2]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8b4ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-True-1-1]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ef668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-True-1-2]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189584a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-True-2-1]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-True-2-2]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f80d588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-False-1-1]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e84a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-False-1-2]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51891b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-False-2-1]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518924cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-False-2-2]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ef3c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-True-1-1]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188efb70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-True-1-2]" time="0.0007755756378173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518924b00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-True-2-1]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518932cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-True-2-2]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f988240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-False-1-1]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51895e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-False-1-2]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8b4748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-False-2-1]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188efd68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-False-2-2]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ef7b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-True-1-1]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f70f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-True-1-2]" time="0.000762939453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189586d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-True-2-1]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ef3c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-True-2-2]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189457b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-False-1-1]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-False-1-2]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518978f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-False-2-1]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f823240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-False-2-2]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f72b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-True-1-1]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f79b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-True-1-2]" time="0.0008366107940673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-True-2-1]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f823d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-True-2-2]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f798978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-False-1-1]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189457f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-False-1-2]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188efba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-False-2-1]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188efef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-False-2-2]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-True-1-1]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f70b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-True-1-2]" time="0.0007596015930175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-True-2-1]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-True-2-2]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188efa58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-False-1-1]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7b5ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-False-1-2]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-False-2-1]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f80deb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-False-2-2]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51893b908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-True-1-1]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189072b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-True-1-2]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907a90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-True-2-1]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518924908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-True-2-2]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-False-1-1]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7b5588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-False-1-2]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188efba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-False-2-1]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f75c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-False-2-2]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-True-1-1]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-True-1-2]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907f98&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-True-2-1]" time="0.0007898807525634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907e80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-True-2-2]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-False-1-1]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518958cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-False-1-2]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8ffcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-False-2-1]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e0f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-False-2-2]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189906d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-True-1-1]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f823240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-True-1-2]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890e518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-True-2-1]" time="0.0007731914520263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518932b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-True-2-2]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f80d630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-False-1-1]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7b5f60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-False-1-2]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ef8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-False-2-1]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-False-2-2]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189079b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-True-1-1]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890e390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-True-1-2]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890edd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-True-2-1]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890edd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-True-2-2]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890e198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-False-1-1]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-False-1-2]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-False-2-1]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f798fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-False-2-2]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f80dd68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-True-1-1]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7c4828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-True-1-2]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188996d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-True-2-1]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f80d630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-True-2-2]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7c4978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-False-1-1]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890ec18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-False-1-2]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890efd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-False-2-1]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-False-2-2]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-True-1-1]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-True-1-2]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f74e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-True-2-1]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ef4e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-True-2-2]" time="0.0008149147033691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7b5588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-False-1-1]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-False-1-2]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907c88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-False-2-1]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890e940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-False-2-2]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890eb70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-True-1-1]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f86d588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-True-1-2]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188e8d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-True-2-1]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189457f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-True-2-2]" time="0.0008139610290527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8b4ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-False-1-1]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7c42e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-False-1-2]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f86dac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-False-2-1]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-False-2-2]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-True-1-1]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f823630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-True-1-2]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7b5e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-True-2-1]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518899080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-True-2-2]" time="0.0008182525634765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518899f60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-False-1-1]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-False-1-2]" time="0.0005598068237304688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890e908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-False-2-1]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890eb70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-False-2-2]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f86d978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-True-1-1]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188effd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-True-1-2]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518899cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-True-2-1]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518899550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-True-2-2]" time="0.0008332729339599609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a44e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-False-1-1]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518899c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-False-1-2]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7c4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-False-2-1]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f880c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-False-2-2]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890e828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-True-1-1]" time="0.0005962848663330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-True-1-2]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-True-2-1]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-True-2-2]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4b00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-False-1-1]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-False-1-2]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890e160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-False-2-1]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8800f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-False-2-2]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ef358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-True-1-1]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518899c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-True-1-2]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-True-2-1]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-True-2-2]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-False-1-1]" time="0.0007755756378173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-False-1-2]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-False-2-1]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188991d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-False-2-2]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f880e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-True-1-1]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f752588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-True-1-2]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-True-2-1]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-True-2-2]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-False-1-1]" time="0.0007867813110351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-False-1-2]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890e780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-False-2-1]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f752c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-False-2-2]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ef0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-True-1-1]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188990f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-True-1-2]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-True-2-1]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-True-2-2]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ade48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-False-1-1]" time="0.0008084774017333984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b53c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-False-1-2]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-False-2-1]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-False-2-2]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188993c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-True-1-1]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7c44e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-True-1-2]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f752cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-True-2-1]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890eb00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-True-2-2]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-False-1-1]" time="0.0008051395416259766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-False-1-2]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f86d438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-False-2-1]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f880390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-False-2-2]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8cde10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-True-1-1]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-True-1-2]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-True-2-1]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-True-2-2]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b50b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-False-1-1]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-False-1-2]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-False-2-1]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ada58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-False-2-2]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad5c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-True-1-1]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518899080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-True-1-2]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f762828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-True-2-1]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f752588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-True-2-2]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-False-1-1]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bf470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-False-1-2]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51890ec50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-False-2-1]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f762828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-False-2-2]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-True-1-1]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-True-1-2]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-True-2-1]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5f98&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-True-2-2]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bf128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-False-1-1]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bf9b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-False-1-2]" time="0.0011966228485107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f752b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-False-2-1]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f880828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-False-2-2]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-True-1-1]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189074e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-True-1-2]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad2b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-True-2-1]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8b4710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-True-2-2]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-False-1-1]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188990f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-False-1-2]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518899f98&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-False-2-1]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-False-2-2]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-True-1-1]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-True-1-2]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-True-2-1]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f777eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-True-2-2]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f752978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-False-1-1]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bf6a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-False-1-2]" time="0.0008409023284912109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bf518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-False-2-1]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f777cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-False-2-2]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-True-1-1]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-True-1-2]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f785780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-True-2-1]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a49e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-True-2-2]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bfc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-False-1-1]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bfac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-False-1-2]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cb0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-False-2-1]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bfac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-False-2-2]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188996d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-True-1-1]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f785c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-True-1-2]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad9e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-True-2-1]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f880630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-True-2-2]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f777fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-False-1-1]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f823390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-False-1-2]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cb5f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-False-2-1]" time="0.0007781982421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f777c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-False-2-2]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518907860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-True-1-1]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f785fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-True-1-2]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f8cde10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-True-2-1]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bf1d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-True-2-2]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bf860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-False-1-1]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cb358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-False-1-2]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cbb38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-False-2-1]" time="0.0007476806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bfef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-False-2-2]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f76a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-True-1-1]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f785780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-True-1-2]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188ad5c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-True-2-1]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-True-2-2]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cb240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-False-1-1]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cb6a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-False-1-2]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-False-2-1]" time="0.0007598400115966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-False-2-2]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cb128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-True-1-1]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5189074e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-True-1-2]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7166d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-True-2-1]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7856d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-True-2-2]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bf048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-False-1-1]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-False-1-2]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d42e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-False-2-1]" time="0.0007572174072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-False-2-2]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-True-1-1]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a4940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-True-1-2]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bfeb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-True-2-1]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f86deb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-True-2-2]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7166d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-False-1-1]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cb908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-False-1-2]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f777c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-False-2-1]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885d518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-False-2-2]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cb748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-True-1-1]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f716eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-True-1-2]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f7850f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-True-2-1]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a40b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-True-2-2]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-False-1-1]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4be0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-False-1-2]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885d278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-False-2-1]" time="0.0005717277526855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885da20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-False-2-2]" time="0.0008401870727539062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d40f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-True-1-1]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-True-1-2]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188f7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-True-2-1]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-True-2-2]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cba20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-False-1-1]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885dc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-False-1-2]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885d668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-False-2-1]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885df60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-False-2-2]" time="0.0007526874542236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885d518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-True-1-1]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885d860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-True-1-2]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cbf98&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-True-2-1]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-True-2-2]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bfeb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-False-1-1]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-False-1-2]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518867128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-False-2-1]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518867860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-False-2-2]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4c88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-True-1-1]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188bfef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-True-1-2]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-True-2-1]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cb748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-True-2-2]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-False-1-1]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885d550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-False-1-2]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518867748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-False-2-1]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518871160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-False-2-2]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188b5c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-True-1-1]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f73e438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-True-1-2]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885d278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-True-2-1]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518867f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-True-2-2]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188679e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-False-1-1]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518867358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-False-1-2]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d42e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-False-2-1]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-False-2-2]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cbcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-True-1-1]" time="0.0008323192596435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-True-1-2]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f72c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-True-2-1]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518867240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-True-2-2]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518867f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-False-1-1]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-False-1-2]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f73ee10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-False-2-1]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cbdd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-False-2-2]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f762780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-True-1-1]" time="0.0007812976837158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f752b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-True-1-2]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f73eb70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-True-2-1]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188a40b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-True-2-2]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518867278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-False-1-1]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518867240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-False-1-2]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f6ce2e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-False-2-1]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d4cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-False-2-2]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188715c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-True-1-1]" time="0.0008134841918945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188719e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-True-1-2]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188d42e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-True-2-1]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f6ce8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-True-2-2]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188679b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-False-1-1]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51885dc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-False-1-2]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f73eac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-False-2-1]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cbdd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-False-2-2]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518871630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-True-1-1]" time="0.0008039474487304688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd518871f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-True-1-2]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188715c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-True-2-1]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd5188cb240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-True-2-2]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7fd51f73eb70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-1-1-10]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518867a90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-1-1-20]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6cef60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-1-2-10]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f72c828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-1-2-20]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887f048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-2-1-10]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887f588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-2-1-20]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f72c630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-2-2-10]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518867278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-2-2-20]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51885de80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-1-1-10]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f8cdeb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-1-1-20]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6e0240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-1-2-10]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518871cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-1-2-20]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887f358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-2-1-10]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887fa90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-2-1-20]" time="0.0008549690246582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518871080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-2-2-10]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188cbcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-2-2-20]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51885d860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-1-1-10]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6ce240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-1-1-20]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f72cb70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-1-2-10]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887fc88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-1-2-20]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-2-1-10]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-2-1-20]" time="0.000766754150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188d4400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-2-2-10]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887f710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-2-2-20]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518924da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-1-1-10]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6cecc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-1-1-20]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f73e978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-1-2-10]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6e0c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-1-2-20]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188880f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-2-1-10]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188888d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-2-1-20]" time="0.0007910728454589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518888e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-2-2-10]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6e0438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-2-2-20]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518867908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-1-1-10]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f72cb70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-1-1-20]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887f898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-1-2-10]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887fda0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-1-2-20]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518888c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-2-1-10]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518888160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-2-1-20]" time="0.0007688999176025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-2-2-10]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518888cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-2-2-20]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-1-1-10]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f612fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-1-1-20]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6b84e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-1-2-10]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518867898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-1-2-20]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51885d550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-2-1-10]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188901d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-2-1-20]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188909b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-2-2-10]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188715c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-2-2-20]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6b8630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-1-1-10]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f694470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-1-1-20]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887fd68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-1-2-10]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518888c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-1-2-20]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890a90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-2-1-10]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-2-1-20]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-2-2-10]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-2-2-20]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518924da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-1-1-10]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188886a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-1-1-20]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-1-2-10]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6125c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-1-2-20]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188bfc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-2-1-10]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6e0d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-2-1-20]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518895438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-2-2-10]" time="0.001163482666015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f73e630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-2-2-20]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-1-1-10]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-1-1-20]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188b5c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-1-2-10]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887f898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-1-2-20]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188886a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-2-1-10]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518888358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-2-1-20]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518871f60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-2-2-10]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518871ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-2-2-20]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188880f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-1-1-10]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887fef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-1-1-20]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f612f98&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-1-2-10]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890be0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-1-2-20]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188906d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-2-1-10]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6b8438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-2-1-20]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188d42b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-2-2-10]" time="0.0007903575897216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188952b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-2-2-20]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f694fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-1-1-10]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-1-1-20]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6a79b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-1-2-10]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f612cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-1-2-20]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518888588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-2-1-10]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518871cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-2-1-20]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518895128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-2-2-10]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518895b38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-2-2-20]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518888208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-1-1-10]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188cbf60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-1-1-20]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6a73c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-1-2-10]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188904a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-1-2-20]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f694fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-2-1-10]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188954e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-2-1-20]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188951d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-2-2-10]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-2-2-20]" time="0.0007452964782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518895128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-1-1-10]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f716c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-1-1-20]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-1-2-10]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6a79b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-1-2-20]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6b9668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-2-1-10]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518871dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-2-1-20]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518888cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-2-2-10]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188245c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-2-2-20]" time="0.0007932186126708984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518888eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-1-1-10]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518871ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-1-1-20]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6a7da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-1-2-10]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-1-2-20]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f694a58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-2-1-10]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518895898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-2-1-20]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188244a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-2-2-10]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824e80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-2-2-20]" time="0.0008060932159423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882c400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-1-1-10]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-1-1-20]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188955c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-1-2-10]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f694f98&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-1-2-20]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188900b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-2-1-10]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6b99b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-2-1-20]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518871a58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-2-2-10]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-2-2-20]" time="0.0008027553558349609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882c940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-1-1-10]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f612ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-1-1-20]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-1-2-10]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f716c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-1-2-20]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f622518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-2-1-10]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-2-1-20]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-2-2-10]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882c080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-2-2-20]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882cf60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-1-1-10]" time="0.0005588531494140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882c198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-1-1-20]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-1-2-10]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-1-2-20]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188959e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-2-1-10]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-2-1-20]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6b99b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-2-2-10]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518888128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-2-2-20]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188374a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-1-1-10]" time="0.0009045600891113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887f898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-1-1-20]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f72c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-1-2-10]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f622e48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-1-2-20]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-2-1-10]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882c748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-2-1-20]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882ce80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-2-2-10]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518837080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-2-2-20]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188379e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-1-1-10]" time="0.0007719993591308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882cda0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-1-1-20]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-1-2-10]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f622ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-1-2-20]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f694470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-2-1-10]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518890ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-2-1-20]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188379e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-2-2-10]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518837630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-2-2-20]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188402e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-1-1-10]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-1-1-20]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188372b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-1-2-10]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6b9f98&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-1-2-20]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f633668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-2-1-10]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-2-1-20]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882c080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-2-2-10]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188400f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-2-2-20]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518840ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-1-1-10]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f622ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-1-1-20]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188407b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-1-2-10]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188400b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-1-2-20]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f633fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-2-1-10]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518837b38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-2-1-20]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518837240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-2-2-10]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6123c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-2-2-20]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882ca90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-1-1-10]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-1-1-20]" time="0.0008001327514648438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-1-2-10]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188376d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-1-2-20]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518837588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-2-1-10]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f633fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-2-1-20]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518840518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-2-2-10]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188409b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-2-2-20]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f622518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-1-1-10]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-1-1-20]" time="0.0009303092956542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-1-2-10]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6221d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-1-2-20]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518840128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-2-1-10]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f646278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-2-1-20]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-2-2-10]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188377f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-2-2-20]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882cc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-1-1-10]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f752978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-1-1-20]" time="0.0008382797241210938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-1-2-10]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882ca90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-1-2-20]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188377f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-2-1-10]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6339b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-2-1-20]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f646c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-2-2-10]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188407b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-2-2-20]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-1-1-10]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-1-1-20]" time="0.0008108615875244141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188499b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-1-2-10]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518840860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-1-2-20]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f646c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-2-1-10]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f6339b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-2-1-20]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188379e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-2-2-10]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5d61d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-2-2-20]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849b00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-1-1-10]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188490f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-1-1-20]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-1-2-10]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849c88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-1-2-20]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-2-1-10]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5d6860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-2-1-20]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518837a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-2-2-10]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f646b00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-2-2-20]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518840828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-1-1-10]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188242b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-1-1-20]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-1-2-10]" time="0.0008599758148193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518824048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-1-2-20]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518899828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-2-1-10]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188378d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-2-1-20]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5d6860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-2-2-10]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-2-2-20]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-1-1-10]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-1-1-20]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856a58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-1-2-10]" time="0.0007610321044921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849c88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-1-2-20]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188952b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-2-1-10]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5d6470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-2-1-20]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f633470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-2-2-10]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188405c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-2-2-20]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188561d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-1-1-10]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188565f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-1-1-20]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187de358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-1-2-10]" time="0.0008535385131835938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187de898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-1-2-20]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-2-1-10]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f646668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-2-1-20]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51887fcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-2-2-10]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188719b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-2-2-20]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188490f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-1-1-10]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187de588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-1-1-20]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187de1d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-1-2-10]" time="0.0007483959197998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187dedd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-1-2-20]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518895dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-2-1-10]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51882cb00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-2-1-20]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5eaba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-2-2-10]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-2-2-20]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-1-1-10]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187deba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-1-1-20]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187de6d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-1-2-10]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187e8438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-1-2-20]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187de390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-2-1-10]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-2-1-20]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518840828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-2-2-10]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188378d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-2-2-20]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518895e48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-1-1-10]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-1-1-20]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187e8198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-1-2-10]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187e8940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-1-2-20]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5fd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-2-1-10]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5d67b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-2-1-20]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5eafd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-2-2-10]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-2-2-20]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187deb00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-1-1-10]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187e8438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-1-1-20]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187e8048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-1-2-10]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187e8e80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-1-2-20]" time="0.0011439323425292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187e8c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-2-1-10]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187e89e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-2-1-20]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5d6518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-2-2-10]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5fd908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-2-2-20]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187deba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-1-1-10]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5ea3c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-1-1-20]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-1-2-10]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-1-2-20]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188497f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-2-1-10]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-2-1-20]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187dee10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-2-2-10]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187de550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-2-2-20]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5d6cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-1-1-10]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f58e470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-1-1-20]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187e8748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-1-2-10]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5188956a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-1-2-20]" time="0.0007729530334472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187f0080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-2-1-10]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518895d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-2-1-20]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187e85c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-2-2-10]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f58e518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-2-2-20]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5fdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-1-1-10]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187de9e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-1-1-20]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-1-2-10]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518849c88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-1-2-20]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187f05c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-2-1-10]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd518856f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-2-1-20]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd5187deef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-2-2-10]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f5fd470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-2-2-20]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7fd51f58eb00&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_lgmres]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7fd5187e8710&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_least_squares_lsmr]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7fd51f6b9ef0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_least_squares_lsqr]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7fd5187f0358&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="55" name="test_numpy_dense_solvers" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:55: &lt;py._xmlgen.raw object at 0x7fd5187f0b00&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_least_squares_lsqr]" time="0.0007684230804443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd51882c400&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_spsolve]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd518840400&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_lgmres]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd51f5fd710&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_least_squares_lsmr]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd51f5ea1d0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_bicgstab_spilu]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd5188497b8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_least_squares_lsqr]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd5187f0c88&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_rs]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd5187f01d0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_solve]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd5187fd080&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_lgmres]" time="0.0007748603820800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd5187f0d68&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_least_squares_lsmr]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd5187f09b0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_sa]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd518856e80&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_bicgstab]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fd51f5ea7b8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-1-100]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd51f58ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-1-1000]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd5187e89e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-10-100]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd5187fd048&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-10-1000]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd5187fd978&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-20-100]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd5187fdeb8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-20-1000]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd5188378d0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-1-100]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd51f5a2320&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-1-1000]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd5187dee80&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-10-100]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd5187f02b0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-10-1000]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd5187f0898&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-20-100]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd5187fd780&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-20-1000]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fd518807278&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-1-100]" time="0.0008168220520019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd5188077b8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-1-1000]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd5187fd550&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-10-100]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd5187f0f28&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-10-1000]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd51f5d6518&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-20-100]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd51f646ef0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-20-1000]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd5187e8240&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-1-100]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd518807828&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-1-1000]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd518807898&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-10-100]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd518807dd8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-10-1000]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd518840400&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-20-100]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd5187decc0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-20-1000]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fd51f4fe438&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-1-100]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd5187f06d8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-1-1000]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd5187fdf60&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-10-100]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd5188076d8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-10-1000]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd518807278&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-20-100]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd518812320&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-20-1000]" time="0.0005939006805419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd518807668&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-1-100]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd5187fd5f8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-1-1000]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd5187f0860&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-10-100]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd51e53fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-10-1000]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd5187e89e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-20-100]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd51f52fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-20-1000]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fd518812048&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-1-100]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd518812860&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-1-1000]" time="0.0007624626159667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd51f646ef0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-10-100]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd518856fd0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-10-1000]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd5187f0978&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-20-100]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd5187fd828&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-20-1000]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd518807908&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-1-100]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd518807cc0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-1-1000]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd518812748&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-10-100]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd518812da0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-10-1000]" time="0.0007848739624023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd518812da0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-20-100]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd518812860&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-20-1000]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fd518807390&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="34" name="test_to_matrix_NumpyMatrixOperator" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:34: &lt;py._xmlgen.raw object at 0x7fd5187fd9b0&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="45" name="test_to_matrix_BlockOperator" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:45: &lt;py._xmlgen.raw object at 0x7fd5187f0978&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="68" name="test_to_matrix_BlockDiagonalOperator" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:68: &lt;py._xmlgen.raw object at 0x7fd5187e8d68&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="86" name="test_to_matrix_AdjointOperator" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:86: &lt;py._xmlgen.raw object at 0x7fd5187de320&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="127" name="test_to_matrix_ComponentProjection" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:127: &lt;py._xmlgen.raw object at 0x7fd51879b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="138" name="test_to_matrix_Concatenation" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:138: &lt;py._xmlgen.raw object at 0x7fd5187de320&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="165" name="test_to_matrix_IdentityOperator" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:165: &lt;py._xmlgen.raw object at 0x7fd51f510e10&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="173" name="test_to_matrix_LincombOperator" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:173: &lt;py._xmlgen.raw object at 0x7fd5188125c0&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="202" name="test_to_matrix_VectorArrayOperator" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:202: &lt;py._xmlgen.raw object at 0x7fd518812ac8&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="214" name="test_to_matrix_ZeroOperator" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:214: &lt;py._xmlgen.raw object at 0x7fd5188074a8&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="27" name="test_polynomials" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:27: &lt;py._xmlgen.raw object at 0x7fd5188077f0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="38" name="test_other_functions" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:38: &lt;py._xmlgen.raw object at 0x7fd5187fd1d0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="46" name="test_weights" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:46: &lt;py._xmlgen.raw object at 0x7fd51f6b9ef0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="51" name="test_points" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:51: &lt;py._xmlgen.raw object at 0x7fd5187f0d30&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestCmp" file="src/pymortests/tools.py" line="61" name="test_props" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:61: &lt;py._xmlgen.raw object at 0x7fd51e533d30&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;0]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd5187fdb70&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;1]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd518807e48&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;2]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd51f52e940&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;3]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd518812fd0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;4]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd5188125f8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;5]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd51f516d30&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;6]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd518849208&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;7]" time="0.00079345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd5187f0080&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;8]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd51f510e10&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;9]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd518812f28&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;10]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd51f52e048&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;11]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd5188074a8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;12]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd5187fdb70&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;13]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd518888eb8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;14]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd51879b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;15]" time="0.0007431507110595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd51882c080&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;16]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd5187fdb70&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;17]" time="0.0003998279571533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd518807518&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;18]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd51f52eba8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;19]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd518812ba8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;20]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd51f5fdc50&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;21]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd51879bb38&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;22]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd51879bf98&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;23]" time="0.0007908344268798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fd5187a7518&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="102" name="testTimingContext" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:102: &lt;py._xmlgen.raw object at 0x7fd51879bc18&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="112" name="testTimingDecorator" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:112: &lt;py._xmlgen.raw object at 0x7fd5188499e8&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="115" name="testTiming" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:115: &lt;py._xmlgen.raw object at 0x7fd51f53e438&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="123" name="testDeprecated" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:123: &lt;py._xmlgen.raw object at 0x7fd5187e84a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;0]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51f568f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;1]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187fd390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;2]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a7198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;3]" time="0.0007827281951904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a7a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;4]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e4d95f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;5]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5188074a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;6]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51f53e588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;7]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51f5161d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;8]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51879bc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;9]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a77b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;10]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a72e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;11]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187b00f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;12]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a7f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;13]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a77b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;14]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51879be10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;15]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd518812ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;16]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51f52e080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;17]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e4d95f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;18]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd518824048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;19]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187b05f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;20]" time="0.000782012939453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e557d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;21]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51f58ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;22]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd518812c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;23]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e5069e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;24]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a7ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;25]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a7358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;26]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187b0358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;0]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187b0b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;1]" time="0.0007178783416748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a7da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;2]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e506d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;3]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51879bd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;4]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd518812eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;5]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e533a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;6]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187b0240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;7]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187b06a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;8]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187bd438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;9]" time="0.0008008480072021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187bd978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;10]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187b08d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;11]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e5336d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;12]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e53ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;13]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e506550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;14]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a7198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;15]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187bd6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;16]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187bd2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;17]" time="0.0008058547973632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187bdeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;18]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187bd2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;19]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a79b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;20]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e5064a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;21]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51f516c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;22]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51f53eda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;23]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187b02b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;24]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e524358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;25]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187c8518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;26]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e557d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;0]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51f568710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;1]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51879b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;2]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a7c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;3]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187bd0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;4]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187bdc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;5]" time="0.0004012584686279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187c82e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;6]" time="0.00040078163146972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187c8a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;7]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51f52e588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;8]" time="0.0004029273986816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e5247f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;9]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187bd2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;10]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e557fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;11]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187b0828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;12]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187a7860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;13]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd518812be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;14]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51879b358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;15]" time="0.0007526874542236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd518856e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;16]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187b0d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;17]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187b00f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;18]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187bd860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;19]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e5240b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;20]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e4f05c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;21]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51879b160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;22]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187f00b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;23]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187f0c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;24]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e506898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;25]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd51e4f0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;26]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fd5187bdef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;0]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187bdf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;1]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187b05c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;2]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd518812be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;3]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187c8240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;4]" time="0.0007920265197753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;5]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187b0eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;6]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187bd4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;7]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e524b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;8]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e4f0f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;9]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e506898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;10]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187c8fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;11]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;12]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d56a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;13]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187c8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;14]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e506dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;15]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e524be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;16]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187bd048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;17]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5188956a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;18]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187a74e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;19]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;20]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;21]" time="0.0008063316345214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e4bbda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;22]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187b08d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;23]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e524e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;24]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e506898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;25]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187c8c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;26]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;0]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;1]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51875f128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;2]" time="0.0007801055908203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;3]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;4]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187c85f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;5]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51f52e588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;6]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187bd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;7]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187b0278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;8]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51875f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;9]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51875f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;10]" time="0.0007379055023193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51875ff28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;11]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e4d6b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;12]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187bd860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;13]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e506e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;14]" time="0.00039649009704589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187c8d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;15]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;16]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51875fd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;17]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51875f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;18]" time="0.000774383544921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51876a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;19]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51875f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;20]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;21]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187c8c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;22]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51f52ec50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;23]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e4d6ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;24]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e4bbda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;25]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51876a320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;26]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51876aac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;0]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e4d6c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;1]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51879b048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;2]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e4ea908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;3]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;4]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51875f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;5]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51876ab70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;6]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51876a588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;7]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51876afd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;8]" time="0.0007710456848144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51876a198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;9]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51875fc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;10]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;11]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e4eac50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;12]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187c8390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;13]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e524be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;14]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e4d6c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;15]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd518774550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;16]" time="0.0007498264312744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187b0278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;17]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187bdda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;18]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e4ea7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;19]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd5187d5080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;20]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51875f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;21]" time="0.00039958953857421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51876ab70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;22]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd518774400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;23]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd518774e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;24]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e4eaa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;25]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd51e47a320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;26]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fd518774eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;0]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187745f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;1]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518774908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;2]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51876ae10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;3]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51875f780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;4]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51875f470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;5]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187d5f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;6]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51875f470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;7]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51876a198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;8]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51876a630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;9]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518774198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;10]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518774cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;11]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e5062b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;12]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4eaf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;13]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187c8e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;14]" time="0.0007581710815429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4eaa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;15]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187b00f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;16]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518774ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;17]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51876a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;18]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4a3be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;19]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518812be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;20]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51875f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;21]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187a7860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;22]" time="0.0007543563842773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187a7860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;23]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51875f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;24]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4a3c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;25]" time="0.00039958953857421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51876a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;26]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518774198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;0]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187b0eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;1]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4ea3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;2]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51877e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;3]" time="0.0007803440093994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51877ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;4]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187bdd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;5]" time="0.0003962516784667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518774630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;6]" time="0.00040221214294433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4a35f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;7]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4bbba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;8]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187c8748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;9]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51877e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;10]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51877e588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;11]" time="0.0007648468017578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51878b198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;12]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51877e6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;13]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187c8438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;14]" time="0.0006659030914306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4d6128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;15]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4a3dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;16]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51876ac50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;17]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e47ab00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;18]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51878b208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;19]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51878b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;20]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187747b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;21]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51876a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;22]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e430b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;23]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51875f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;24]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51877e438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;25]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51877ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;26]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51878b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;0]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51878bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;1]" time="0.0007395744323730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51877eb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;2]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51875fa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;3]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4305f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;4]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51876a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;5]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518849358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;6]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51878bda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;7]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51878b898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;8]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518797240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;9]" time="0.0007665157318115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e47ab00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;10]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51878bb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;11]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187749b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;12]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e430e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;13]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4412b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;14]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51877ec88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;15]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518797080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;16]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518797b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;17]" time="0.0009953975677490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518720080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;18]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187977b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;19]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51875ff28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;20]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4a3fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;21]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e4416a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;22]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd518849358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;23]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51878bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;24]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51e47a860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;25]" time="0.0007288455963134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd5187205c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;26]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fd51878b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;0]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e430fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;1]" time="0.0004012584686279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e441c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;2]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51875f470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;3]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518797940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;4]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518797be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;5]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518720470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;6]" time="0.0004017353057861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518720be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;7]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518797ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;8]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51875f780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;9]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51876a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;10]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518774b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;11]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51878b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;12]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518720c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;13]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518720630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;14]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51872a128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;15]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e441550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;16]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e464cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;17]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518720e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;18]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518720ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;19]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd5187977b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;20]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518797160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;21]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51878b780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;22]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51877e6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;23]" time="0.0007946491241455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51878bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;24]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518797908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;25]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e47ab00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;26]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518720ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;0]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51876a630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;1]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e441d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;2]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518774630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;3]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd5187c8400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;4]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd5187c8a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;5]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e430b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;6]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e3f80f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;7]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd5187204a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;8]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd5187207f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;9]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518797400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;10]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd5187a7c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;11]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51872a128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;12]" time="0.0007991790771484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51872a828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;13]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd5187976d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;14]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518720dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;15]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e4084e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;16]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e3f8630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;17]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e4eada0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;18]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd5187c8a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;19]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51872a320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;20]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51872ad68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;21]" time="0.0006279945373535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51877ec50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;22]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e441748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;23]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e464cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;24]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518720a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;25]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518797c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;26]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51872ada0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;0]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51872a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;1]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51873a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;2]" time="0.0008013248443603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51872a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;3]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e451160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;4]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518720eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;5]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e408f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;6]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e441160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;7]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd5187c8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;8]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51873a470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;9]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51873a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;10]" time="0.0007467269897460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd5187d56d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;11]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e430fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;12]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e408f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;13]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518797630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;14]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e417240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;15]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51872a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;16]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51873a278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;17]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd5187450f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;18]" time="0.0007538795471191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518745630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;19]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51873a160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;20]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51872aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;21]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e417240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;22]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518720f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;23]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51e408390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;24]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd51877eeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;25]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518745128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;26]" time="0.0007517337799072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fd518745b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;0]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e4080f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;1]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518720e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;2]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e417630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;3]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51872a320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;4]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51873aef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;5]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518745860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;6]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518745438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;7]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5187501d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;8]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518745908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;9]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51873a470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;10]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e3bdba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;11]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e451400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;12]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518720a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;13]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e4080f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;14]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5187502e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;15]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5187506d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;16]" time="0.0007827281951904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518797978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;17]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e417828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;18]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51872a048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;19]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51873acf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;20]" time="0.00040149688720703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518745710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;21]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518745f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;22]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5187504a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;23]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518750c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;24]" time="0.0007860660552978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518750c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;25]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518750780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;26]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518745dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;0]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51873a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;1]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e3d0518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;2]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5187202b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;3]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518797da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;4]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518758518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;5]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e408cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;6]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e3d0908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;7]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518750a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;8]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518750e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;9]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518745780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;10]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518745550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;11]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51873a198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;12]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51873ab70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;13]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51872a518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;14]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51872af98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;15]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51873aef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;16]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5187456d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;17]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e3f80f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;18]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518750588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;19]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e3d0e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;20]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e3bd860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;21]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518888eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;22]" time="0.0008208751678466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5187fdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;23]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e3d0da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;24]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518750b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;25]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e417cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;26]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5187454a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;0]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e3df860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;1]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51872a828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;2]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518758588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;3]" time="0.0007925033569335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51878b080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;4]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e3df128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;5]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51873afd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;6]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518745a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;7]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518750f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;8]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518720e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;9]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518758240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;10]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518758da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;11]" time="0.0008809566497802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5186ea320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;12]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518758c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;13]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51e3d0e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;14]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5187502e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;15]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518745f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;16]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51873ab70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;17]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51872a240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;18]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5186ea1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;19]" time="0.0007572174072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5186ea860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;20]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd51872a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;21]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518745400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;22]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518750d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;23]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5187fd390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;24]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd518758ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;25]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5186ea908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;26]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fd5186ea240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;0]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186eae80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;1]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186eacf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;2]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518758588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;3]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e370ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;4]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e408828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;5]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e417a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;6]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51873a358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;7]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e3df518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;8]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f43c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;9]" time="0.0007708072662353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e3df7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;10]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e417cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;11]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e3d0518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;12]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518758080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;13]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186ea080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;14]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186eada0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;15]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f40b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;16]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f4908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;17]" time="0.0007832050323486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186ea9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;18]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e396be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;19]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518758e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;20]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e451400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;21]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51873acc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;22]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f49e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;23]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f4550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;24]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f8208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;25]" time="0.0007979869842529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f8748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;26]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f4748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;0]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e3df7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;1]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e417fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;2]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518758b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;3]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e396be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;4]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186ea1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;5]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f8080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;6]" time="0.0007696151733398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f8c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;7]" time="0.0006899833679199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e396358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;8]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e370a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;9]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51873aba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;10]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e3a7358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;11]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f4e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;12]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f8940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;13]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f82b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;14]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5187092e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;15]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f87b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;16]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f45c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;17]" time="0.000576019287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5187450f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;18]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e3dffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;19]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518758b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;20]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186eaeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;21]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518709048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;22]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5187097f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;23]" time="0.0006148815155029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e370e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;24]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e3a7400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;25]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f8b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;26]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f83c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;0]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f47f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;1]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f4cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;2]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186eaeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;3]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e3dfa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;4]" time="0.0007731914520263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51872ac88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;5]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f45f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;6]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5187450f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;7]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f8e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;8]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e3a7898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;9]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e336748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;10]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e370ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;11]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518888eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;12]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e4088d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;13]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e3964a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;14]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518750f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;15]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f8550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;16]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f8748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;17]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f47f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;18]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186eac18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;19]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518709390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;20]" time="0.0007994174957275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518709ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;21]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f4ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;22]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd5186f82b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;23]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e3a7be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;24]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd51e336be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;25]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518758358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;26]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fd518709c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;0]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518709470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;1]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;2]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518709588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;3]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e396748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;4]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e336d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;5]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186f8400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;6]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186f4b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;7]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186ea908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;8]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;9]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;10]" time="0.0008180141448974609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e347400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;11]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e3a7940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;12]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51873aba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;13]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e396748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;14]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518709b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;15]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;16]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;17]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;18]" time="0.0008032321929931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;19]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;20]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5187094e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;21]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e336e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;22]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186f8ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;23]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e2ee4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;24]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e347358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;25]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186a27b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;26]" time="0.0007531642913818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186a2cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;0]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e3a7940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;1]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e3969e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;2]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5187093c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;3]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e4080f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;4]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;5]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186a2a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;6]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186a20b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;7]" time="0.0007781982421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186ac278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;8]" time="0.0006012916564941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186a2390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;9]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;10]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5187177b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;11]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5187099e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;12]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186f82b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;13]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186f4630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;14]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186ac0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;15]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186ac898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;16]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e2eeeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;17]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e3969e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;18]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;19]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e2fda20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;20]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186a2860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;21]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186a2e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;22]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186ac518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;23]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186acda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;24]" time="0.0007865428924560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186acb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;25]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186ac860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;26]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186a2860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;0]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e2fd978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;1]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5187094e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;2]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518758da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;3]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e3a7940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;4]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186b8320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;5]" time="0.0007736682891845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186f4dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;6]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e3969e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;7]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5187176a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;8]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e2fdf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;9]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186a2fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;10]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186ac2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;11]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186b8160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;12]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186b8be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;13]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e2fdb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;14]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186f87f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;15]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186b8978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;16]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186b8438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;17]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186ac668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;18]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186aca90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;19]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;20]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186a2d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;21]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e2ee198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;22]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186a29e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;23]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd518717940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;24]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186ac358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;25]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd51e396748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;26]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fd5186b8208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;0]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51873aba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;1]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e30d240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;2]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd518709d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;3]" time="0.0007946491241455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e30d198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;4]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186b8be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;5]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186b85c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;6]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186acef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;7]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5187177f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;8]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186a2cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;9]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd518709c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;10]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186ea320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;11]" time="0.000743865966796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186ea320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;12]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186a2c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;13]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2ee4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;14]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186acd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;15]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186b85c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;16]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2b1ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;17]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e30da20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;18]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186c34a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;19]" time="0.00077056884765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186c39e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;20]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2b1ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;21]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186b85c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;22]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186acef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;23]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2ee438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;24]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd518709898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;25]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186c36a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;26]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186c3358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;0]" time="0.0007848739624023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186c3f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;1]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186c3390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;2]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd518709908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;3]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186a2a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;4]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186f4dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;5]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186b8208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;6]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2c5128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;7]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d3048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;8]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d3588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;9]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2b1f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;10]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186b8208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;11]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5187175f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;12]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186a2f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;13]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186c3160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;14]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186c3cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;15]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d3358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;16]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d3a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;17]" time="0.0008351802825927734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186c3240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;18]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd518709978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;19]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd518717710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;20]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186b8ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;21]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2c5da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;22]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d3c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;23]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d35f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;24]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d3fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;25]" time="0.0007383823394775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e30d630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;26]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d3198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;0]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2b1908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;1]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186aceb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;2]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186a2940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;3]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd518709978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;4]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51865d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;5]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51865d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;6]" time="0.000728607177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51865de10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;7]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2d6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;8]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd518717518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;9]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2c5c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;10]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d3fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;11]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d3e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;12]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51865dc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;13]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51865d160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;14]" time="0.0007393360137939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd518668390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;15]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51865dc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;16]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2e41d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;17]" time="0.0004000663757324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;18]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186acb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;19]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2d6b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;20]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186c3b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;21]" time="0.0005676746368408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186681d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;22]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186689b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;23]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2d6da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;24]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186ac518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;25]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd5186d3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;26]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fd51e2e4908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51865dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518668a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518668470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518668eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2c51d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518668f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518668748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186d37f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186d36a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51865d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.0005548000335693359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2d6860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186c37b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0007536411285400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51865d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51865d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186d37b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186b8208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518668c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2c5da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186c3860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186ea9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186a2e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2e43c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.0004017353057861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518668518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186685c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186d37f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e252400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51865d940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186770b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.0011401176452636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186775f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51865d710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2529e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186d37b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186686a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2e4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e3df860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186774e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518677b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e30d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518668518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2ee438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e252a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51865d358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518677c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186776a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867d080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.000774383544921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518677320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51f568710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186d3fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e31e438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2c5da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2624a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186c3ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0007419586181640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186a2e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e262be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186686d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e252208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51f568710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186776a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867de80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0007450580596923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518687400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867d470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518677898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1f3160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2ee198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186686a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e262160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186872b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0007584095001220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518687940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2e4f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2524a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1f3a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186779b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186871d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518687080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518687f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518687198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867db38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867d710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1f3be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51865d940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518668fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e262898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186964a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.0008008480072021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e262e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e23cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186776a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867d710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518687748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518687e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186960b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186969e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0008378028869628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518687da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2057f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867db70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1f3550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518668f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186969e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518696630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186212e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186686a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e205be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518696470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518696b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e262898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186877f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867dac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e336d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186775c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518677c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0004031658172607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518687a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e214400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518696b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51f568710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e205748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51878bf28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.0007834434509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518709ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1f3a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186962e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2140b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186877f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867d710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518677e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2d6128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0007894039154052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186c39e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518677320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2e47b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e214e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518696be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1f34a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518709978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518621b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0007803440093994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.00039839744567871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518621828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e205160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186965f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e214e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e226550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186a2b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186c3390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.0008018016815185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862f630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867d208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2267f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2146a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186965f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518621b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518621c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862fc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518621be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518696860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518687400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e226550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2d6320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862f550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.0007662773132324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862fd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e226a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186873c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e205748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1b50b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0007715225219726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186219b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1b56a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518696d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e226dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862f240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863cf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.0007996559143066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.0005545616149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862f908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867d668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e226898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1f3a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518621f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0007846355438232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1b5fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e226e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862fda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1c6400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186461d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51864f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0005731582641601562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186461d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51862f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518687438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e2146a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186219b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51864f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e226550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1c6358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863cac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5187fd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518677320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.0007977485656738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51867d898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.00040078163146972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186461d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e214dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e226e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1b5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518621128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51865d550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1b55f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1c6358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518696f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51864f208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0007636547088623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51864fcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863ca90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0004000663757324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5186873c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1d7e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1b5a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51864fd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51864f358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185e0240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0005707740783691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51864fb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518621048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1d7c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.00040078163146972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1e7358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185e02e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185e0748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.000759124755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1e7208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1d7c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51864fe48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0004029273986816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51864ff98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185e0518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185e0c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.0007407665252685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185e0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185e0860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51864f940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518621748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1c6e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51863c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1e7400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185ea588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0007555484771728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185eaac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd518646828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1c6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51864fa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e1785f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185e0da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185ea828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185ea470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.0007617473602294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185f6048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185ea630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.0004019737243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd5185e0b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fd51e178d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;0]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51864fd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;1]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd518621048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;2]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5186466d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;3]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;4]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;5]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e2524a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;6]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e1d7550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;7]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e178b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;8]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185e0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;9]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ea7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;10]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185eaef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;11]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f64a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;12]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;13]" time="0.0007467269897460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185eada0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;14]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185e0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;15]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51864ff98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;16]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd518646710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;17]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e19f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;18]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;19]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;20]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ff0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;21]" time="0.0007441043853759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;22]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;23]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e1e75f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;24]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd518646d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;25]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51864ff98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;26]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185e0c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;0]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ff2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;1]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ff9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;2]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e1d7f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;3]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51863c748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;4]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;5]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;6]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e178550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;7]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185e0eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;8]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185eacc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;9]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51862f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;10]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51864fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;11]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51862f630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;12]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185eacc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;13]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185e00f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;14]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e1e7a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;15]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;16]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e130978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;17]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e19ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;18]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5186776a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;19]" time="0.0007691383361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd518621be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;20]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e130828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;21]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;22]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e178400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;23]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185e0f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;24]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185eab38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;25]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51878bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;26]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ff7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;0]" time="0.0007843971252441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd518668668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;1]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ead68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;2]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185e0da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;3]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;4]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e1302e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;5]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e19feb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;6]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ff9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;7]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd518613278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;8]" time="0.0007905960083007812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5186137b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;9]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ffe10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;10]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e141390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;11]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;12]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e1782b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;13]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ea240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;14]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5186136d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;15]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd518613128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;16]" time="0.0008003711700439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd518613cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;17]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ea240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;18]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185f6668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;19]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e130e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;20]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51e1418d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;21]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ff9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;22]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd518613a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;23]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5186134a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;24]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd51859d358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;25]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd518613630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;26]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fd5185ff860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;0]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd51e141d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;1]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd5185f6a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;2]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd5185e0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;3]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd5185eab38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;4]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd51859d048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;5]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd51859d860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;6]" time="0.0010533332824707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd51862f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;7]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd51e1e7a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;8]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd51e141240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;9]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd5185ffe10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;10]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd518613828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;11]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fd5186130f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;12]" time="0.007909059524536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;13]" time="0.006148815155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;14]" time="0.0076406002044677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;15]" time="0.011098384857177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;16]" time="0.013150453567504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;17]" time="0.01007843017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;18]" time="0.01047372817993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;19]" time="0.01310276985168457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;20]" time="0.043645381927490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;21]" time="0.10005712509155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;22]" time="0.005115985870361328"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;23]" time="0.0043070316314697266"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;24]" time="0.007025003433227539"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;25]" time="0.049484968185424805"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;26]" time="0.11274433135986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;0]" time="0.0047681331634521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;1]" time="0.003942251205444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;2]" time="0.004464387893676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;3]" time="0.005343198776245117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;4]" time="0.006060361862182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;5]" time="0.003487825393676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;6]" time="0.003198385238647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;7]" time="0.004237651824951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;8]" time="0.01551365852355957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;9]" time="0.03127741813659668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;10]" time="0.006643056869506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;11]" time="0.007410526275634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;12]" time="0.007333993911743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;13]" time="0.005963802337646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;14]" time="0.0077936649322509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;15]" time="0.01068115234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;16]" time="0.012159347534179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;17]" time="0.011438608169555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;18]" time="0.010584831237792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;19]" time="0.014453411102294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;20]" time="0.04117393493652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;21]" time="0.0889749526977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;22]" time="0.00429224967956543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;23]" time="0.0034742355346679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;24]" time="0.005917787551879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;25]" time="0.051535606384277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;26]" time="0.11850929260253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;0]" time="0.0045931339263916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;1]" time="0.0038423538208007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;2]" time="0.004458904266357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;3]" time="0.00542902946472168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;4]" time="0.005660057067871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;5]" time="0.0032236576080322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;6]" time="0.0030672550201416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;7]" time="0.004092693328857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;8]" time="0.016419410705566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;9]" time="0.030073165893554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;10]" time="0.0067615509033203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;11]" time="0.007524728775024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;12]" time="0.0074465274810791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;13]" time="0.006090641021728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;14]" time="0.007554769515991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;15]" time="0.01118612289428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;16]" time="0.012557744979858398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;17]" time="0.010650873184204102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;18]" time="0.009307622909545898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;19]" time="0.012749433517456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;20]" time="0.04023122787475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;21]" time="0.08912420272827148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;22]" time="0.0044269561767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;23]" time="0.0035598278045654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;24]" time="0.005936384201049805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;25]" time="0.05321049690246582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;26]" time="0.12138843536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;0]" time="0.01919698715209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;1]" time="0.02040863037109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;2]" time="0.020905017852783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;3]" time="0.02413010597229004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;4]" time="0.024245738983154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;5]" time="0.016169309616088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;6]" time="0.015706777572631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;7]" time="0.019035816192626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;8]" time="0.0909733772277832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;9]" time="0.16666293144226074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;10]" time="0.03290963172912598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;11]" time="0.03439450263977051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;12]" time="0.032868146896362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;13]" time="0.0257108211517334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;14]" time="0.03780412673950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;15]" time="0.05207514762878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;16]" time="0.056760311126708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;17]" time="0.04994344711303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;18]" time="0.049990177154541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;19]" time="0.0652761459350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;20]" time="0.20869040489196777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;21]" time="0.4720797538757324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;22]" time="0.0174252986907959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;23]" time="0.018267154693603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;24]" time="0.02830338478088379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;25]" time="0.29041028022766113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;26]" time="0.6714799404144287"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;0]" time="0.019805192947387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;1]" time="0.02158665657043457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;2]" time="0.01982593536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;3]" time="0.02472233772277832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;4]" time="0.024235010147094727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;5]" time="0.01601862907409668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;6]" time="0.016270875930786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;7]" time="0.019429445266723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;8]" time="0.09338688850402832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;9]" time="0.17318177223205566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;10]" time="0.03383278846740723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;11]" time="0.03618955612182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;12]" time="0.0339810848236084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;13]" time="0.02635478973388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;14]" time="0.03597450256347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;15]" time="0.05252408981323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;16]" time="0.056464433670043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;17]" time="0.04943704605102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;18]" time="0.05260276794433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;19]" time="0.0662698745727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;20]" time="0.21680927276611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;21]" time="0.4751896858215332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;22]" time="0.01793956756591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;23]" time="0.017946720123291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;24]" time="0.029749631881713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;25]" time="0.3252730369567871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;26]" time="0.6946253776550293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;0]" time="0.019006967544555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;1]" time="0.02036142349243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;2]" time="0.01974940299987793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;3]" time="0.024636030197143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;4]" time="0.02396869659423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;5]" time="0.01610708236694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;6]" time="0.015929698944091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;7]" time="0.018921852111816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;8]" time="0.09223389625549316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;9]" time="0.16905498504638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;10]" time="0.03459477424621582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;11]" time="0.03496265411376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;12]" time="0.033138275146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;13]" time="0.025890350341796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;14]" time="0.03578543663024902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;15]" time="0.05265092849731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;16]" time="0.05566143989562988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;17]" time="0.05061531066894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;18]" time="0.05048179626464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;19]" time="0.06488704681396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;20]" time="0.20959901809692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;21]" time="0.4691774845123291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;22]" time="0.017476320266723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;23]" time="0.01764059066772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;24]" time="0.030817508697509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;25]" time="0.33791422843933105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;26]" time="0.7539691925048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.017836570739746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.005018949508666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.025728940963745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0287172794342041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.02946186065673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.04021930694580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.014555931091308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.004823207855224609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.06394100189208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.10815739631652832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.2862856388092041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.04668116569519043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.03251481056213379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.009151697158813477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.038816213607788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.06593513488769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.07191777229309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.07828998565673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0475771427154541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.00963449478149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.26419878005981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.21601176261901855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.5532779693603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.09901690483093262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.016910552978515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.006372690200805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.2515268325805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.43495750427246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="1.3082523345947266"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.10963654518127441"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.01750636100769043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.005004167556762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.027155160903930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.029728412628173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.029410600662231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.04020190238952637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.01472020149230957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.004616737365722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0645151138305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.10955166816711426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.2741076946258545"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.04661726951599121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.03236269950866699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.008745431900024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.03781557083129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.06537055969238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.07170772552490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.07555222511291504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.04840278625488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.008443355560302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.2638247013092041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.21200013160705566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.5535962581634521"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.10042405128479004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.01621079444885254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.006791353225708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.2833681106567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.47585248947143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="1.4349970817565918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.11676335334777832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.01802802085876465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.005296945571899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.02530694007873535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.028232574462890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.029892921447753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.039861202239990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.014447927474975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.004716157913208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.06365132331848145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.10932087898254395"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.27802419662475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.047410011291503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0341646671295166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.009135246276855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.03955435752868652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.06719732284545898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.07244634628295898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.07656431198120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.047713279724121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.009577035903930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.27107977867126465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.2137737274169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.5650255680084229"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.09853315353393555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.015928983688354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.006424903869628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.3077969551086426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.5189683437347412"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="1.597921371459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.1261746883392334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.017699480056762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.00523829460144043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.02520155906677246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.02870488166809082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.029526710510253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.04012727737426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.014511585235595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.00471186637878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.06351852416992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.10938215255737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.2754960060119629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.04691362380981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.033370018005371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.008872032165527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.038819313049316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.06493473052978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.07519364356994629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.07506060600280762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.04633688926696777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.008679866790771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.25620317459106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.21300530433654785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.554067850112915"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.09807395935058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.01613473892211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.006620645523071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.33630895614624023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.5624382495880127"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="1.734386682510376"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.13547372817993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.01792001724243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.005136966705322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.02566814422607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0288083553314209"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.029329776763916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.04023551940917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.014658927917480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0048370361328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.06429791450500488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.10914039611816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.27443671226501465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.04585099220275879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.03590083122253418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.008883953094482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.03673958778381348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.06527543067932129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.07177281379699707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.07643842697143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.04820060729980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.008448123931884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.2633841037750244"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.2170853614807129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.5568156242370605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.10057735443115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.01627659797668457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.007239818572998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.3756141662597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.6271572113037109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="1.9199390411376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.13547492027282715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.01766371726989746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.005224704742431641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.02584552764892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.029189586639404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.030110836029052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.04071187973022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.014790534973144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.004681110382080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.06362748146057129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.10884571075439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.2797737121582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.047025442123413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.03292131423950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.009270191192626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.039821624755859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.06698870658874512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.07257509231567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.07615399360656738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.04672098159790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.008814096450805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.27178359031677246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.22138047218322754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.5521790981292725"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.10060000419616699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.016174793243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.006802558898925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.4107358455657959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.6788966655731201"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="2.096428871154785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.14563488960266113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.018125295639038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0051767826080322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.02611088752746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.028128385543823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.029394865036010742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.04050803184509277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.014418601989746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.004630088806152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0641624927520752"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.11148405075073242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.27704501152038574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0460813045501709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.032216787338256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.008785724639892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0377354621887207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0652170181274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.07097697257995605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0769350528717041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.04822206497192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.008867263793945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.2654561996459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.214583158493042"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.5483851432800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.09849166870117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.015918493270874023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.007189750671386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.4489624500274658"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.747713565826416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="2.285456895828247"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.15425682067871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.017487764358520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0051364898681640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.025656700134277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.028329133987426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0291140079498291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0406191349029541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.01472330093383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.004567146301269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.06392192840576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.1091911792755127"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.27301979064941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0462031364440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.03233528137207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.008826494216918945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.03732442855834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.06481122970581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.07038617134094238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.07427430152893066"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.04628920555114746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.00860142707824707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.2690463066101074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.21558117866516113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.5487995147705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.09859514236450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.016298294067382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.007056236267089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.47551703453063965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.7920446395874023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="2.4660720825195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.16048455238342285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.017867088317871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0049970149993896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.025847434997558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.028689146041870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.029315471649169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.04068422317504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.014378070831298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.004767894744873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.06323003768920898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.10964393615722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.27903103828430176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.04654335975646973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.03227496147155762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.009028434753417969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.03844499588012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0650627613067627"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.07141661643981934"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.07599520683288574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.05050826072692871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.009463310241699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.27541565895080566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.21812701225280762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.551260232925415"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.1003715991973877"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.016210556030273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.007375001907348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.5192587375640869"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.8545842170715332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="2.6626601219177246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.16350483894348145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.049337148666381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.1289055347442627"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.10008764266967773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.1134037971496582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.12222957611083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.09923243522644043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.03862357139587402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.11637520790100098"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.27146410942077637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.5326306819915771"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="1.4989159107208252"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.11432242393493652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.09355950355529785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.2756314277648926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.1538844108581543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.2715766429901123"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.31478118896484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.34252238273620605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.13516521453857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.2978382110595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="1.103825569152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="1.0478336811065674"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="2.8978159427642822"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.25360631942749023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.043827056884765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.23658204078674316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="2.435154914855957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="4.411468744277954"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="16.755552291870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.4977226257324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0486910343170166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.12926292419433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.09978055953979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.11555933952331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.12067413330078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.09883236885070801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.03772854804992676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.11455965042114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.27673792839050293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.539548397064209"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="1.522442102432251"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.11434102058410645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.09348583221435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.2745785713195801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.1558701992034912"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.2760026454925537"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.32224154472351074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.34376049041748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.13780593872070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.2948465347290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="1.1094999313354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="1.029799222946167"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="3.019829273223877"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.25933337211608887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.04689192771911621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.26137590408325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="3.0214908123016357"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="5.3393754959106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="20.641735792160034"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.6551392078399658"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.05386161804199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.14572930335998535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.11552548408508301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.1360635757446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.14165592193603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.11383318901062012"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.05051398277282715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.1379542350769043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.3376891613006592"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.6003916263580322"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="1.6852960586547852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.11711502075195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.09467029571533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.27596378326416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.15282249450683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.27733325958251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.32686543464660645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.3497936725616455"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.13660311698913574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.2996985912322998"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="1.0580699443817139"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.9888179302215576"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="2.9075350761413574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.25168919563293457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.04413414001464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.2930939197540283"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="3.5439882278442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="6.303076267242432"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="23.10727024078369"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.7054691314697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.05271339416503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.1412522792816162"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.11139965057373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.12346935272216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.13017868995666504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.1036534309387207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.03934311866760254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.12382006645202637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.29814600944519043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.5835294723510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="1.6431002616882324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.12656760215759277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.10262489318847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.30932044982910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.16706633567810059"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.30041074752807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.33550405502319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.36319661140441895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.14656376838684082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.3147096633911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="1.1952574253082275"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="1.0992674827575684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="3.1597657203674316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.24388623237609863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.04314136505126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.2975430488586426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="4.068002462387085"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="7.021759033203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="26.136768341064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.7063543796539307"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.04887104034423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.13031888008117676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.09974980354309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.11778593063354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.12497329711914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.09803295135498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.03796887397766113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.11465811729431152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.2668156623840332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.5340073108673096"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="1.5111713409423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.11584663391113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.09393095970153809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.27170252799987793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.15270590782165527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.2695612907409668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.3171193599700928"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.3383340835571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.12876605987548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.2904636859893799"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="1.0873584747314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="1.0049967765808105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="2.8489184379577637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.24399614334106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.04226064682006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.3121354579925537"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="4.6003804206848145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="7.973919630050659"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="29.18777322769165"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.7430722713470459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.04975581169128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.1287086009979248"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.09947419166564941"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.11328577995300293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.12016010284423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0990910530090332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.03728127479553223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.11340641975402832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.26363587379455566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.5174458026885986"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="1.4944870471954346"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.11488533020019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.09353303909301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.27127957344055176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.15709447860717773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.267763614654541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.3056178092956543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.33252620697021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.1269667148590088"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.27546191215515137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="1.0312175750732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.9681351184844971"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="2.807366132736206"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.24147725105285645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.04249715805053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.3304328918457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="5.143207788467407"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="8.965164184570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="32.91962671279907"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.8093113899230957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.04714798927307129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.13189339637756348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.09905505180358887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.1146399974822998"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.11973762512207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.09406900405883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.03618741035461426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.11047959327697754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.2639040946960449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.5218873023986816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="1.4910004138946533"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.11248612403869629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.09342551231384277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.2765944004058838"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.1514272689819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.27031517028808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.30996227264404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.3352797031402588"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.12811732292175293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.27561283111572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="1.034771203994751"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.9707832336425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="2.7929890155792236"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.24476337432861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.04247093200683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.3610720634460449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="5.726089239120483"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="9.801879644393921"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="36.17666172981262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.9076199531555176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.04883122444152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.12979722023010254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.09998631477355957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.11529684066772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.1212148666381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0970611572265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0362095832824707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.11033153533935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.26337552070617676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.5211575031280518"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="1.4763944149017334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.11475658416748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.09452962875366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.2762279510498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.15250873565673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.27294325828552246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.3184654712677002"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.33679962158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.13053011894226074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.28014683723449707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="1.0546441078186035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.9939160346984863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="2.8999948501586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.25243330001831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.04686164855957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.392458438873291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="6.2103869915008545"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="10.820428609848022"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="40.44092392921448"><system-err>no more timer available, reusing last one
</system-err></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.920879602432251"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.04821896553039551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.1267106533050537"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.09764575958251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.11302804946899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.11965322494506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.09571194648742676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.03753376007080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.11267209053039551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.2626307010650635"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.5316636562347412"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="1.4754815101623535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.11685562133789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.09238505363464355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.2707352638244629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.1481642723083496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.2700207233428955"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.3139934539794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.3354072570800781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.1295924186706543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.2785027027130127"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="1.0299131870269775"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.9623091220855713"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="2.821780204772949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.25103163719177246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.04284095764160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.4040398597717285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="6.658118963241577"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="12.558935165405273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="39.2689094543457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.920175313949585"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;0]" time="0.017726898193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;1]" time="0.018223047256469727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;2]" time="0.03552985191345215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;3]" time="0.04111838340759277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;4]" time="0.03769254684448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;5]" time="0.013977766036987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;6]" time="0.0142822265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;7]" time="0.036363840103149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;8]" time="0.2121119499206543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;9]" time="0.41878557205200195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;10]" time="0.031527042388916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;11]" time="0.06531262397766113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;12]" time="0.06566452980041504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;13]" time="0.051383018493652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;14]" time="0.07178235054016113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;15]" time="0.10393095016479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;16]" time="0.11210775375366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;17]" time="0.047837257385253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;18]" time="0.04686546325683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;19]" time="0.1429758071899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;20]" time="0.4072134494781494"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;21]" time="0.92633056640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;22]" time="0.01704883575439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;23]" time="0.017212390899658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;24]" time="0.17605304718017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;25]" time="4.640475511550903"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;26]" time="10.738068103790283"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;0]" time="0.01743149757385254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;1]" time="0.018381118774414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;2]" time="0.03535771369934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;3]" time="0.037955284118652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;4]" time="0.03752613067626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;5]" time="0.014652729034423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;6]" time="0.013968944549560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;7]" time="0.03587079048156738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;8]" time="0.20969676971435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;9]" time="0.41280460357666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;10]" time="0.031090497970581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;11]" time="0.06321430206298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;12]" time="0.06202101707458496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;13]" time="0.05100584030151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;14]" time="0.0680088996887207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;15]" time="0.09758114814758301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;16]" time="0.10761189460754395"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;17]" time="0.04521536827087402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;18]" time="0.04613137245178223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;19]" time="0.13786005973815918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;20]" time="0.4082374572753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;21]" time="0.9325940608978271"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;22]" time="0.02257847785949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;23]" time="0.017453432083129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;24]" time="0.17924809455871582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;25]" time="4.677544116973877"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;26]" time="10.760631322860718"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;0]" time="0.01785898208618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;1]" time="0.01833939552307129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;2]" time="0.03591036796569824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;3]" time="0.03856658935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;4]" time="0.03783774375915527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;5]" time="0.014094829559326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;6]" time="0.01402425765991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;7]" time="0.03629422187805176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;8]" time="0.21181869506835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;9]" time="0.4129340648651123"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;10]" time="0.03146481513977051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;11]" time="0.06330084800720215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;12]" time="0.06354832649230957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;13]" time="0.052396535873413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;14]" time="0.06966781616210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;15]" time="0.10140180587768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;16]" time="0.10996365547180176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;17]" time="0.04568767547607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;18]" time="0.046512603759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;19]" time="0.14066481590270996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;20]" time="0.39922142028808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;21]" time="0.9446516036987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;22]" time="0.0167086124420166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;23]" time="0.017194747924804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;24]" time="0.1803150177001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;25]" time="4.65018630027771"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;26]" time="10.78073501586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.003133535385131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0015339851379394531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0038306713104248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.004099845886230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.005900859832763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.004952192306518555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0024123191833496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0015158653259277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.005505084991455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.006888628005981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.02112436294555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.005473136901855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.00446319580078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0022246837615966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.005029916763305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.008317947387695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.009018182754516602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.014133214950561523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0072438716888427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002521514892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.062059640884399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.02394700050354004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.0733184814453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.008508443832397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.002638578414916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0028738975524902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.02850651741027832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.03865933418273926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.12895441055297852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.009847402572631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.002835988998413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.00160980224609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.004082679748535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0042192935943603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.006012439727783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.005073070526123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.002418994903564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.001461029052734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.005692481994628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0069124698638916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.021425962448120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.005425930023193359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.00447392463684082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0022644996643066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.005087375640869141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.008238792419433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.008968830108642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.01392054557800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0073168277740478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0027697086334228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.05013728141784668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.021640777587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.07448935508728027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.00842428207397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0026264190673828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.003934383392333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.04641246795654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.041092872619628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.18010425567626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.010382890701293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.002759695053100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0014431476593017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0037500858306884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0038831233978271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.005661487579345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.004911899566650391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0023610591888427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.001506805419921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0057141780853271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0069310665130615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.02156829833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0053997039794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.004407644271850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0021326541900634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0050008296966552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.008054971694946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.008799552917480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.013851404190063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.006947040557861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002402067184448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.046593427658081055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.021502256393432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.0732276439666748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.00923013687133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.002780437469482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004210233688354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.04772305488586426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.04229259490966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.18630266189575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.011099576950073242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.00391697883605957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0016722679138183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0040204524993896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.004307985305786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.006070375442504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.005032062530517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.002578258514404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.001619577407836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.005863666534423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.007599592208862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.02185821533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0066127777099609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.004615068435668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.002391338348388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.005326509475708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.008586406707763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.009307146072387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.01455235481262207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.008103370666503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0026464462280273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.05060100555419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.022437334060668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.07598757743835449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.008878946304321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0037441253662109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0028676986694335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.028344154357910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.05962634086608887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.1880793571472168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.010753870010375977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.002863168716430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0017087459564208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.004179239273071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.004559516906738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.00622868537902832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.005042314529418945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0027685165405273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0016264915466308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.006104230880737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.007891654968261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.023394346237182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.00644373893737793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.004763126373291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0024230480194091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.005431652069091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.00876474380493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.009953975677490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.015900373458862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.008125543594360352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0027074813842773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.048772335052490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.022359848022460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.07402420043945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.009034395217895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.002719402313232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.003757476806640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.04731273651123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.0643620491027832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.23717999458312988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.011334657669067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002916097640991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0016791820526123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.004043102264404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.004262447357177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.00606536865234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.005059957504272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0024869441986083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0015408992767333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.005935192108154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.007364749908447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.022228002548217773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.006263017654418945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.004521369934082031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002361774444580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.005185842514038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.008511066436767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.00921487808227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.014474868774414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.007929563522338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0025599002838134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.04871654510498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.0226137638092041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.07374715805053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.008724689483642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.002706289291381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.003846406936645508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.05056190490722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.06515812873840332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.23744988441467285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.011394739151000977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.002934694290161133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0016353130340576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.00412440299987793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.004281520843505859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.006124734878540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.005150794982910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0024597644805908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0015871524810791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.005778312683105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0072476863861083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.021724939346313477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.006453752517700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.004575014114379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.002389669418334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0051424503326416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.008220672607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.008970260620117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.014150142669677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.007962942123413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.002597332000732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.04824542999267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.021687984466552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.0728914737701416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.008455514907836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.002691984176635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0027589797973632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.028250932693481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.05995512008666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.1871020793914795"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010761022567749023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.002818584442138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0016694068908691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.004312276840209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.004352569580078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0062029361724853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.005190372467041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0025527477264404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0016465187072753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.006117582321166992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.007620334625244141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.02252364158630371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.006445884704589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.004456281661987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0024459362030029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.005494356155395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.00873422622680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.009687185287475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.015445470809936523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.007980108261108398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002549886703491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.04839324951171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.022785663604736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.07626867294311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.008787393569946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.003634929656982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.003724813461303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.04772353172302246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.06537747383117676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.24280333518981934"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.01221466064453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0039408206939697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0017366409301757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.004137754440307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.004401206970214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0062713623046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.005156755447387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.002626180648803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0016536712646484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0061914920806884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.008120298385620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.022640228271484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0064923763275146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.004847049713134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0025310516357421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.005361795425415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.008441448211669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.009210586547851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.014569759368896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.008032560348510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0027379989624023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.0494234561920166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.022598981857299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.07691121101379395"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.009026765823364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0037310123443603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0037975311279296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.048280954360961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.06601214408874512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.24219369888305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.012500762939453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;0]" time="0.005356311798095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;1]" time="0.004313468933105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;2]" time="0.007436990737915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;3]" time="0.0093994140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;4]" time="0.01097869873046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;5]" time="0.00386810302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;6]" time="0.003725767135620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;7]" time="0.007853507995605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;8]" time="0.026293277740478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;9]" time="0.05131649971008301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;10]" time="0.00812220573425293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;11]" time="0.013003826141357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;12]" time="0.012876033782958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;13]" time="0.011454343795776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;14]" time="0.014122486114501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;15]" time="0.021572589874267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;16]" time="0.026104211807250977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;17]" time="0.00910496711730957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;18]" time="0.007967710494995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;19]" time="0.010925054550170898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;20]" time="0.043120384216308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;21]" time="0.08957123756408691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;22]" time="0.004679441452026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;23]" time="0.004092216491699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;24]" time="0.008957624435424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;25]" time="0.05154705047607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;26]" time="0.10414433479309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;0]" time="0.005238533020019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;1]" time="0.0042743682861328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;2]" time="0.007451772689819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;3]" time="0.009273052215576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;4]" time="0.010570287704467773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;5]" time="0.003941774368286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;6]" time="0.003747701644897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;7]" time="0.007984638214111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;8]" time="0.027061939239501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;9]" time="0.05208253860473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;10]" time="0.008114337921142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;11]" time="0.013091087341308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;12]" time="0.013080120086669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;13]" time="0.011624574661254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;14]" time="0.014236688613891602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;15]" time="0.02189493179321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;16]" time="0.026573896408081055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;17]" time="0.009265422821044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;18]" time="0.007923126220703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;19]" time="0.011285543441772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;20]" time="0.04249238967895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;21]" time="0.09438204765319824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;22]" time="0.004992485046386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;23]" time="0.00406646728515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;24]" time="0.010279655456542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;25]" time="0.07386922836303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;26]" time="0.16664671897888184"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;0]" time="0.005177736282348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;1]" time="0.004601478576660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;2]" time="0.007799625396728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;3]" time="0.009896993637084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;4]" time="0.011301279067993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;5]" time="0.005139350891113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;6]" time="0.0038442611694335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;7]" time="0.007984161376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;8]" time="0.027438879013061523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;9]" time="0.05344843864440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;10]" time="0.00807642936706543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;11]" time="0.013231515884399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;12]" time="0.013077974319458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;13]" time="0.010955572128295898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;14]" time="0.01331639289855957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;15]" time="0.021985769271850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;16]" time="0.026532411575317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;17]" time="0.009927988052368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;18]" time="0.009404420852661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;19]" time="0.011691570281982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;20]" time="0.050128936767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;21]" time="0.09558343887329102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;22]" time="0.004781007766723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;23]" time="0.00414729118347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;24]" time="0.01012730598449707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;25]" time="0.0737009048461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;26]" time="0.1628427505493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0038406848907470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0022432804107666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0074253082275390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.009231328964233398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.013470649719238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.008594751358032227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0029082298278808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0021855831146240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.03255152702331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.06420445442199707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.9208111763000488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.010736942291259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.006040096282958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0037567615509033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.010181427001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.014696121215820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.02046966552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.030946969985961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.00835728645324707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.003677845001220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.09497904777526855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.07450103759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.8682613372802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.013587713241577148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0040247440338134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.003321409225463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.04459714889526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07300400733947754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.6576075553894043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.014133453369140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004260063171386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0022428035736083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.007360696792602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.009284257888793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.01374053955078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.008374452590942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.002896547317504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0021359920501708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.031943321228027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0622096061706543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.905118465423584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.010802745819091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.005940675735473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0035452842712402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.01012873649597168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.014824151992797852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.021304607391357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.030758380889892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.008306741714477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.003588438034057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.09459471702575684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.07603931427001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.8760957717895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.013671159744262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.004038333892822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0044209957122802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.06423830986022949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.0786905288696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.7129538059234619"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.014809131622314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.004190921783447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.002245664596557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.007319211959838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.009219884872436523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.013580799102783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.00830078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0029456615447998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.002148151397705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.03220653533935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.06220674514770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.9126532077789307"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.011168241500854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.005959987640380859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.003645658493041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.010048627853393555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.014789581298828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.019809722900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.030461549758911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.00830221176147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.003712177276611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.08944058418273926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.07509374618530273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.8780882358551025"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.013563394546508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.004026889801025391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0045795440673828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.06616997718811035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.08141875267028809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.7065284252166748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.0149383544921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.004127025604248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0021741390228271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.007294178009033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.009231328964233398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.013582944869995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.008424758911132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.002923727035522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0021657943725585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.031629085540771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.06171274185180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.9080338478088379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.010353565216064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0057637691497802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0034241676330566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.00969552993774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.015654802322387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.019653797149658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.03062295913696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.008171319961547852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0035936832427978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.09128570556640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.07292675971984863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.8751835823059082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.013400554656982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0041124820709228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.003682851791381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.046817779541015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09713006019592285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.7055513858795166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.014816761016845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.004144906997680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0022656917572021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0073430538177490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.009291887283325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.013895750045776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.008380651473999023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0029969215393066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.002264738082885742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.031935930252075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.06193423271179199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.9092690944671631"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.010329246520996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0058727264404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.003619670867919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.010374069213867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.014860391616821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.020211219787597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.03042745590209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.008469104766845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004434108734130859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.0937800407409668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.0737464427947998"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.8865957260131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.013614416122436523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.004076719284057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0044023990631103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.06638193130493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.10091829299926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.756598711013794"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.015963315963745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0042417049407958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.002183198928833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.007245302200317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.009131908416748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.013308286666870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.008460044860839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0029730796813964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0022039413452148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.031853675842285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.061888694763183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.9061973094940186"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.010252714157104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0059032440185546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0035614967346191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.01001119613647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.020340442657470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.020040512084960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.031183481216430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.008471488952636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0037403106689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.08965706825256348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.07405805587768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.8766276836395264"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.013764619827270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.004124879837036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004609823226928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.06579375267028809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.10164046287536621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.7591879367828369"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.015914201736450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.004231452941894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0022416114807128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.007408857345581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.009287118911743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.013619661331176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.00836491584777832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.002980470657348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.002125263214111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.03190255165100098"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.06363201141357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.9159128665924072"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.010395050048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.004879951477050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.003443479537963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.010066032409667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.014712095260620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.020346641540527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.03141188621520996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.008594036102294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0035927295684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.09223246574401855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.07234025001525879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.8785762786865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.013866186141967773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.004044771194458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.003399372100830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.04594111442565918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.09666252136230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.7059905529022217"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.015183210372924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.004351615905761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.002402067184448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.007400989532470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.009359598159790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.013736248016357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.008452653884887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.003017902374267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.002196073532104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.031673431396484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.06229686737060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.9098618030548096"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.010585546493530273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.005917549133300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0037474632263183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.00990605354309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.014732837677001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.020534515380859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.03059530258178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.008232593536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.003462553024291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.09305334091186523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.07292580604553223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.855372428894043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.013661623001098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.004071235656738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.004613161087036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.06804347038269043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.09976649284362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.7583682537078857"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.0158843994140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.004239559173583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.002210855484008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.007310628890991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.009208917617797852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.013506412506103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.008379936218261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.003003358840942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.002156496047973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.03198051452636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.061792850494384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.9029116630554199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.010518789291381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.006050825119018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0060882568359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.010218143463134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.015657424926757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.019853591918945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.030928850173950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.008837223052978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.004569292068481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.09333968162536621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.07450294494628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.8710346221923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.014093160629272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0038297176361083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004613161087036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.07017970085144043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.10219955444335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.7569108009338379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.016030073165893555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;0]" time="0.005097866058349609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;1]" time="0.0038099288940429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;2]" time="0.007253408432006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;3]" time="0.013962745666503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;4]" time="0.01670694351196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;5]" time="0.004897594451904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;6]" time="0.0036611557006835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;7]" time="0.015369415283203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;8]" time="0.4058659076690674"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;9]" time="2.096942186355591"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;10]" time="0.0074253082275390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;11]" time="0.016765356063842773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;12]" time="0.017600536346435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;13]" time="0.01149129867553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;14]" time="0.018671751022338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;15]" time="0.03040456771850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;16]" time="0.0396573543548584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;17]" time="0.009217977523803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;18]" time="0.00890350341796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;19]" time="0.021163225173950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;20]" time="0.3799004554748535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;21]" time="1.941589593887329"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;22]" time="0.0045223236083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;23]" time="0.0037872791290283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;24]" time="0.012952804565429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;25]" time="0.2753171920776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;26]" time="1.2900094985961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;0]" time="0.003936767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;1]" time="0.003847360610961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;2]" time="0.0071828365325927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;3]" time="0.013814687728881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;4]" time="0.01613450050354004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;5]" time="0.0036630630493164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;6]" time="0.0034606456756591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;7]" time="0.01496577262878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;8]" time="0.4007740020751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;9]" time="2.0788650512695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;10]" time="0.007153034210205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;11]" time="0.01672816276550293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;12]" time="0.017329931259155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;13]" time="0.011214971542358398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;14]" time="0.018159866333007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;15]" time="0.029867172241210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;16]" time="0.03966546058654785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;17]" time="0.009282588958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;18]" time="0.008942365646362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;19]" time="0.01969122886657715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;20]" time="0.37790799140930176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;21]" time="1.9615263938903809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;22]" time="0.004678487777709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;23]" time="0.003957986831665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;24]" time="0.014030218124389648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;25]" time="0.2984626293182373"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;26]" time="1.3489141464233398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;0]" time="0.004662036895751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;1]" time="0.0038857460021972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;2]" time="0.00716090202331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;3]" time="0.013679981231689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;4]" time="0.01845836639404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;5]" time="0.00473785400390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;6]" time="0.003558635711669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;7]" time="0.014802694320678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;8]" time="0.4055147171020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;9]" time="2.0952439308166504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;10]" time="0.007565021514892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;11]" time="0.0176846981048584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;12]" time="0.01732778549194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;13]" time="0.011132001876831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;14]" time="0.01784372329711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;15]" time="0.02976822853088379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;16]" time="0.040190935134887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;17]" time="0.00955963134765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;18]" time="0.009400606155395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;19]" time="0.021285057067871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;20]" time="0.3779032230377197"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;21]" time="1.915212631225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;22]" time="0.004578113555908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;23]" time="0.003805875778198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;24]" time="0.013626813888549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;25]" time="0.2945718765258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;26]" time="1.3533918857574463"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;0]" time="0.0034399032592773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;1]" time="0.002756357192993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;2]" time="0.003900766372680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;3]" time="0.010980367660522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;4]" time="0.018316984176635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;5]" time="0.00406193733215332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;6]" time="0.003098011016845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;7]" time="0.005090951919555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;8]" time="0.018057584762573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;9]" time="0.03546929359436035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;10]" time="0.006175994873046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;11]" time="0.008764505386352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;12]" time="0.00800943374633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;13]" time="0.005695343017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;14]" time="0.008571863174438477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;15]" time="0.03515219688415527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;16]" time="0.07151651382446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;17]" time="0.009185075759887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;18]" time="0.009139776229858398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;19]" time="0.02402043342590332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;20]" time="0.03929448127746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;21]" time="0.07465767860412598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;22]" time="0.024185657501220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;23]" time="0.0252377986907959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;24]" time="0.03206491470336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;25]" time="0.0747983455657959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;26]" time="0.1363239288330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;0]" time="0.003656148910522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;1]" time="0.002746105194091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;2]" time="0.0040128231048583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;3]" time="0.011346817016601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;4]" time="0.019956350326538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;5]" time="0.0040895938873291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;6]" time="0.0030083656311035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;7]" time="0.0051059722900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;8]" time="0.01814413070678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;9]" time="0.03495478630065918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;10]" time="0.005883932113647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;11]" time="0.009116888046264648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;12]" time="0.00817251205444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;13]" time="0.0059070587158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;14]" time="0.008826255798339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;15]" time="0.03516864776611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;16]" time="0.0721135139465332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;17]" time="0.009377479553222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;18]" time="0.009499311447143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;19]" time="0.024166345596313477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;20]" time="0.03992009162902832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;21]" time="0.07483220100402832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;22]" time="0.024948596954345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;23]" time="0.024724483489990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;24]" time="0.03172731399536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;25]" time="0.07662820816040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;26]" time="0.13470172882080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;0]" time="0.0035614967346191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;1]" time="0.0027408599853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;2]" time="0.003977060317993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;3]" time="0.011307716369628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;4]" time="0.019833803176879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;5]" time="0.004251956939697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;6]" time="0.003165006637573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;7]" time="0.005388736724853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;8]" time="0.018590211868286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;9]" time="0.036063432693481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;10]" time="0.008359909057617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;11]" time="0.009180545806884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;12]" time="0.008165597915649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;13]" time="0.005827188491821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;14]" time="0.00862884521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;15]" time="0.03506755828857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;16]" time="0.07160592079162598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;17]" time="0.009548425674438477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;18]" time="0.00932455062866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;19]" time="0.024091720581054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;20]" time="0.03989410400390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;21]" time="0.07381629943847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;22]" time="0.024426937103271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;23]" time="0.025669097900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;24]" time="0.03212237358093262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;25]" time="0.07738113403320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;26]" time="0.1359853744506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;0]" time="0.00747370719909668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;1]" time="0.006540775299072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;2]" time="0.008372068405151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;3]" time="0.009950637817382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;4]" time="0.010236024856567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;5]" time="0.008576631546020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;6]" time="0.008427143096923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;7]" time="0.013835906982421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;8]" time="0.044579267501831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;9]" time="0.08017826080322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;10]" time="0.015622854232788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;11]" time="0.01818227767944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;12]" time="0.017838001251220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;13]" time="0.013361454010009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;14]" time="0.0190737247467041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;15]" time="0.028180360794067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;16]" time="0.030766725540161133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;17]" time="0.031916141510009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;18]" time="0.033718109130859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;19]" time="0.1101999282836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;20]" time="0.09646058082580566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;21]" time="0.1557755470275879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;22]" time="0.130814790725708"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;23]" time="0.12811803817749023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;24]" time="0.15863633155822754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;25]" time="0.26236867904663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;26]" time="0.4102816581726074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;0]" time="0.007767438888549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;1]" time="0.007641792297363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;2]" time="0.008265018463134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;3]" time="0.010065555572509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;4]" time="0.01017618179321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;5]" time="0.008515119552612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;6]" time="0.00847005844116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;7]" time="0.014052152633666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;8]" time="0.04607748985290527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;9]" time="0.08077096939086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;10]" time="0.015487432479858398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;11]" time="0.018120288848876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;12]" time="0.01793384552001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;13]" time="0.013654947280883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;14]" time="0.01948857307434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;15]" time="0.028162240982055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;16]" time="0.03096914291381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;17]" time="0.0312347412109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;18]" time="0.03432106971740723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;19]" time="0.10873293876647949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;20]" time="0.09955906867980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;21]" time="0.1591019630432129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;22]" time="0.12530279159545898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;23]" time="0.1272571086883545"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;24]" time="0.16144514083862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;25]" time="0.25762343406677246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;26]" time="0.40020298957824707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;0]" time="0.007529497146606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;1]" time="0.0068781375885009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;2]" time="0.008265495300292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;3]" time="0.010102272033691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;4]" time="0.010228395462036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;5]" time="0.00841665267944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;6]" time="0.008508920669555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;7]" time="0.014054536819458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;8]" time="0.04443669319152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;9]" time="0.08095955848693848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;10]" time="0.015495538711547852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;11]" time="0.01833486557006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;12]" time="0.017807722091674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;13]" time="0.013365030288696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;14]" time="0.019591093063354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;15]" time="0.028650522232055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;16]" time="0.0312802791595459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;17]" time="0.031683921813964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;18]" time="0.032752037048339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;19]" time="0.1083989143371582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;20]" time="0.09572505950927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;21]" time="0.15858912467956543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;22]" time="0.12668108940124512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;23]" time="0.12604570388793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;24]" time="0.15834355354309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;25]" time="0.2543621063232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;26]" time="0.40402889251708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;0]" time="0.0034568309783935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;1]" time="0.002401590347290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;2]" time="0.003343343734741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;3]" time="0.004025459289550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;4]" time="0.004648923873901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;5]" time="0.002110719680786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;6]" time="0.0020613670349121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;7]" time="0.003063201904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;8]" time="0.004039764404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;9]" time="0.0049359798431396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;10]" time="0.0028984546661376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;11]" time="0.004734992980957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;12]" time="0.0045087337493896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;13]" time="0.003968000411987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;14]" time="0.0045282840728759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;15]" time="0.00662684440612793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;16]" time="0.008184671401977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;17]" time="0.0029938220977783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;18]" time="0.002827167510986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;19]" time="0.004895448684692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;20]" time="0.012638330459594727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;21]" time="0.023616552352905273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;22]" time="0.002936840057373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;23]" time="0.002202749252319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;24]" time="0.004182577133178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;25]" time="0.02650928497314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;26]" time="0.058535099029541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;0]" time="0.004477739334106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;1]" time="0.0024330615997314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;2]" time="0.0034356117248535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;3]" time="0.004205465316772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;4]" time="0.004788398742675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;5]" time="0.002208232879638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;6]" time="0.0021088123321533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;7]" time="0.0030634403228759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;8]" time="0.004027128219604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;9]" time="0.005396604537963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;10]" time="0.0028672218322753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;11]" time="0.004823923110961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;12]" time="0.004647254943847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;13]" time="0.003966093063354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;14]" time="0.004987001419067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;15]" time="0.0067250728607177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;16]" time="0.008442401885986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;17]" time="0.0031142234802246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;18]" time="0.0028727054595947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;19]" time="0.005212306976318359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;20]" time="0.012399911880493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;21]" time="0.022672414779663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;22]" time="0.003039836883544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;23]" time="0.0022161006927490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;24]" time="0.004287004470825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;25]" time="0.027943849563598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;26]" time="0.05779004096984863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;0]" time="0.0033206939697265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;1]" time="0.0022928714752197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;2]" time="0.003277301788330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;3]" time="0.004136085510253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;4]" time="0.0046617984771728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;5]" time="0.0021402835845947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;6]" time="0.002062559127807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;7]" time="0.002978801727294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;8]" time="0.004012107849121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;9]" time="0.005395650863647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;10]" time="0.002883434295654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;11]" time="0.0048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;12]" time="0.0046863555908203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;13]" time="0.0040018558502197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;14]" time="0.004730701446533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;15]" time="0.007195472717285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;16]" time="0.008448362350463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;17]" time="0.003088235855102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;18]" time="0.0027632713317871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;19]" time="0.004773855209350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;20]" time="0.012005090713500977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;21]" time="0.023075580596923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;22]" time="0.002857685089111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;23]" time="0.0021643638610839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;24]" time="0.0041849613189697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;25]" time="0.02637171745300293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;26]" time="0.057662010192871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;0]" time="0.006551504135131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;1]" time="0.005402326583862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;2]" time="0.006365060806274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;3]" time="0.0073816776275634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;4]" time="0.007729768753051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;5]" time="0.00461125373840332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;6]" time="0.004520893096923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;7]" time="0.00696563720703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;8]" time="0.025267362594604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;9]" time="0.04873394966125488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;10]" time="0.009299516677856445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;11]" time="0.010057210922241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;12]" time="0.011633157730102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;13]" time="0.009412527084350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;14]" time="0.011039972305297852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;15]" time="0.013678789138793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;16]" time="0.016210079193115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;17]" time="0.011763572692871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;18]" time="0.011423826217651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;19]" time="0.018729448318481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;20]" time="0.05234360694885254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;21]" time="0.10641098022460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;22]" time="0.005791187286376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;23]" time="0.004723072052001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;24]" time="0.020696163177490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;25]" time="0.40874719619750977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;26]" time="0.947068452835083"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;0]" time="0.00661468505859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;1]" time="0.005635976791381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;2]" time="0.006589412689208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;3]" time="0.007710933685302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;4]" time="0.008025646209716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;5]" time="0.0046956539154052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;6]" time="0.004549980163574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;7]" time="0.007195234298706055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;8]" time="0.025978565216064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;9]" time="0.04891037940979004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;10]" time="0.009650707244873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;11]" time="0.011539459228515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;12]" time="0.011260271072387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;13]" time="0.009375572204589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;14]" time="0.011464118957519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;15]" time="0.015058517456054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;16]" time="0.016345500946044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;17]" time="0.011967897415161133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;18]" time="0.012881755828857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;19]" time="0.020890235900878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;20]" time="0.05338549613952637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;21]" time="0.10932803153991699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;22]" time="0.005906820297241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;23]" time="0.004802703857421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;24]" time="0.021576404571533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;25]" time="0.44156384468078613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;26]" time="0.9895641803741455"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;0]" time="0.006389141082763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;1]" time="0.005496501922607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;2]" time="0.0064351558685302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;3]" time="0.007313966751098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;4]" time="0.007702350616455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;5]" time="0.004531383514404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;6]" time="0.004405021667480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;7]" time="0.0068776607513427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;8]" time="0.025225162506103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;9]" time="0.04823899269104004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;10]" time="0.009388208389282227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;11]" time="0.010787248611450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;12]" time="0.009496927261352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;13]" time="0.007803678512573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;14]" time="0.01022195816040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;15]" time="0.013603925704956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;16]" time="0.016269207000732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;17]" time="0.011708974838256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;18]" time="0.01163792610168457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;19]" time="0.018463611602783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;20]" time="0.04984712600708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;21]" time="0.10723376274108887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;22]" time="0.0057680606842041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;23]" time="0.004762172698974609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;24]" time="0.021014690399169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;25]" time="0.42892003059387207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;26]" time="0.9926483631134033"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;0]" time="0.006514787673950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;1]" time="0.005744218826293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;2]" time="0.006656646728515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;3]" time="0.007690906524658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;4]" time="0.007784128189086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;5]" time="0.004642963409423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;6]" time="0.004380702972412109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;7]" time="0.007166862487792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;8]" time="0.025909423828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;9]" time="0.04882550239562988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;10]" time="0.009312868118286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;11]" time="0.011693477630615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;12]" time="0.01072549819946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;13]" time="0.009174823760986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;14]" time="0.010688066482543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;15]" time="0.01349020004272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;16]" time="0.01610279083251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;17]" time="0.011522769927978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;18]" time="0.011404991149902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;19]" time="0.021863937377929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;20]" time="0.05303478240966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;21]" time="0.11356592178344727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;22]" time="0.005804300308227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;23]" time="0.004675149917602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;24]" time="0.021246910095214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;25]" time="0.38061952590942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;26]" time="0.8820843696594238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;0]" time="0.006664276123046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;1]" time="0.005609035491943359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;2]" time="0.006652116775512695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;3]" time="0.007739067077636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;4]" time="0.007772207260131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;5]" time="0.004738569259643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;6]" time="0.0044515132904052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;7]" time="0.007152080535888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;8]" time="0.02623605728149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;9]" time="0.04945945739746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;10]" time="0.009277582168579102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;11]" time="0.010558843612670898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;12]" time="0.009223699569702148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;13]" time="0.0077648162841796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;14]" time="0.009632587432861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;15]" time="0.013939857482910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;16]" time="0.01581430435180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;17]" time="0.01162099838256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;18]" time="0.011366605758666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;19]" time="0.022092580795288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;20]" time="0.05370211601257324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;21]" time="0.11179661750793457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;22]" time="0.005818367004394531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;23]" time="0.004755496978759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;24]" time="0.018363237380981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;25]" time="0.4016556739807129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;26]" time="0.9323391914367676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;0]" time="0.0070743560791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;1]" time="0.006716251373291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;2]" time="0.006811618804931641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;3]" time="0.007561683654785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;4]" time="0.007781505584716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;5]" time="0.004790782928466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;6]" time="0.004740476608276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;7]" time="0.007225990295410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;8]" time="0.026245832443237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;9]" time="0.04970741271972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;10]" time="0.00920557975769043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;11]" time="0.010561704635620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;12]" time="0.009520769119262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;13]" time="0.00781869888305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;14]" time="0.009663820266723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;15]" time="0.013312578201293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;16]" time="0.016010522842407227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;17]" time="0.011551856994628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;18]" time="0.010387659072875977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;19]" time="0.02056884765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;20]" time="0.05368494987487793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;21]" time="0.1123952865600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;22]" time="0.006023406982421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;23]" time="0.0049588680267333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;24]" time="0.01815629005432129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;25]" time="0.39680051803588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;26]" time="0.9233653545379639"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;0]" time="0.00638270378112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;1]" time="0.005342006683349609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;2]" time="0.00648808479309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;3]" time="0.0073740482330322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;4]" time="0.007764339447021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;5]" time="0.004766225814819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;6]" time="0.004575252532958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;7]" time="0.007236957550048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;8]" time="0.02704787254333496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;9]" time="0.050923824310302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;10]" time="0.009273052215576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;11]" time="0.010990142822265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;12]" time="0.009466886520385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;13]" time="0.007822751998901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;14]" time="0.010423660278320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;15]" time="0.013849973678588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;16]" time="0.016205310821533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;17]" time="0.012007951736450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;18]" time="0.011807918548583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;19]" time="0.0219728946685791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;20]" time="0.054388999938964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;21]" time="0.11554813385009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;22]" time="0.0058209896087646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;23]" time="0.004809379577636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;24]" time="0.017847776412963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;25]" time="0.38199329376220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;26]" time="0.8864905834197998"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;0]" time="0.006539106369018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;1]" time="0.005189657211303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;2]" time="0.006293058395385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;3]" time="0.007376909255981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;4]" time="0.007604837417602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;5]" time="0.005041837692260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;6]" time="0.004489421844482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;7]" time="0.007144927978515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;8]" time="0.027210474014282227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;9]" time="0.053861141204833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;10]" time="0.009275674819946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;11]" time="0.011286497116088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;12]" time="0.011075019836425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;13]" time="0.009830474853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;14]" time="0.011104583740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;15]" time="0.014770269393920898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;16]" time="0.016099929809570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;17]" time="0.011767148971557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;18]" time="0.011888980865478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;19]" time="0.022288084030151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;20]" time="0.0550990104675293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;21]" time="0.11494755744934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;22]" time="0.005816459655761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;23]" time="0.004834413528442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;24]" time="0.018214941024780273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;25]" time="0.3984241485595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;26]" time="0.9315595626831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;0]" time="0.0062601566314697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;1]" time="0.0052874088287353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;2]" time="0.006284236907958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;3]" time="0.007501840591430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;4]" time="0.008494377136230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;5]" time="0.005145072937011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;6]" time="0.0045316219329833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;7]" time="0.007302761077880859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;8]" time="0.026674747467041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;9]" time="0.04961705207824707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;10]" time="0.009076356887817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;11]" time="0.009542703628540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;12]" time="0.009370803833007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;13]" time="0.007683515548706055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;14]" time="0.009623289108276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;15]" time="0.013389110565185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;16]" time="0.015997886657714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;17]" time="0.011702537536621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;18]" time="0.01179647445678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;19]" time="0.02228236198425293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;20]" time="0.057166099548339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;21]" time="0.1148686408996582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;22]" time="0.005613088607788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;23]" time="0.004763603210449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;24]" time="0.018094539642333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;25]" time="0.40207958221435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;26]" time="0.9179491996765137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;0]" time="0.005188465118408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;1]" time="0.005445003509521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;2]" time="0.006545305252075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;3]" time="0.0075953006744384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;4]" time="0.006017208099365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;5]" time="0.0038149356842041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;6]" time="0.004496335983276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;7]" time="0.006744861602783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;8]" time="0.02287149429321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;9]" time="0.02586221694946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;10]" time="0.009334802627563477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;11]" time="0.009522199630737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;12]" time="0.007486104965209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;13]" time="0.008031129837036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;14]" time="0.01018214225769043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;15]" time="0.013986825942993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;16]" time="0.016605138778686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;17]" time="0.023936986923217773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;18]" time="0.022848844528198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;19]" time="0.05051565170288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;20]" time="0.06254363059997559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;21]" time="0.11869215965270996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;22]" time="0.0056302547454833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;23]" time="0.007864952087402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;24]" time="0.019954204559326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;25]" time="0.3999814987182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;26]" time="0.8465240001678467"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;0]" time="0.005305290222167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;1]" time="0.0056264400482177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;2]" time="0.006582975387573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;3]" time="0.007805824279785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;4]" time="0.006114959716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;5]" time="0.003966331481933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;6]" time="0.004522085189819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;7]" time="0.006874561309814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;8]" time="0.02325272560119629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;9]" time="0.026759624481201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;10]" time="0.009753704071044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;11]" time="0.011188745498657227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;12]" time="0.008913040161132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;13]" time="0.009798288345336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;14]" time="0.011675834655761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;15]" time="0.015558481216430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;16]" time="0.016814470291137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;17]" time="0.024024009704589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;18]" time="0.023453950881958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;19]" time="0.05100846290588379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;20]" time="0.06435751914978027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;21]" time="0.12108063697814941"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;22]" time="0.005585670471191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;23]" time="0.005434751510620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;24]" time="0.020711898803710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;25]" time="0.42139649391174316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;26]" time="0.8417813777923584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;0]" time="0.005303144454956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;1]" time="0.0056493282318115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;2]" time="0.006931304931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;3]" time="0.007673740386962891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;4]" time="0.00636744499206543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;5]" time="0.003972053527832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;6]" time="0.004693746566772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;7]" time="0.0069963932037353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;8]" time="0.02389979362487793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;9]" time="0.028161287307739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;10]" time="0.010183095932006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;11]" time="0.010807037353515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;12]" time="0.007883548736572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;13]" time="0.008493661880493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;14]" time="0.010364294052124023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;15]" time="0.01422429084777832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;16]" time="0.01697993278503418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;17]" time="0.023402690887451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;18]" time="0.023760080337524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;19]" time="0.05269169807434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;20]" time="0.06405425071716309"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;21]" time="0.12540531158447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;22]" time="0.007643699645996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;23]" time="0.008522987365722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;24]" time="0.021215200424194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;25]" time="0.42125606536865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;26]" time="0.8502252101898193"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;0]" time="0.0027306079864501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;1]" time="0.011262893676757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;2]" time="0.012883186340332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;3]" time="0.015633106231689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;4]" time="0.0039119720458984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;5]" time="0.0017919540405273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;6]" time="0.009524345397949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;7]" time="0.014539957046508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;8]" time="0.061110496520996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;9]" time="0.015465736389160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;10]" time="0.03168940544128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;11]" time="0.03640604019165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;12]" time="0.003974437713623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;13]" time="0.03431558609008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;14]" time="0.036392927169799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;15]" time="0.04699277877807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;16]" time="0.05270791053771973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;17]" time="0.05601096153259277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;18]" time="0.05681133270263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;19]" time="0.12570834159851074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;20]" time="0.5841865539550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;21]" time="1.220768690109253"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;22]" time="0.0026502609252929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;23]" time="0.011811494827270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;24]" time="0.11340570449829102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;25]" time="3.2480790615081787"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;26]" time="0.7574198246002197"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;0]" time="0.002775430679321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;1]" time="0.011220693588256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;2]" time="0.01282954216003418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;3]" time="0.015613317489624023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;4]" time="0.003927707672119141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;5]" time="0.0018410682678222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;6]" time="0.009366750717163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;7]" time="0.014150142669677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;8]" time="0.06063508987426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;9]" time="0.015612125396728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;10]" time="0.03126788139343262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;11]" time="0.03683114051818848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;12]" time="0.00413823127746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;13]" time="0.031308889389038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;14]" time="0.03651022911071777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;15]" time="0.0457916259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;16]" time="0.052956581115722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;17]" time="0.05631136894226074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;18]" time="0.05845046043395996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;19]" time="0.12604761123657227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;20]" time="0.5596632957458496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;21]" time="1.2127020359039307"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;22]" time="0.0026636123657226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;23]" time="0.011550188064575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;24]" time="0.11690306663513184"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;25]" time="3.2137835025787354"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;26]" time="0.7511372566223145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;0]" time="0.0028104782104492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;1]" time="0.011679887771606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;2]" time="0.014404535293579102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;3]" time="0.017255783081054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;4]" time="0.00392913818359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;5]" time="0.0018069744110107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;6]" time="0.00930929183959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;7]" time="0.014319419860839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;8]" time="0.06197857856750488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;9]" time="0.016000986099243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;10]" time="0.03278923034667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;11]" time="0.037497758865356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;12]" time="0.004117012023925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;13]" time="0.03260970115661621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;14]" time="0.03706645965576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;15]" time="0.04620814323425293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;16]" time="0.05448579788208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;17]" time="0.05803489685058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;18]" time="0.05898308753967285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;19]" time="0.13151025772094727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;20]" time="0.5639328956604004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;21]" time="1.2089087963104248"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;22]" time="0.002576112747192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;23]" time="0.011693954467773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;24]" time="0.11304068565368652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;25]" time="3.2273900508880615"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;26]" time="0.7657008171081543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;0]" time="0.003881692886352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;1]" time="0.003083467483520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;2]" time="0.003536701202392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;3]" time="0.0039196014404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;4]" time="0.0045282840728759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;5]" time="0.002952098846435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;6]" time="0.0029344558715820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;7]" time="0.0034525394439697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;8]" time="0.004403829574584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;9]" time="0.005162954330444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;10]" time="0.004637241363525391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;11]" time="0.005358695983886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;12]" time="0.005246877670288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;13]" time="0.004754781723022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;14]" time="0.005271434783935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;15]" time="0.007420063018798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;16]" time="0.008888006210327148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;17]" time="0.008985519409179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;18]" time="0.008790969848632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;19]" time="0.015327692031860352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;20]" time="0.017187833786010742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;21]" time="0.027141809463500977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;22]" time="0.0038475990295410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;23]" time="0.0031409263610839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;24]" time="0.004912376403808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;25]" time="0.026876211166381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;26]" time="0.05717158317565918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;0]" time="0.0038573741912841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;1]" time="0.002927541732788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;2]" time="0.0033965110778808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;3]" time="0.0038166046142578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;4]" time="0.0043294429779052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;5]" time="0.0029687881469726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;6]" time="0.002947092056274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;7]" time="0.0034646987915039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;8]" time="0.004235982894897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;9]" time="0.005552053451538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;10]" time="0.00449681282043457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;11]" time="0.005369424819946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;12]" time="0.00527644157409668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;13]" time="0.004719972610473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;14]" time="0.0053174495697021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;15]" time="0.00720524787902832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;16]" time="0.008888721466064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;17]" time="0.00874781608581543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;18]" time="0.008665323257446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;19]" time="0.014759063720703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;20]" time="0.016040325164794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;21]" time="0.02790975570678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;22]" time="0.003975868225097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;23]" time="0.0031888484954833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;24]" time="0.00607609748840332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;25]" time="0.0296783447265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;26]" time="0.06440496444702148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;0]" time="0.004060029983520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;1]" time="0.0030677318572998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;2]" time="0.003504037857055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;3]" time="0.004018545150756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;4]" time="0.00458526611328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;5]" time="0.002979755401611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;6]" time="0.00298309326171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;7]" time="0.0034711360931396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;8]" time="0.0042726993560791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;9]" time="0.00547027587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;10]" time="0.004519224166870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;11]" time="0.005289793014526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;12]" time="0.005234956741333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;13]" time="0.004774332046508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;14]" time="0.005319356918334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;15]" time="0.0072917938232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;16]" time="0.008913278579711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;17]" time="0.009171724319458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;18]" time="0.009112119674682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;19]" time="0.01503753662109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;20]" time="0.01710343360900879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;21]" time="0.027511119842529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;22]" time="0.0040128231048583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;23]" time="0.0032727718353271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;24]" time="0.006181240081787109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;25]" time="0.029800891876220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;26]" time="0.061182260513305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;0]" time="0.0018334388732910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;1]" time="0.0026204586029052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;2]" time="0.0060787200927734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;3]" time="0.029761791229248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;4]" time="0.0018353462219238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;5]" time="0.0012993812561035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;6]" time="0.002317667007446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;7]" time="0.006166696548461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;8]" time="0.03246474266052246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;9]" time="0.0023190975189208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;10]" time="0.004209041595458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;11]" time="0.013583183288574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;12]" time="0.0013959407806396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;13]" time="0.009531736373901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;14]" time="0.01284480094909668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;15]" time="0.06074643135070801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;16]" time="0.12688112258911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;17]" time="0.009010076522827148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;18]" time="0.007731437683105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;19]" time="0.026938199996948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;20]" time="0.09821820259094238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;21]" time="0.20331168174743652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;22]" time="0.0018286705017089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;23]" time="0.002894878387451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;24]" time="0.008816242218017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;25]" time="0.06582784652709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;26]" time="0.054025888442993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;0]" time="0.0017628669738769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;1]" time="0.0025675296783447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;2]" time="0.0059967041015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;3]" time="0.02983570098876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;4]" time="0.001773834228515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;5]" time="0.0013384819030761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;6]" time="0.002297639846801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;7]" time="0.006074190139770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;8]" time="0.03262901306152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;9]" time="0.0030488967895507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;10]" time="0.004343509674072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;11]" time="0.013653278350830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;12]" time="0.0014963150024414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;13]" time="0.00962686538696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;14]" time="0.012909412384033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;15]" time="0.060571908950805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;16]" time="0.12795352935791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;17]" time="0.009129762649536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;18]" time="0.00787353515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;19]" time="0.02749800682067871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;20]" time="0.09648418426513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;21]" time="0.19949746131896973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;22]" time="0.0017766952514648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;23]" time="0.002632617950439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;24]" time="0.00997304916381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;25]" time="0.0922236442565918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;26]" time="0.055547475814819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;0]" time="0.0019311904907226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;1]" time="0.0026259422302246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;2]" time="0.006073474884033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;3]" time="0.02968430519104004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;4]" time="0.0018148422241210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;5]" time="0.0013480186462402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;6]" time="0.002350330352783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;7]" time="0.006239175796508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;8]" time="0.032463788986206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;9]" time="0.0031862258911132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;10]" time="0.00443267822265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;11]" time="0.014381885528564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;12]" time="0.001966238021850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;13]" time="0.010098934173583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;14]" time="0.013239860534667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;15]" time="0.06258845329284668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;16]" time="0.13176321983337402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;17]" time="0.009584665298461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;18]" time="0.00945425033569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;19]" time="0.029602766036987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;20]" time="0.09929633140563965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;21]" time="0.20335650444030762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;22]" time="0.0018231868743896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;23]" time="0.002574443817138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;24]" time="0.009888172149658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;25]" time="0.0918581485748291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;26]" time="0.054070472717285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;0]" time="0.0033447742462158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;1]" time="0.002472400665283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;2]" time="0.002779722213745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;3]" time="0.004040956497192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;4]" time="0.005847454071044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;5]" time="0.0023162364959716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;6]" time="0.0022516250610351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;7]" time="0.015295028686523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;8]" time="0.25615429878234863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;9]" time="1.3309025764465332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;10]" time="0.004515886306762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;11]" time="0.00458979606628418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;12]" time="0.004178762435913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;13]" time="0.003589630126953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;14]" time="0.0045735836029052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;15]" time="0.007924079895019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;16]" time="0.011664152145385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;17]" time="0.002928495407104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;18]" time="0.0028426647186279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;19]" time="0.019197463989257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;20]" time="0.22751665115356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;21]" time="1.2132797241210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;22]" time="0.0029773712158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;23]" time="0.0024280548095703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;24]" time="0.010857582092285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;25]" time="0.17031383514404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;26]" time="0.8287620544433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;0]" time="0.0033407211303710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;1]" time="0.0024251937866210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;2]" time="0.002841472625732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;3]" time="0.003954410552978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;4]" time="0.004666566848754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;5]" time="0.0022907257080078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;6]" time="0.0021779537200927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;7]" time="0.015280485153198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;8]" time="0.25687479972839355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;9]" time="1.334580421447754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;10]" time="0.004728555679321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;11]" time="0.004721403121948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;12]" time="0.004374265670776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;13]" time="0.0037064552307128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;14]" time="0.004686832427978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;15]" time="0.007833480834960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;16]" time="0.011385679244995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;17]" time="0.003175973892211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;18]" time="0.005555868148803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;19]" time="0.019771575927734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;20]" time="0.23145675659179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;21]" time="1.2210056781768799"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;22]" time="0.0029380321502685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;23]" time="0.002284526824951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;24]" time="0.010658502578735352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;25]" time="0.17106890678405762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;26]" time="0.8343889713287354"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;0]" time="0.0035943984985351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;1]" time="0.0025589466094970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;2]" time="0.0029859542846679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;3]" time="0.004124641418457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;4]" time="0.0049228668212890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;5]" time="0.0022513866424560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;6]" time="0.002335071563720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;7]" time="0.01525259017944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;8]" time="0.2583773136138916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;9]" time="1.3413126468658447"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;10]" time="0.0057790279388427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;11]" time="0.004768848419189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;12]" time="0.0042819976806640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;13]" time="0.0035696029663085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;14]" time="0.004651784896850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;15]" time="0.0077359676361083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;16]" time="0.011478662490844727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;17]" time="0.0031821727752685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;18]" time="0.0029463768005371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;19]" time="0.019867420196533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;20]" time="0.22463703155517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;21]" time="1.2181568145751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;22]" time="0.003107786178588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;23]" time="0.002337217330932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;24]" time="0.010667562484741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;25]" time="0.17063140869140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;26]" time="0.8311564922332764"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.002350330352783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.001689910888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0017323493957519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0017099380493164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.001589059829711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0017611980438232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0014755725860595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0014905929565429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.001832723617553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.004955291748046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.009207963943481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0019011497497558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0019116401672363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0020012855529785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.001991748809814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.002231597900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.002603292465209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.002503633499145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0023126602172851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0024268627166748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.028260231018066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.01851367950439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.051424264907836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.003994464874267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0014574527740478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0025343894958496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.024729251861572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.1251819133758545"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.32810282707214355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.011057615280151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.00238037109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0017333030700683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0017032623291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0017609596252441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0016283988952636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.001577615737915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0014672279357910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0014984607696533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0020380020141601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.00499415397644043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.009334087371826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0018537044525146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0018813610076904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0020771026611328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.002166748046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0024175643920898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0026035308837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002470254898071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002234935760498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0022139549255371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.02597212791442871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.018797636032104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.05180811882019043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.003974199295043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0014982223510742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.002566814422607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.02500629425048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.12393808364868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.328263521194458"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.010528087615966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0017287731170654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0016672611236572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.001798868179321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0018055438995361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0016698837280273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0015714168548583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0014698505401611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0015070438385009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.001950979232788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.005011081695556641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.009477853775024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0018725395202636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.001979827880859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0020401477813720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0019550323486328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0023064613342285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0026748180389404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0024802684783935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0021975040435791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002260446548461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025509357452392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.018629789352416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.052577972412109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0039675235748291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0014982223510742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.002580404281616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.02478957176208496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.12475347518920898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.3294944763183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.010821342468261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.00225830078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0017216205596923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0017175674438476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0017096996307373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0016491413116455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0015811920166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0014445781707763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0015017986297607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0018193721771240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.004872798919677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.009285926818847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0018546581268310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0018970966339111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0019936561584472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0018849372863769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002374887466430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0027093887329101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0023941993713378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.002184629440307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002228260040283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.026369094848632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.01865696907043457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.05164384841918945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.003916025161743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0014710426330566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.002638101577758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.025206565856933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.1233057975769043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.3284463882446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.01027679443359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0016524791717529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0016162395477294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0015940666198730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0017275810241699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.001589059829711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.001657247543334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0014619827270507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.001531839370727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.001962423324584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0051348209381103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.00998687744140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.001947641372680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0020356178283691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0021271705627441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.002045869827270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0024955272674560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0027937889099121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.002588987350463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.002323627471923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002380847930908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.026363134384155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.019072532653808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.05349922180175781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.004025459289550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0014948844909667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0026793479919433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.02501702308654785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.12335968017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.333798885345459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.009979248046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0017364025115966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0016162395477294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0016605854034423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0017502307891845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0016069412231445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0015566349029541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.001481771469116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0015187263488769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0019741058349609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.005362510681152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.010125875473022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0024733543395996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.001985311508178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002092599868774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0019621849060058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0024530887603759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0027196407318115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.002473592758178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.002238750457763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0022814273834228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.026113271713256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.018897294998168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.05254030227661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.004057168960571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0015172958374023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0026934146881103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.02518606185913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.12407946586608887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.3347663879394531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.010470867156982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.002259969711303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0016548633575439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0016431808471679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0017905235290527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0016493797302246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0015795230865478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0015845298767089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0015156269073486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0018644332885742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.00508880615234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.009366750717163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0019373893737792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0020296573638916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.002151012420654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0020487308502197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.002509593963623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0026912689208984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0025916099548339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0023801326751708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.002410411834716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.026871919631958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.01940131187438965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.05278778076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.004142045974731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0015561580657958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002662181854248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.02538013458251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.13050556182861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.34176111221313477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010942697525024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0024662017822265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.001867532730102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0017282962799072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0019779205322265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.001911163330078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0016748905181884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0016002655029296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0016252994537353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0020165443420410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.00530695915222168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.010304450988769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0024678707122802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0021369457244873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0023865699768066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0021467208862304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0027313232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0028057098388671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.002612590789794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0023276805877685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0024940967559814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.02705669403076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.01958608627319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.05384325981140137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.004077434539794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.001604318618774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002650022506713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.025380373001098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.12626099586486816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.3318197727203369"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.010295629501342773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0017399787902832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0016562938690185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0017192363739013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0018181800842285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.001634836196899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0015654563903808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0014710426330566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0014810562133789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0019330978393554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.005034923553466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.009528160095214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0018463134765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0020074844360351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0021970272064208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.001993417739868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0023953914642333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0026819705963134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002495288848876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.002283811569213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0024025440216064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.026562213897705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.019039630889892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.052292823791503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.00399470329284668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0015516281127929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.002578258514404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.025236129760742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.12582874298095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.32998085021972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.010352373123168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0015609264373779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.001554727554321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.001497030258178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0016505718231201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0015456676483154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0013697147369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0013821125030517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0013823509216308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0016694068908691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.003261566162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.005973100662231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0016238689422607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0017316341400146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0017600059509277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.001676797866821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0019383430480957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.002191305160522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0019588470458984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.002104043960571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002180337905883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.025616168975830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.016123294830322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.045452117919921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0036826133728027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0013821125030517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0027077198028564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.023379802703857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0789494514465332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.4415113925933838"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.007467985153198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0015895366668701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0015630722045898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0015347003936767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0016131401062011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0014624595642089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.001409292221069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0014319419860839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0013265609741210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0017130374908447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.003432035446166992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.006133317947387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.001596689224243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0017230510711669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0018436908721923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0017576217651367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0020558834075927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0022652149200439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0020837783813476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002063274383544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.002123594284057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.025710344314575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.016225337982177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.04484128952026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0037627220153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0014355182647705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.002480030059814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.023397445678710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07803678512573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.22093510627746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.007976531982421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0016446113586425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0016126632690429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0015828609466552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.001619100570678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0014834403991699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0014443397521972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.001390695571899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0014255046844482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0019326210021972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0033745765686035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.006363630294799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0015883445739746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0017213821411132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0018684864044189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0017597675323486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0020437240600585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.002187967300415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.00205230712890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0021123886108398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002124309539794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.026243209838867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.016300439834594727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.04573345184326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.003838062286376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0014548301696777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.002452373504638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.022918224334716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.0779421329498291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.2240910530090332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.007616758346557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0015518665313720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0015099048614501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0015285015106201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0016200542449951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.00146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0014333724975585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0013289451599121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0013439655303955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0017547607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0036661624908447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.006488800048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.001657724380493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0017442703247070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0018575191497802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0018427371978759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0020890235900878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0023033618927001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0021185874938964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0021085739135742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002187013626098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.026529550552368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.016682863235473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.04611611366271973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.003577709197998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.001394510269165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0024890899658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.02446460723876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09964799880981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.2745330333709717"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.009256839752197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0022139549255371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0016651153564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0017414093017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0017197132110595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0015909671783447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.001497030258178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0013933181762695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0014848709106445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0018608570098876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0038089752197265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.007487773895263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.001790761947631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0021514892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.001974344253540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0019347667694091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0022220611572265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.002449512481689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0023593902587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.002162456512451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0022363662719726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.02626633644104004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.01666402816772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.04802846908569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.003687620162963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0014653205871582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0026092529296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.02465677261352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.10000109672546387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.2723846435546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.008466482162475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0016045570373535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0015621185302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0015788078308105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.001697540283203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0015616416931152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.001489877700805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0014531612396240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0014655590057373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.001943826675415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.003869295120239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.0067996978759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0016329288482666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0018067359924316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0018908977508544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0017774105072021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002140045166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0024950504302978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.002223968505859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0021619796752929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0023031234741210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.026314258575439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.017232179641723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.04721951484680176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.003765106201171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0015902519226074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0024585723876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.024390697479248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.1020517349243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.27556753158569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.008627653121948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.001577138900756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0015697479248046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0015625953674316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.001750946044921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0017240047454833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0015664100646972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0014722347259521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0014705657958984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0017676353454589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.003681182861328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.006550312042236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0017757415771484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0018193721771240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0019316673278808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0018498897552490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0020813941955566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.002323627471923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0020668506622314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002121448516845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.002265453338623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.026300430297851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.017148971557617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.04787111282348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0036416053771972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0015282630920410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0027129650115966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.024563312530517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.10181903839111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.2691781520843506"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.00922846794128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0017437934875488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0016143321990966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0015587806701660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0016140937805175781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0014653205871582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0013468265533447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0013513565063476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0013580322265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0017726421356201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.0036585330963134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.006749629974365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0015935897827148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0017142295837402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0019223690032958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0018200874328613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0021872520446777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.002453327178955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0022089481353759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0021376609802246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0022809505462646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.0272982120513916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.016911745071411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.04826092720031738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.0037026405334472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0014917850494384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002481698989868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.025048017501831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.10324358940124512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.2765498161315918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.00970602035522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0022056102752685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0017082691192626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0016398429870605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0017223358154296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0015633106231689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0014698505401611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0014235973358154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0014357566833496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0017943382263183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0038366317749023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.006901264190673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0017354488372802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0018815994262695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0020020008087158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.001983165740966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0026073455810546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0025463104248046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002232074737548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0022382736206054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.002500295639038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.025964736938476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.017780780792236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.04756879806518555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.003710508346557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0014553070068359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0024635791778564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.024182796478271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.10020136833190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.2739291191101074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.013104677200317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.002589702606201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0017666816711425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0016336441040039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0018758773803710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0017001628875732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0015587806701660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0015108585357666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0014815330505371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0018651485443115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.004931211471557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.009320735931396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.002118825912475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0020835399627685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.002123594284057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0020487308502197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0024123191833496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0026030540466308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.002584218978881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0022575855255126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002357006072998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.026841163635253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.019392013549804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.054064273834228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.004215717315673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0015392303466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0026836395263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.02605295181274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.12817072868347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.3294222354888916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.010308980941772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0022881031036376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0016961097717285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0021419525146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.001741647720336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.002197265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0016689300537109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.001432180404663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0014641284942626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0019321441650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.005151033401489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.009334325790405273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0017464160919189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0018393993377685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.002031564712524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0019259452819824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0024454593658447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.002620220184326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002481698989868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0022153854370117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.002305269241333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.026063919067382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.018630027770996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.05265641212463379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.006415367126464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0015347003936767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0025653839111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.024724245071411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.12269282341003418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.32659459114074707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.00996708869934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0022125244140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.001634836196899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0016028881072998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0017108917236328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0015914440155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0015380382537841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0014264583587646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0015490055084228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.002032756805419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.004876375198364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.009707212448120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0024611949920654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0020122528076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.002042531967163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0018911361694335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.002362489700317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0025396347045898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0026009082794189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.002136707305908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002237558364868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025955915451049805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.0193941593170166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.05249953269958496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.004037380218505859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0015108585357666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0025610923767089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.025829792022705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.1275019645690918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.3302741050720215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.010894775390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0024471282958984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0017600059509277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0018508434295654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0018687248229980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.001758575439453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0016582012176513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0015811920166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0015769004821777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.002020597457885742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.006664752960205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.009953975677490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.001987934112548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.001959085464477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.002232074737548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0019712448120117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002463817596435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.002705097198486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0024743080139160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0023429393768310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0023870468139648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.02741551399230957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.018987178802490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.052233219146728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.004076957702636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0014383792877197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0025205612182617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.025807857513427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.12352490425109863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.3256723880767822"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.01056218147277832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.002258777618408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0016994476318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0017533302307128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0017383098602294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0015485286712646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0014448165893554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0014007091522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0014443397521972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0019648075103759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.004899501800537109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.009729146957397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0017867088317871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.001983642578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.00220489501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0020546913146972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002580881118774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0026674270629882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.002559185028076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.00215911865234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002231121063232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.026471614837646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.020206928253173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.052556753158569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.004181623458862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0015606880187988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0025949478149414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.024485349655151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.12281131744384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.3282430171966553"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.01075291633605957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0022728443145751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.001725912094116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0016636848449707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0017933845520019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.001669168472290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0015327930450439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0014965534210205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0016300678253173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0020520687103271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.005068540573120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.00972437858581543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.001973390579223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0020999908447265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0021533966064453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.002062082290649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002526521682739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0027000904083251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0025959014892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0022923946380615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002374887466430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.025784015655517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.018792152404785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.05259561538696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.004138469696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.001522064208984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0025882720947265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.024591922760009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.12790536880493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.3292508125305176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.010370731353759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.002321481704711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0017366409301757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0017123222351074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0017666816711425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0016374588012695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.001458883285522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.001466989517211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0015120506286621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0018477439880371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0050563812255859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.009423017501831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.001909494400024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0019600391387939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0020716190338134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.001989603042602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0024480819702148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0026171207427978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0026144981384277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002351999282836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0023822784423828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.02634882926940918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.018664836883544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.05240964889526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0039670467376708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0014615058898925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0024874210357666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.02482438087463379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.12432980537414551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.3280506134033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010306358337402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0022897720336914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0017731189727783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0017096996307373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0018076896667480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0017313957214355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0015342235565185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0015065670013427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.001535654067993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0019843578338623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.005084991455078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.011420965194702148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0020117759704589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.002756834030151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0023899078369140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0023152828216552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0026192665100097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0028591156005859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.002556324005126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.00225067138671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0023648738861083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.02772998809814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.01943492889404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.05478239059448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.004230499267578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0016109943389892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002828359603881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.02754521369934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.1259458065032959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.3315119743347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.009906530380249023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0016956329345703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.001552581787109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0015978813171386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0017383098602294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0015943050384521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.001493692398071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.001561880111694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0019941329956054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0020122528076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0051114559173583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.010095357894897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0025284290313720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0020542144775390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0022563934326171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0019817352294921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.002501249313354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0027120113372802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002541780471801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0022187232971191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0023031234741210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.02569270133972168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.018699169158935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.054878950119018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.004282474517822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0014989376068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0026357173919677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.02442646026611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.12248539924621582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.3328261375427246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.010117292404174805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0020356178283691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0015630722045898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0015211105346679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0015995502471923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0014600753784179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0013604164123535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0014355182647705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0019071102142333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0018885135650634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0038423538208007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.0065860748291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0018038749694824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0018537044525146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0018625259399414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0018334388732910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0020830631256103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0023784637451171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.002203702926635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.002366304397583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0024487972259521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.02636432647705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.0164949893951416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04650998115539551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0037755966186523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.001577138900756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0026640892028808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.023442745208740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07799696922302246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.21959590911865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.008098840713500977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0023314952850341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0016667842864990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0016624927520751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0017895698547363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0015940666198730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0014486312866210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0014421939849853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0014722347259521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0018873214721679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0034036636352539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.00637054443359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0022394657135009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.001840353012084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0020067691802978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0018286705017089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.002175569534301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.002410888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002124309539794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0021238327026367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.002177715301513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.025881052017211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.016017675399780273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.045394182205200195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0037813186645507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0014345645904541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0024709701538085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.024411678314208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07688045501708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.21907424926757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.008049488067626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0021920204162597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0016222000122070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0016009807586669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0017044544219970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0015485286712646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0014834403991699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.001421213150024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0014247894287109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0018351078033447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0034885406494140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.006559610366821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.001674652099609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0018832683563232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.002668619155883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0018184185028076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0020837783813476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.002305746078491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0022063255310058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0021219253540039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0021514892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025344371795654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.016191959381103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.046124935150146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.003710031509399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0013535022735595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0024352073669433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.023450613021850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07696247100830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.22216367721557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.008212804794311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0021698474884033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0015611648559570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0015702247619628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0016481876373291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0015239715576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0014204978942871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0014047622680664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0014061927795410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0016942024230957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.003696918487548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.006324052810668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0016396045684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0017077922821044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.001840353012084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.001795053482055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002043485641479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.002256155014038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0020258426666259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.002023458480834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002179384231567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.02654099464416504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.017021894454956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.04760026931762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.003972291946411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0014832019805908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0029151439666748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.02423381805419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.10014104843139648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.273545503616333"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.008852243423461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0016617774963378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0015840530395507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0016160011291503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0016562938690185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0016055107116699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0014607906341552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0014226436614990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.001737833023071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0019025802612304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0037860870361328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.0068204402923583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0016863346099853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0018682479858398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.00194549560546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0019326210021972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002286672592163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.002533435821533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0022542476654052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0022034645080566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002246856689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.026314496994018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.016606807708740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.04835247993469238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.0036897659301757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0014350414276123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0024209022521972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.023566484451293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.09929108619689941"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.2755153179168701"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.008714914321899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0015976428985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0014863014221191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0015976428985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0017099380493164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0017778873443603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0015399456024169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0015146732330322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0014820098876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0017986297607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0036458969116210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.007010698318481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0018601417541503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0020999908447265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002029895782470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.001973867416381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002286195755004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.002425670623779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0022428035736083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.002334117889404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002320528030395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.026288270950317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.0178830623626709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.048806190490722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.003730297088623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0014154911041259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0024280548095703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.023865222930908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.10107064247131348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.2731497287750244"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.008583545684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0015320777893066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0014986991882324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0014576911926269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0016021728515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0014503002166748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.001329660415649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0013070106506347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0013103485107421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0017352104187011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0037488937377929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.006447553634643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0017156600952148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.00182342529296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0019214153289794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.002004384994506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.002111196517944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0024886131286621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.002238035202026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002227783203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0023136138916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.026891708374023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.01713109016418457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.050063371658325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.003685474395751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0015094280242919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0024957656860351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.024247407913208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.0998694896697998"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.276153564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.009531259536743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.002215147018432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0016491413116455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0016100406646728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0016713142395019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0023093223571777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0018918514251708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0013949871063232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0014660358428955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0018720626831054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.003856182098388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.006827116012573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0017039775848388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0017313957214355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0019314289093017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0017807483673095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0020859241485595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.002421140670776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.002293825149536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0023784637451171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002545595169067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.026545047760009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.016936779022216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.04810476303100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.0036759376525878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0013926029205322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002492666244506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.024110794067382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.1000661849975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.27388453483581543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.009030580520629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0016825199127197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0016982555389404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0015954971313476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0016596317291259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0015606880187988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0014579296112060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0013890266418457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0014832019805908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0017693042755126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.003734111785888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.006745100021362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0017321109771728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0018086433410644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0019266605377197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0018801689147949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0021114349365234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0022940635681152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002129077911376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0021271705627441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0021517276763916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.026323318481445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.017520666122436523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.05093669891357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.003987550735473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0015141963958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0025322437286376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.025079965591430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.10223221778869629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.2809579372406006"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.00937962532043457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;0]" time="0.0023031234741210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;1]" time="0.0016474723815917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;2]" time="0.001634359359741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;3]" time="0.0015685558319091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;4]" time="0.00151824951171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;5]" time="0.0014498233795166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;6]" time="0.0014276504516601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;7]" time="0.0015671253204345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;8]" time="0.004743337631225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;9]" time="0.00907588005065918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;10]" time="0.001947164535522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;11]" time="0.0019583702087402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;12]" time="0.0018625259399414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;13]" time="0.0017044544219970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;14]" time="0.0019159317016601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;15]" time="0.002268552780151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;16]" time="0.002198934555053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;17]" time="0.0021436214447021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;18]" time="0.002018451690673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;19]" time="0.0035147666931152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;20]" time="0.017913341522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;21]" time="0.03772687911987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;22]" time="0.0022525787353515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;23]" time="0.0017647743225097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;24]" time="0.006368398666381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;25]" time="0.12610197067260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;26]" time="0.30301475524902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;0]" time="0.0026848316192626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;1]" time="0.001802206039428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;2]" time="0.0018117427825927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;3]" time="0.0017917156219482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;4]" time="0.0017113685607910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;5]" time="0.0016627311706542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;6]" time="0.0016791820526123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;7]" time="0.001861572265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;8]" time="0.005319118499755859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;9]" time="0.00961923599243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;10]" time="0.002315998077392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;11]" time="0.0021538734436035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;12]" time="0.0023474693298339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;13]" time="0.0020592212677001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;14]" time="0.002307415008544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;15]" time="0.0025794506072998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;16]" time="0.0024073123931884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;17]" time="0.0023059844970703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;18]" time="0.0023775100708007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;19]" time="0.003659963607788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;20]" time="0.017845869064331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;21]" time="0.03978776931762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;22]" time="0.0025191307067871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;23]" time="0.0027923583984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;24]" time="0.006691932678222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;25]" time="0.13499879837036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;26]" time="0.30872201919555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;0]" time="0.002535104751586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;1]" time="0.0017397403717041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;2]" time="0.001811981201171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;3]" time="0.0018053054809570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;4]" time="0.0018262863159179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;5]" time="0.0015654563903808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;6]" time="0.0022678375244140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;7]" time="0.002065896987915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;8]" time="0.005071163177490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;9]" time="0.009510517120361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;10]" time="0.002257108688354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;11]" time="0.002215147018432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;12]" time="0.002092599868774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;13]" time="0.001956462860107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;14]" time="0.0020897388458251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;15]" time="0.002410888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;16]" time="0.002246856689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;17]" time="0.0026581287384033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;18]" time="0.002339601516723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;19]" time="0.0036742687225341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;20]" time="0.017815589904785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;21]" time="0.03808903694152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;22]" time="0.0022385120391845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;23]" time="0.0016438961029052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;24]" time="0.0066339969635009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;25]" time="0.13191485404968262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;26]" time="0.3137028217315674"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;0]" time="0.0033538341522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;1]" time="0.002341747283935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;2]" time="0.0023086071014404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;3]" time="0.0026345252990722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;4]" time="0.0023186206817626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;5]" time="0.0018961429595947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;6]" time="0.0018582344055175781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;7]" time="0.0026531219482421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;8]" time="0.01754450798034668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;9]" time="0.036087989807128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;10]" time="0.0048351287841796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;11]" time="0.0037620067596435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;12]" time="0.0036690235137939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;13]" time="0.0030956268310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;14]" time="0.0040433406829833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;15]" time="0.005159616470336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;16]" time="0.004506826400756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;17]" time="0.002749204635620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;18]" time="0.0028679370880126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;19]" time="0.005225419998168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;20]" time="0.041797637939453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;21]" time="0.0991513729095459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;22]" time="0.0031862258911132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;23]" time="0.0021834373474121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;24]" time="0.0186312198638916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;25]" time="0.5596194267272949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;26]" time="1.3080453872680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;0]" time="0.0035936832427978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;1]" time="0.0026416778564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;2]" time="0.002509593963623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;3]" time="0.0026721954345703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;4]" time="0.0023746490478515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;5]" time="0.002095460891723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;6]" time="0.0018982887268066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;7]" time="0.0027124881744384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;8]" time="0.017177343368530273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;9]" time="0.03564882278442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;10]" time="0.004304170608520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;11]" time="0.004216194152832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;12]" time="0.003868579864501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;13]" time="0.003383159637451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;14]" time="0.0038530826568603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;15]" time="0.0047948360443115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;16]" time="0.004354953765869141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;17]" time="0.0026390552520751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;18]" time="0.0026922225952148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;19]" time="0.005199432373046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;20]" time="0.04307103157043457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;21]" time="0.10198593139648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;22]" time="0.003007173538208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;23]" time="0.0022804737091064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;24]" time="0.018605947494506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;25]" time="0.5517280101776123"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;26]" time="1.2293543815612793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;0]" time="0.0030663013458251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;1]" time="0.0021185874938964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;2]" time="0.002032041549682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;3]" time="0.0021009445190429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;4]" time="0.0019278526306152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;5]" time="0.0017352104187011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;6]" time="0.0017027854919433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;7]" time="0.0022280216217041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;8]" time="0.0160677433013916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;9]" time="0.03136157989501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;10]" time="0.0040285587310791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;11]" time="0.003580808639526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;12]" time="0.00328826904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;13]" time="0.0027992725372314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;14]" time="0.003482818603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;15]" time="0.004167318344116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;16]" time="0.00392913818359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;17]" time="0.0023996829986572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;18]" time="0.002300739288330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;19]" time="0.004664897918701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;20]" time="0.037186622619628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;21]" time="0.09099793434143066"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;22]" time="0.0026869773864746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;23]" time="0.0021636486053466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;24]" time="0.016096830368041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;25]" time="0.49134254455566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;26]" time="1.1448519229888916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;0]" time="0.001950979232788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;1]" time="0.001264333724975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;2]" time="0.0011966228485107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;3]" time="0.0012030601501464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;4]" time="0.0011639595031738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;5]" time="0.0012364387512207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;6]" time="0.0011408329010009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;7]" time="0.0014863014221191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;8]" time="0.0014541149139404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;9]" time="0.0018796920776367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;10]" time="0.0013165473937988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;11]" time="0.001275777816772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;12]" time="0.0013020038604736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;13]" time="0.0012402534484863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;14]" time="0.001300811767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;15]" time="0.0012979507446289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;16]" time="0.0013341903686523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;17]" time="0.0016803741455078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;18]" time="0.0016367435455322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;19]" time="0.0025691986083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;20]" time="0.009824514389038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;21]" time="0.020251035690307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;22]" time="0.0017676353454589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;23]" time="0.0012791156768798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;24]" time="0.0024132728576660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;25]" time="0.024663686752319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;26]" time="0.056302785873413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;0]" time="0.0018961429595947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;1]" time="0.001374959945678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;2]" time="0.0012731552124023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;3]" time="0.0013473033905029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;4]" time="0.0012912750244140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;5]" time="0.0014355182647705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;6]" time="0.0012943744659423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;7]" time="0.00128936767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;8]" time="0.0016810894012451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;9]" time="0.0023508071899414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;10]" time="0.0015163421630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;11]" time="0.0015785694122314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;12]" time="0.0015406608581542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;13]" time="0.0014119148254394531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;14]" time="0.0014157295227050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;15]" time="0.0014781951904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;16]" time="0.001474618911743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;17]" time="0.0017306804656982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;18]" time="0.001741647720336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;19]" time="0.0032494068145751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;20]" time="0.009568214416503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;21]" time="0.019382953643798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;22]" time="0.0018672943115234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;23]" time="0.0013275146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;24]" time="0.0026574134826660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;25]" time="0.024263858795166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;26]" time="0.057782888412475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;0]" time="0.0019216537475585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;1]" time="0.0013568401336669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;2]" time="0.0013203620910644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;3]" time="0.0012922286987304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;4]" time="0.001272439956665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;5]" time="0.0013186931610107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;6]" time="0.0012814998626708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;7]" time="0.0013370513916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;8]" time="0.0017387866973876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;9]" time="0.0024237632751464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;10]" time="0.0015478134155273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;11]" time="0.0014605522155761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;12]" time="0.0014309883117675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;13]" time="0.00141143798828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;14]" time="0.0014336109161376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;15]" time="0.0014655590057373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;16]" time="0.00145721435546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;17]" time="0.0017426013946533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;18]" time="0.0016713142395019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;19]" time="0.0027043819427490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;20]" time="0.009489774703979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;21]" time="0.019960880279541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;22]" time="0.0017638206481933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;23]" time="0.001302480697631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;24]" time="0.002417325973510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;25]" time="0.02494072914123535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;26]" time="0.055933475494384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;0]" time="0.003021240234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;1]" time="0.002142190933227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;2]" time="0.002197742462158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;3]" time="0.0022819042205810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;4]" time="0.0020236968994140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;5]" time="0.0017418861389160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;6]" time="0.0017390251159667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;7]" time="0.0026068687438964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;8]" time="0.01543116569519043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;9]" time="0.031271934509277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;10]" time="0.004140377044677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;11]" time="0.003475666046142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;12]" time="0.0033783912658691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;13]" time="0.002819061279296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;14]" time="0.003403902053833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;15]" time="0.00436091423034668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;16]" time="0.004038810729980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;17]" time="0.002554178237915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;18]" time="0.002539396286010742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;19]" time="0.004836559295654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;20]" time="0.038039445877075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;21]" time="0.08932971954345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;22]" time="0.0026781558990478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;23]" time="0.001874685287475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;24]" time="0.01549220085144043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;25]" time="0.4869873523712158"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;26]" time="1.1582834720611572"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;0]" time="0.003172159194946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;1]" time="0.0020749568939208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;2]" time="0.0021491050720214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;3]" time="0.002282857894897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;4]" time="0.0021085739135742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;5]" time="0.0017762184143066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;6]" time="0.0017580986022949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;7]" time="0.0022857189178466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;8]" time="0.015260457992553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;9]" time="0.030730724334716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;10]" time="0.00402069091796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;11]" time="0.003549814224243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;12]" time="0.003300189971923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;13]" time="0.002815723419189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;14]" time="0.0035533905029296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;15]" time="0.004275083541870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;16]" time="0.004116058349609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;17]" time="0.002390623092651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;18]" time="0.002310514450073242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;19]" time="0.0046503543853759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;20]" time="0.03744196891784668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;21]" time="0.08872199058532715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;22]" time="0.0027086734771728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;23]" time="0.0018949508666992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;24]" time="0.016547441482543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;25]" time="0.48610997200012207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;26]" time="1.165614366531372"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;0]" time="0.0030760765075683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;1]" time="0.002152681350708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;2]" time="0.002387523651123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;3]" time="0.0023598670959472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;4]" time="0.0021359920501708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;5]" time="0.0017848014831542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;6]" time="0.0017364025115966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;7]" time="0.0026962757110595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;8]" time="0.015391826629638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;9]" time="0.03086996078491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;10]" time="0.004197359085083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;11]" time="0.0035834312438964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;12]" time="0.0035829544067382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;13]" time="0.002861499786376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;14]" time="0.003473997116088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;15]" time="0.004314422607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;16]" time="0.004026651382446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;17]" time="0.0024373531341552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;18]" time="0.0023398399353027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;19]" time="0.00471949577331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;20]" time="0.038494110107421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;21]" time="0.09147167205810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;22]" time="0.0026123523712158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;23]" time="0.0018470287322998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;24]" time="0.015257835388183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;25]" time="0.49092626571655273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;26]" time="1.136911392211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;0]" time="0.0025908946990966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;1]" time="0.0019443035125732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;2]" time="0.0018138885498046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;3]" time="0.0018727779388427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;4]" time="0.001760721206665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;5]" time="0.0014946460723876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;6]" time="0.0014772415161132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;7]" time="0.0018222332000732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;8]" time="0.010214090347290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;9]" time="0.021909475326538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;10]" time="0.003694772720336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;11]" time="0.0027332305908203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;12]" time="0.002589702606201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;13]" time="0.002254486083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;14]" time="0.0025038719177246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;15]" time="0.003061532974243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;16]" time="0.0029256343841552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;17]" time="0.0020503997802734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;18]" time="0.0020225048065185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;19]" time="0.0038754940032958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;20]" time="0.02900075912475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;21]" time="0.07041692733764648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;22]" time="0.002206563949584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;23]" time="0.0015802383422851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;24]" time="0.012469053268432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;25]" time="0.37436580657958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;26]" time="0.863640546798706"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;0]" time="0.0026443004608154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;1]" time="0.0017888545989990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;2]" time="0.0017654895782470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;3]" time="0.0018367767333984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;4]" time="0.0017213821411132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;5]" time="0.0014879703521728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;6]" time="0.0014760494232177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;7]" time="0.001814126968383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;8]" time="0.010503292083740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;9]" time="0.021793127059936523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;10]" time="0.0036292076110839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;11]" time="0.0027213096618652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;12]" time="0.0026175975799560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;13]" time="0.0022749900817871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;14]" time="0.002613067626953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;15]" time="0.0033452510833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;16]" time="0.0031042098999023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;17]" time="0.002180814743041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;18]" time="0.0020530223846435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;19]" time="0.004023313522338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;20]" time="0.02904343605041504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;21]" time="0.06921577453613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;22]" time="0.0022966861724853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;23]" time="0.0015816688537597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;24]" time="0.011742591857910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;25]" time="0.3684558868408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;26]" time="0.8666152954101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;0]" time="0.0027146339416503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;1]" time="0.0018384456634521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;2]" time="0.0018858909606933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;3]" time="0.0019092559814453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;4]" time="0.001714468002319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;5]" time="0.0015349388122558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;6]" time="0.0015363693237304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;7]" time="0.0018513202667236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;8]" time="0.010582447052001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;9]" time="0.021817684173583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;10]" time="0.003595113754272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;11]" time="0.002811431884765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;12]" time="0.0025980472564697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;13]" time="0.0023038387298583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;14]" time="0.00263214111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;15]" time="0.0032563209533691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;16]" time="0.0030477046966552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;17]" time="0.0021910667419433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;18]" time="0.002062559127807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;19]" time="0.003911018371582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;20]" time="0.029300212860107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;21]" time="0.07130026817321777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;22]" time="0.0023031234741210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;23]" time="0.001644134521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;24]" time="0.01216435432434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;25]" time="0.37630558013916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;26]" time="0.8792750835418701"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;0]" time="0.0019233226776123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;1]" time="0.0012621879577636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;2]" time="0.0011768341064453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;3]" time="0.0011913776397705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;4]" time="0.0011975765228271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;5]" time="0.0012118816375732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;6]" time="0.0011723041534423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;7]" time="0.001188516616821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;8]" time="0.0013327598571777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;9]" time="0.0014929771423339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;10]" time="0.0013470649719238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;11]" time="0.0013113021850585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;12]" time="0.0013575553894042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;13]" time="0.0013763904571533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;14]" time="0.0013208389282226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;15]" time="0.0012805461883544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;16]" time="0.0012578964233398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;17]" time="0.0016031265258789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;18]" time="0.0016438961029052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;19]" time="0.002499103546142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;20]" time="0.009064435958862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;21]" time="0.019215822219848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;22]" time="0.001819610595703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;23]" time="0.0012936592102050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;24]" time="0.0023620128631591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;25]" time="0.02400064468383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;26]" time="0.05550575256347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;0]" time="0.0019500255584716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;1]" time="0.0013663768768310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;2]" time="0.0012881755828857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;3]" time="0.0013322830200195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;4]" time="0.0012540817260742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;5]" time="0.0013043880462646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;6]" time="0.0012607574462890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;7]" time="0.0012969970703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;8]" time="0.0015704631805419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;9]" time="0.0020873546600341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;10]" time="0.0014064311981201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;11]" time="0.0014150142669677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;12]" time="0.0014050006866455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;13]" time="0.0014090538024902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;14]" time="0.001401662826538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;15]" time="0.0014595985412597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;16]" time="0.0014753341674804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;17]" time="0.001850128173828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;18]" time="0.0017066001892089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;19]" time="0.0026900768280029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;20]" time="0.009186029434204102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;21]" time="0.019275903701782227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;22]" time="0.001867532730102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;23]" time="0.0013401508331298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;24]" time="0.0024416446685791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;25]" time="0.024915456771850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;26]" time="0.05504560470581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;0]" time="0.0018641948699951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;1]" time="0.0013415813446044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;2]" time="0.001256704330444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;3]" time="0.0012383460998535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;4]" time="0.0012481212615966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;5]" time="0.0012688636779785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;6]" time="0.001207113265991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;7]" time="0.0011849403381347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;8]" time="0.001508474349975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;9]" time="0.0019598007202148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;10]" time="0.0014193058013916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;11]" time="0.0013954639434814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;12]" time="0.001420736312866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;13]" time="0.0013058185577392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;14]" time="0.0013709068298339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;15]" time="0.0014066696166992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;16]" time="0.0013930797576904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;17]" time="0.0016901493072509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;18]" time="0.0016236305236816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;19]" time="0.002525806427001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;20]" time="0.009409189224243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;21]" time="0.0194551944732666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;22]" time="0.0018024444580078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;23]" time="0.0012660026550292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;24]" time="0.0024263858795166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;25]" time="0.024326324462890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;26]" time="0.05563616752624512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;0]" time="0.0018589496612548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;1]" time="0.0013251304626464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;2]" time="0.001157999038696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;3]" time="0.0011723041534423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;4]" time="0.0011332035064697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;5]" time="0.001310110092163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;6]" time="0.0011782646179199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;7]" time="0.0011985301971435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;8]" time="0.0018956661224365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;9]" time="0.002648591995239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;10]" time="0.001508951187133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;11]" time="0.0014510154724121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;12]" time="0.0015392303466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;13]" time="0.0015673637390136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;14]" time="0.0016121864318847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;15]" time="0.0019690990447998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;16]" time="0.002119779586791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;17]" time="0.0021364688873291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;18]" time="0.03157472610473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;19]" time="0.023560285568237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;20]" time="0.0039844512939453125"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;21]" time="0.0038962364196777344"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;22]" time="0.0028765201568603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;23]" time="0.030324220657348633"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;24]" time="0.06216120719909668"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;0]" time="0.003487110137939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;1]" time="0.0014483928680419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;2]" time="0.004515886306762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;3]" time="0.0038979053497314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;4]" time="0.004093170166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;5]" time="0.0024716854095458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;6]" time="0.0014226436614990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;7]" time="0.005107402801513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;8]" time="0.010299205780029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;9]" time="0.018228530883789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;10]" time="0.005158185958862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;11]" time="0.0016644001007080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;12]" time="0.009304523468017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;13]" time="0.007615089416503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;14]" time="0.008481502532958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;15]" time="0.0034770965576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;16]" time="0.0024514198303222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;17]" time="0.006487369537353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;18]" time="0.03823709487915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;19]" time="0.03792572021484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;20]" time="0.0033791065216064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;21]" time="0.0027799606323242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;22]" time="0.0073604583740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;23]" time="0.037339210510253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;24]" time="0.07565832138061523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;0]" time="0.002233266830444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;1]" time="0.0012674331665039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;2]" time="0.0021674633026123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;3]" time="0.0019843578338623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;4]" time="0.002154827117919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;5]" time="0.001474142074584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;6]" time="0.0012311935424804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;7]" time="0.00217437744140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;8]" time="0.0035963058471679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;9]" time="0.005927324295043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;10]" time="0.002076864242553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;11]" time="0.0014281272888183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;12]" time="0.0035207271575927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;13]" time="0.0028793811798095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;14]" time="0.003335237503051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;15]" time="0.002243518829345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;16]" time="0.001973867416381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;17]" time="0.0031681060791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;18]" time="0.03116607666015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;19]" time="0.0261075496673584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;20]" time="0.002177715301513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;21]" time="0.0023450851440429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;22]" time="0.004053831100463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;23]" time="0.030682802200317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;24]" time="0.06387519836425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;0]" time="0.0022661685943603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;1]" time="0.001439809799194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;2]" time="0.0021669864654541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;3]" time="0.0018994808197021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;4]" time="0.002037525177001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;5]" time="0.0014417171478271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;6]" time="0.0011625289916992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;7]" time="0.0021615028381347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;8]" time="0.003730297088623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;9]" time="0.00575566291809082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;10]" time="0.002070188522338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;11]" time="0.0013675689697265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;12]" time="0.0035119056701660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;13]" time="0.002782583236694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;14]" time="0.0033926963806152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;15]" time="0.0022361278533935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;16]" time="0.00201416015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;17]" time="0.0033464431762695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;18]" time="0.03141283988952637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;19]" time="0.02596735954284668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;20]" time="0.0021982192993164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;21]" time="0.002352476119995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;22]" time="0.004042148590087891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;23]" time="0.03017258644104004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;24]" time="0.06331133842468262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;0]" time="0.001703023910522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;1]" time="0.001237630844116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;2]" time="0.0010619163513183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;3]" time="0.0011348724365234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;4]" time="0.0010216236114501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;5]" time="0.0010862350463867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;6]" time="0.0010602474212646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;7]" time="0.0010879039764404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;8]" time="0.0013849735260009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;9]" time="0.0017218589782714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;10]" time="0.0013499259948730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;11]" time="0.00353240966796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;12]" time="0.0013666152954101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;13]" time="0.0013232231140136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;14]" time="0.0012671947479248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;15]" time="0.0017211437225341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;16]" time="0.001840353012084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;17]" time="0.0019135475158691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;18]" time="0.02974843978881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;19]" time="0.022063732147216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;20]" time="0.0015828609466552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;21]" time="0.002231597900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;22]" time="0.002852916717529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;23]" time="0.02794027328491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;24]" time="0.05996561050415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;0]" time="0.0017528533935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;1]" time="0.0012371540069580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;2]" time="0.0011167526245117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;3]" time="0.0011837482452392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;4]" time="0.0011014938354492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;5]" time="0.0010924339294433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;6]" time="0.0011055469512939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;7]" time="0.0010886192321777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;8]" time="0.0012919902801513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;9]" time="0.0013966560363769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;10]" time="0.0013148784637451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;11]" time="0.001196146011352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;12]" time="0.0012760162353515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;13]" time="0.0012640953063964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;14]" time="0.0012676715850830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;15]" time="0.001743316650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;16]" time="0.0018677711486816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;17]" time="0.0019745826721191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;18]" time="0.029296159744262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;19]" time="0.02211594581604004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;20]" time="0.0016756057739257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;21]" time="0.0023088455200195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;22]" time="0.0029821395874023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;23]" time="0.028843164443969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;24]" time="0.059966087341308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;0]" time="0.0016965866088867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;1]" time="0.0012867450714111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;2]" time="0.001096963882446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;3]" time="0.0011267662048339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;4]" time="0.0010237693786621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;5]" time="0.0011081695556640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;6]" time="0.0010781288146972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;7]" time="0.0010900497436523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;8]" time="0.0013649463653564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;9]" time="0.001905679702758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;10]" time="0.0013697147369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;11]" time="0.0012264251708984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;12]" time="0.0013089179992675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;13]" time="0.001325368881225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;14]" time="0.00136566162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;15]" time="0.0018281936645507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;16]" time="0.00201416015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;17]" time="0.0020596981048583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;18]" time="0.028649568557739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;19]" time="0.022328615188598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;20]" time="0.0016999244689941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;21]" time="0.002248525619506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;22]" time="0.0028533935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;23]" time="0.028647184371948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;24]" time="0.06010746955871582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;0]" time="0.0017230510711669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;1]" time="0.0011985301971435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;2]" time="0.0010902881622314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;3]" time="0.0011348724365234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;4]" time="0.0010194778442382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;5]" time="0.0010993480682373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;6]" time="0.0010745525360107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;7]" time="0.0010690689086914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;8]" time="0.0012214183807373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;9]" time="0.0013697147369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;10]" time="0.0013039112091064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;11]" time="0.0012407302856445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;12]" time="0.0012803077697753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;13]" time="0.0012443065643310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;14]" time="0.0012407302856445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;15]" time="0.0017571449279785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;16]" time="0.0018329620361328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;17]" time="0.001871347427368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;18]" time="0.028962373733520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;19]" time="0.021546602249145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;20]" time="0.0016684532165527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;21]" time="0.0023872852325439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;22]" time="0.0030388832092285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;23]" time="0.028781890869140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;24]" time="0.06038928031921387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;0]" time="0.002275228500366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;1]" time="0.0015559196472167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;2]" time="0.0015435218811035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;3]" time="0.0015099048614501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;4]" time="0.0014514923095703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;5]" time="0.0014770030975341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;6]" time="0.0014243125915527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;7]" time="0.0015301704406738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;8]" time="0.001741647720336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;9]" time="0.0017712116241455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;10]" time="0.0016062259674072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;11]" time="0.0016193389892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;12]" time="0.0016751289367675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;13]" time="0.0016055107116699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;14]" time="0.0016100406646728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;15]" time="0.0017180442810058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;16]" time="0.0016510486602783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;17]" time="0.0019214153289794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;18]" time="0.0017914772033691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;19]" time="0.0027718544006347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;20]" time="0.00919485092163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;21]" time="0.019080162048339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;22]" time="0.0020265579223632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;23]" time="0.001445770263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;24]" time="0.002524852752685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;25]" time="0.023988008499145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;26]" time="0.055716753005981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;0]" time="0.002203702926635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;1]" time="0.0015451908111572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;2]" time="0.0015177726745605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;3]" time="0.0015397071838378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;4]" time="0.0014491081237792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;5]" time="0.0014164447784423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;6]" time="0.001432180404663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;7]" time="0.001468658447265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;8]" time="0.0017807483673095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;9]" time="0.002164602279663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;10]" time="0.001664876937866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;11]" time="0.0016968250274658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;12]" time="0.0017347335815429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;13]" time="0.0016148090362548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;14]" time="0.0016584396362304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;15]" time="0.001737833023071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;16]" time="0.0017366409301757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;17]" time="0.001984834671020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;18]" time="0.0018966197967529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;19]" time="0.0028486251831054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;20]" time="0.009307622909545898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;21]" time="0.019411802291870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;22]" time="0.0022003650665283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;23]" time="0.0015077590942382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;24]" time="0.0027344226837158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;25]" time="0.024110794067382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;26]" time="0.055451154708862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;0]" time="0.0022788047790527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;1]" time="0.0016045570373535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;2]" time="0.0015368461608886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;3]" time="0.0015909671783447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;4]" time="0.0014536380767822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;5]" time="0.0014908313751220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;6]" time="0.0014414787292480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;7]" time="0.00147247314453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;8]" time="0.001783132553100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;9]" time="0.0022559165954589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;10]" time="0.0017201900482177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;11]" time="0.0016965866088867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;12]" time="0.0017733573913574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;13]" time="0.0016970634460449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;14]" time="0.0017864704132080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;15]" time="0.0018432140350341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;16]" time="0.0017838478088378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;17]" time="0.0019483566284179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;18]" time="0.0018725395202636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;19]" time="0.0028362274169921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;20]" time="0.01230001449584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;21]" time="0.02022862434387207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;22]" time="0.0020868778228759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;23]" time="0.0015392303466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;24]" time="0.002625703811645508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;25]" time="0.024402379989624023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;26]" time="0.05554080009460449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;0]" time="0.0021181106567382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;1]" time="0.0016276836395263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;2]" time="0.0015697479248046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;3]" time="0.0014996528625488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;4]" time="0.0014765262603759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;5]" time="0.0014338493347167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;6]" time="0.0014338493347167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;7]" time="0.001447916030883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;8]" time="0.0025603771209716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;9]" time="0.0040988922119140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;10]" time="0.0017609596252441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;11]" time="0.00188446044921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;12]" time="0.0016944408416748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;13]" time="0.0015766620635986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;14]" time="0.001791238784790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;15]" time="0.0018038749694824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;16]" time="0.0016698837280273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;17]" time="0.0018889904022216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;18]" time="0.001913309097290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;19]" time="0.0029001235961914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;20]" time="0.010455608367919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;21]" time="0.02123737335205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;22]" time="0.0021965503692626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;23]" time="0.001451730728149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;24]" time="0.002711772918701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;25]" time="0.026004314422607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;26]" time="0.05751919746398926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;0]" time="0.002254486083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;1]" time="0.0015752315521240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;2]" time="0.0015110969543457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;3]" time="0.0015292167663574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;4]" time="0.0015139579772949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;5]" time="0.0014209747314453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;6]" time="0.0014269351959228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;7]" time="0.0014641284942626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;8]" time="0.0026438236236572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;9]" time="0.004284381866455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;10]" time="0.0017430782318115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;11]" time="0.0017650127410888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;12]" time="0.0018248558044433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;13]" time="0.0016851425170898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;14]" time="0.0017552375793457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;15]" time="0.0018765926361083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;16]" time="0.0017697811126708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;17]" time="0.0019354820251464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;18]" time="0.001911163330078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;19]" time="0.0029354095458984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;20]" time="0.010266304016113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;21]" time="0.02210092544555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;22]" time="0.002122163772583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;23]" time="0.0015468597412109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;24]" time="0.0026721954345703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;25]" time="0.025221824645996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;26]" time="0.057512760162353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;0]" time="0.0022535324096679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;1]" time="0.0015454292297363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;2]" time="0.001516580581665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;3]" time="0.0014829635620117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;4]" time="0.0014674663543701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;5]" time="0.0016455650329589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;6]" time="0.0013811588287353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;7]" time="0.0014574527740478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;8]" time="0.0027229785919189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;9]" time="0.0042572021484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;10]" time="0.0018017292022705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;11]" time="0.0017364025115966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;12]" time="0.001737356185913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;13]" time="0.0016367435455322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;14]" time="0.0017898082733154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;15]" time="0.0017621517181396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;16]" time="0.0017459392547607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;17]" time="0.0018777847290039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;18]" time="0.0019145011901855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;19]" time="0.0028455257415771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;20]" time="0.010277986526489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;21]" time="0.021793127059936523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;22]" time="0.0022156238555908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;23]" time="0.0015184879302978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;24]" time="0.0025870800018310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;25]" time="0.02478647232055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;26]" time="0.056110382080078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;0]" time="0.003037691116333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;1]" time="0.002239227294921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;2]" time="0.002093076705932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;3]" time="0.0022547245025634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;4]" time="0.002162933349609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;5]" time="0.002084970474243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;6]" time="0.0027909278869628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;7]" time="0.002287626266479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;8]" time="0.005830526351928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;9]" time="0.010937213897705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;10]" time="0.0027680397033691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;11]" time="0.0027685165405273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;12]" time="0.0028510093688964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;13]" time="0.00260162353515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;14]" time="0.002768993377685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;15]" time="0.002923727035522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;16]" time="0.002880096435546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;17]" time="0.002535104751586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;18]" time="0.00249481201171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;19]" time="0.006351947784423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;20]" time="0.014252901077270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;21]" time="0.028078317642211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;22]" time="0.0029387474060058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;23]" time="0.0020742416381835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;24]" time="0.003365755081176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;25]" time="0.029120922088623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;26]" time="0.06431412696838379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;0]" time="0.003079652786254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;1]" time="0.0021898746490478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;2]" time="0.0021872520446777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;3]" time="0.002259969711303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;4]" time="0.00218963623046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;5]" time="0.0020754337310791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;6]" time="0.002074003219604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;7]" time="0.002668142318725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;8]" time="0.005868196487426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;9]" time="0.011343717575073242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;10]" time="0.003996610641479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;11]" time="0.00305938720703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;12]" time="0.0028519630432128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;13]" time="0.0026810169219970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;14]" time="0.0028264522552490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;15]" time="0.0030786991119384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;16]" time="0.003072500228881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;17]" time="0.0026977062225341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;18]" time="0.002524852752685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;19]" time="0.0035507678985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;20]" time="0.01390385627746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;21]" time="0.02948760986328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;22]" time="0.0028324127197265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;23]" time="0.0022132396697998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;24]" time="0.003424406051635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;25]" time="0.02846074104309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;26]" time="0.06576895713806152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;0]" time="0.0032444000244140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;1]" time="0.0023033618927001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;2]" time="0.0021817684173583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;3]" time="0.002347707748413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;4]" time="0.0021865367889404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;5]" time="0.002081155776977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;6]" time="0.002122640609741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;7]" time="0.0021991729736328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;8]" time="0.005908966064453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;9]" time="0.011328935623168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;10]" time="0.0029764175415039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;11]" time="0.0029230117797851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;12]" time="0.0029168128967285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;13]" time="0.0027391910552978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;14]" time="0.0027840137481689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;15]" time="0.002997875213623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;16]" time="0.0030570030212402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;17]" time="0.0026116371154785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;18]" time="0.002519845962524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;19]" time="0.0036182403564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;20]" time="0.013635635375976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;21]" time="0.028850317001342773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;22]" time="0.002882242202758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;23]" time="0.0021767616271972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;24]" time="0.0033097267150878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;25]" time="0.029373645782470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;26]" time="0.0647439956665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;0]" time="0.002637624740600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;1]" time="0.001802682876586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;2]" time="0.0028007030487060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;3]" time="0.0036094188690185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;4]" time="0.00442957878112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;5]" time="0.001867532730102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;6]" time="0.0018115043640136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;7]" time="0.002795696258544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;8]" time="0.003919124603271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;9]" time="0.005104780197143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;10]" time="0.002223491668701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;11]" time="0.003825664520263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;12]" time="0.0037779808044433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;13]" time="0.003144979476928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;14]" time="0.003748655319213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;15]" time="0.005428791046142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;16]" time="0.007245779037475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;17]" time="0.0024003982543945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;18]" time="0.0024309158325195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;19]" time="0.004199981689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;20]" time="0.012101888656616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;21]" time="0.022539615631103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;22]" time="0.002531766891479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;23]" time="0.001917123794555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;24]" time="0.003917694091796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;25]" time="0.027293920516967773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;26]" time="0.058151960372924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;0]" time="0.0027532577514648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;1]" time="0.001912832260131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;2]" time="0.0028929710388183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;3]" time="0.0037658214569091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;4]" time="0.004517555236816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;5]" time="0.0019006729125976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;6]" time="0.0017998218536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;7]" time="0.002837657928466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;8]" time="0.004098176956176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;9]" time="0.005470991134643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;10]" time="0.0022280216217041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;11]" time="0.003871440887451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;12]" time="0.0038301944732666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;13]" time="0.0031180381774902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;14]" time="0.003818511962890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;15]" time="0.005375862121582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;16]" time="0.0072214603424072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;17]" time="0.0023932456970214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;18]" time="0.0023179054260253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;19]" time="0.004202365875244141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;20]" time="0.011971712112426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;21]" time="0.023552656173706055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;22]" time="0.002488851547241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;23]" time="0.0018846988677978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;24]" time="0.003988027572631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;25]" time="0.027521610260009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;26]" time="0.057656288146972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;0]" time="0.002729177474975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;1]" time="0.0019352436065673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;2]" time="0.002828836441040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;3]" time="0.0037534236907958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;4]" time="0.004645109176635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;5]" time="0.0019192695617675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;6]" time="0.0018258094787597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;7]" time="0.00284576416015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;8]" time="0.0041942596435546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;9]" time="0.005619525909423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;10]" time="0.0022847652435302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;11]" time="0.003935098648071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;12]" time="0.003938913345336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;13]" time="0.003164529800415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;14]" time="0.0038695335388183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;15]" time="0.008299827575683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;16]" time="0.007277250289916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;17]" time="0.0024445056915283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;18]" time="0.0024077892303466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;19]" time="0.004586219787597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;20]" time="0.012151002883911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;21]" time="0.023517608642578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;22]" time="0.0026764869689941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;23]" time="0.0018982887268066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;24]" time="0.004004955291748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;25]" time="0.026439905166625977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;26]" time="0.05975031852722168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.004079580307006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.003399372100830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.009177923202514648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.012392997741699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.017949819564819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.00829768180847168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0027599334716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0032613277435302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.025235891342163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.041820526123046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.13079833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.009307861328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0044858455657958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.010579586029052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.010540962219238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.017894744873046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.027397632598876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.03586077690124512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.004512310028076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.004187107086181641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.04995083808898926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.05243110656738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.17003130912780762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.010559558868408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0039904117584228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.004477739334106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.044196128845214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07007503509521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.23784446716308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.01223897933959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004037141799926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.003278493881225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.008954286575317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.012136459350585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.016787290573120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.008512020111083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.004039287567138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.003498077392578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.024450302124023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.042215824127197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.13199067115783691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.009641170501708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.005666971206665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.010323524475097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.010546445846557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.017879724502563477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.026301145553588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.035111188888549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0044252872467041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.004326581954956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.04977607727050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.052066802978515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.16708898544311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.010610342025756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.003987550735473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0045545101165771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.04777383804321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.06953859329223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.23542165756225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.011944770812988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0029954910278320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.003203868865966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.008833646774291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.012284517288208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.018439292907714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.008063077926635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.002711772918701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0033562183380126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.02445530891418457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.04158973693847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.1320338249206543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.009287595748901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.00444483757019043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.010288715362548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.010707378387451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.01793980598449707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.026658296585083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0353693962097168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.004503011703491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.004256010055541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.05177807807922363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.05251026153564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.17025470733642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.010793447494506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.002741098403930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.00460362434387207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.045877695083618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.06895089149475098"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.23546576499938965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.012848615646362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0041162967681884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0034570693969726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.009076356887817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.01287531852722168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0169064998626709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.008705615997314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.004098653793334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.003519296646118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.024942874908447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.04341769218444824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.13500070571899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.009412050247192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0044362545013427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.010469436645507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.010658740997314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.017763853073120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.026722192764282227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.03535795211791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.004648447036743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004588127136230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.0493016242980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.05256319046020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.1702728271484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.011060953140258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0037550926208496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.004629850387573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.04568958282470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.06973409652709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.23461294174194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.012197494506835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.004007816314697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.003491640090942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.009271860122680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.012251138687133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.01657390594482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.008211135864257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0027086734771728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.003314971923828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.024516582489013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0438380241394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.1342329978942871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.009521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.005545854568481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.010465145111083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.010860919952392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.018168210983276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.02635931968688965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.03520774841308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0045320987701416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004197597503662109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.04846072196960449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.05241250991821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.16773056983947754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.010563135147094727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.003874063491821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004456043243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.0453641414642334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.06852221488952637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.2344651222229004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.011957645416259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002811908721923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.003213644027709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.008850574493408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.012459039688110352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.01790332794189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.008337736129760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0027337074279785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0033087730407714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.02435016632080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.042307138442993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.13300180435180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.009257793426513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.005519390106201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.010440349578857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.01071619987487793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.018062591552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.027119159698486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.035335540771484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.005078792572021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004629373550415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.04949188232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.05234169960021973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.1713554859161377"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.010853767395019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0027790069580078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004512310028076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.0455169677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.0701303482055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.23652195930480957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.012652158737182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.00395965576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.003276348114013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.008861780166625977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.012160062789916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.016762733459472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.00815272331237793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0027408599853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.003385782241821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.02718973159790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.041329145431518555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.13046598434448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.009328603744506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0055506229400634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.010519266128540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.010861635208129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.017989397048950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0268404483795166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.03547334671020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0046749114990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.004452705383300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.04946184158325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.05184650421142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.16852283477783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.010370016098022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.003820180892944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0046389102935791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.04452037811279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.06863641738891602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.23510313034057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.012393474578857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.004079580307006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0034432411193847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.00896453857421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.012157917022705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.016584157943725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.008207559585571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0027954578399658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.003366708755493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.024515867233276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.041765451431274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.13426733016967773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.009400129318237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0044858455657958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.010463714599609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.010673999786376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.01788043975830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.026244401931762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.03551888465881348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.004558086395263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004232645034790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.04910087585449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.05199694633483887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.16599750518798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.010387897491455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0027577877044677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.004458904266357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.0445098876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.06987833976745605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.239396333694458"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.012498855590820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.004062175750732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0032722949981689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.00878763198852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.012021064758300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.016530990600585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.008391618728637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.002856731414794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0033731460571289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.024951457977294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.042307138442993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.13386273384094238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.009360551834106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.004628896713256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.011153936386108398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.010907888412475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.017951011657714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.026566505432128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.03565478324890137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.00445246696472168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.004233121871948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.04906153678894043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.052211761474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.16875147819519043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.010420083999633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.002686023712158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004476070404052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.045177459716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.07045364379882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.23799443244934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.012673377990722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0023391246795654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0015461444854736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.003534078598022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.003685474395751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.005930662155151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.004017829895019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0018813610076904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.001417398452758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.003419637680053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.003859996795654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.007364749908447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.004475593566894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0022077560424804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0016467571258544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0033369064331054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.004391193389892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.005411863327026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.010133981704711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.002745389938354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002220630645751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.027791976928710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.014966726303100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04166841506958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.006623983383178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0018076896667480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.002552509307861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.024181365966796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.034064292907714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.11323833465576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.008434057235717773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0018281936645507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0014712810516357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.003117084503173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.003432750701904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.005667448043823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.004035472869873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0019156932830810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0015892982482910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0036013126373291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0037813186645507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.007537126541137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.004473209381103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.002228260040283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0017952919006347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0034847259521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.004531145095825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.005435943603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.010103464126586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002774953842163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.002215147018432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.028105735778808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.014686107635498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.043142080307006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.006508350372314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.001783609390258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0026397705078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.024789810180664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.033150672912597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.11306929588317871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.008442163467407227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.002585887908935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0014319419860839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0031251907348632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0034112930297851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.005856513977050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.004328727722167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0018732547760009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0014352798461914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0036649703979492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.006135702133178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.00738835334777832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.004261970520019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.002336740493774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0017766952514648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0034568309783935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0046045780181884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0054187774658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.01088714599609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.003714323043823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0024454593658447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.027863025665283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.015375137329101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.04201054573059082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.006558656692504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0018439292907714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.002536296844482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.024544715881347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.03314089775085449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.1132345199584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.008894205093383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0025587081909179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0014691352844238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0031125545501708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0034449100494384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.005834341049194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.003900289535522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.001829385757446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0014095306396484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0032711029052734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0038344860076904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.007200717926025391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.004596233367919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0024652481079101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0018031597137451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.003638744354248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.004559993743896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.005429267883300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.010050773620605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0026793479919433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0021996498107910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.02759099006652832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.015281438827514648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.04192161560058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.00687098503112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0026814937591552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0028314590454101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.02382516860961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.0332639217376709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.11397171020507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.008250713348388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0027222633361816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0014879703521728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.003286123275756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0035707950592041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.005640745162963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.003911018371582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0017859935760498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.001407623291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0034067630767822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0038576126098632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.007817983627319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.00439906120300293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0022895336151123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0017895698547363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0035903453826904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.004765748977661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.005593299865722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.010679960250854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.002834796905517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0022745132446289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.02765369415283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.015816926956176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.043743133544921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.0066606998443603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0026798248291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0026798248291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.02412891387939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.032460689544677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.11171245574951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.008429765701293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002792835235595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0014986991882324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.003282785415649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.003558635711669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.008507966995239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.004095554351806641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0019276142120361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0014712810516357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.00348663330078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0039017200469970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.007759571075439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.004358053207397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.002404451370239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0018985271453857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.003662586212158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.004672527313232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.005720376968383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.010712385177612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0028297901153564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002309560775756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.028238773345947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.01561117172241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.04362130165100098"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.006761312484741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0018649101257324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.002660036087036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.025204896926879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.033980369567871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.11493229866027832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.008452653884887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.002922534942626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0015954971313476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.003437042236328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0034551620483398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.005746126174926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.004373311996459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0019359588623046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.001489400863647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.003395557403564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.003846406936645508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.007431745529174805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.004151582717895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0021970272064208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0017855167388916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.003457307815551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.004597187042236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.005344390869140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.010178327560424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002755880355834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0022945404052734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.027532339096069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.015245437622070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.04311871528625488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0065538883209228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0017695426940917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002489805221557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.024664640426635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.03307533264160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.11257100105285645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.008048295974731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.001825571060180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0013873577117919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0030405521392822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.003470897674560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.005650043487548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.003874063491821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0017414093017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0013995170593261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.003421306610107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.003977060317993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.007417917251586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0041272640228271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.002191781997680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0017502307891845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0034818649291992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.004477739334106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.005560159683227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.010099649429321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0027315616607666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002257823944091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.02730846405029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.015128374099731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.04254007339477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.006690025329589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0018808841705322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002565622329711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.024075984954833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.032572269439697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.11209368705749512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.008197546005249023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.001873016357421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0013942718505859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.002975940704345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0034356117248535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0057184696197509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0039899349212646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0018661022186279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0014824867248535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.003597736358642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0038423538208007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.007523298263549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0042285919189453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.002321958541870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.001819610595703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.003795146942138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.004971981048583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.005456686019897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.010052919387817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.002781391143798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0023996829986572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.027994155883789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.014800786972045898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.04221463203430176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.006894111633300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0025587081909179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.002540111541748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.02485346794128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.03268766403198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.11143016815185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.008491992950439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0033266544342041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.003184795379638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0050144195556640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.005711078643798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.006925821304321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.005103588104248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0022454261779785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0032286643981933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.012401342391967773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.018598556518554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.05445098876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.006837606430053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0032100677490234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0057566165924072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.007105588912963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.00887751579284668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.011044740676879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.013606548309326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0038585662841796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.004012107849121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.035808563232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.02776932716369629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.08828234672546387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.00808262825012207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0031251907348632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0041790008544921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.03534722328186035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.04743599891662598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.15726304054260254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.009702682495117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.00330352783203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0031409263610839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.005213022232055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.005829572677612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.006965160369873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.004969120025634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0021741390228271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0031137466430664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.012517452239990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.018498659133911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.05379891395568848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.006865024566650391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.00328826904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.005687236785888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.007062673568725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.009122610092163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.01166391372680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.013916254043579102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.003866910934448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.004084348678588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0359654426574707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.028053998947143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.088623046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.00784921646118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.002179861068725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0041697025299072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.03280329704284668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.04626107215881348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.16036367416381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.009710311889648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0023276805877685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.003049612045288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.004861354827880859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.005683183670043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.006842613220214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0049457550048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.002218008041381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.003217458724975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.012318611145019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.018566608428955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.054349660873413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.006853342056274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0033826828002929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.005673408508300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0071790218353271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.009552717208862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.011188030242919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.014319419860839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.003985404968261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.004280567169189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.03704571723937988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.029340028762817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.08960914611816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.008269071578979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0032193660736083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004273176193237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.03312253952026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.04631328582763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.157973051071167"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.00984954833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.003362894058227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.003231048583984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.005028724670410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.005839109420776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.00775909423828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.005032539367675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.002463102340698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.003173351287841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.012202024459838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.018033742904663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.05492210388183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.006806612014770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.003507375717163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.00584721565246582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.007783412933349609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0094146728515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.011313438415527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.014103412628173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.004052400588989258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004132986068725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.037300825119018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.028470277786254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.09104752540588379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.00816798210144043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0032758712768554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.004308462142944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.03231096267700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.048064231872558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.1593019962310791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.009754657745361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0025451183319091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.003512859344482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.005099773406982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.005794525146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.007077932357788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.005200386047363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0022194385528564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0031905174255371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.012361526489257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.018072843551635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.0550539493560791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.006970882415771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0035028457641601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.005794048309326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.007195711135864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.009476184844970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.011291742324829102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.014209985733032227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.004079103469848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004270076751708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.0369412899017334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.028319358825683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.08811068534851074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.00797581672668457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0023126602172851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004312276840209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.03219795227050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.046640634536743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.15939664840698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.01001429557800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0032711029052734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.003119945526123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.004912614822387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.005770444869995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.007106781005859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.005110025405883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0022759437561035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0031800270080566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0124969482421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.019220590591430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.05503368377685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.006804704666137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0034270286560058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.005795478820800781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.007155179977416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.009500503540039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.01145172119140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.014148235321044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.004001617431640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0041315555572509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.037398576736450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.02949976921081543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.08941245079040527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.008066415786743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.003206014633178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0043277740478515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.03286266326904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.0465087890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.15993356704711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.01009368896484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0025489330291748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0031185150146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0050160884857177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.005777835845947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.007239580154418945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.005120992660522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0022988319396972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0032339096069335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.012458562850952148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.018346786499023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.05385732650756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.006855010986328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0033257007598876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.005907535552978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0073757171630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.009320974349975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.012114286422729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.01469278335571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0037407875061035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.004532814025878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.036843061447143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.02839517593383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.0898895263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.009354114532470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.002963542938232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004465818405151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.03336501121520996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.046957969665527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.16791939735412598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010888338088989258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.003069639205932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0034635066986083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.005482196807861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.006173133850097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.007241249084472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.00649571418762207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0023336410522460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.003278970718383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.013055562973022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.01838994026184082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.05668449401855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0070455074310302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.003694295883178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.006070137023925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0076830387115478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.009998798370361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.012178897857666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.015047550201416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.004085063934326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004380464553833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.03767657279968262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.030092716217041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.0912775993347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.008423805236816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.003301382064819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.004362821578979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.032599687576293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.04607963562011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.15833497047424316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.012257575988769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0033011436462402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.003093242645263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.00487518310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0056972503662109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0071027278900146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0049762725830078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.002224445343017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.003143787384033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.012634992599487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.018802404403686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.05495572090148926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.006684064865112305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.003416299819946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.006013631820678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.007344245910644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.009217977523803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.011395931243896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.014068365097045898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.003950834274291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0042574405670166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.03652811050415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.028536558151245117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.08979201316833496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.008538961410522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0033614635467529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.00439763069152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.032979726791381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.04576826095581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.15784692764282227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.00972294807434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;0]" time="0.005015850067138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;1]" time="0.001680135726928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;2]" time="0.0015368461608886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;3]" time="0.0015707015991210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;4]" time="0.0014591217041015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;5]" time="0.0014431476593017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;6]" time="0.0013222694396972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;7]" time="0.0015769004821777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;8]" time="0.0037429332733154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;9]" time="0.008212089538574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;10]" time="0.0028076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;11]" time="0.0019507408142089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;12]" time="0.0021278858184814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;13]" time="0.0017023086547851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;14]" time="0.001833200454711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;15]" time="0.0019452571868896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;16]" time="0.0018672943115234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;0]" time="0.0014498233795166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;1]" time="0.0014030933380126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;2]" time="0.001436471939086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;3]" time="0.0015239715576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;4]" time="0.0014526844024658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;5]" time="0.0013904571533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;6]" time="0.001463174819946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;7]" time="0.0015799999237060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;8]" time="0.005472421646118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;9]" time="0.011719465255737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;10]" time="0.0020647048950195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;11]" time="0.0020799636840820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;12]" time="0.0018832683563232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;13]" time="0.001771688461303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;14]" time="0.0018916130065917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;15]" time="0.002012014389038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;16]" time="0.00196075439453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;0]" time="0.0014853477478027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;1]" time="0.0015652179718017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;2]" time="0.0015153884887695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;3]" time="0.0016088485717773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;4]" time="0.0015857219696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;5]" time="0.0015361309051513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;6]" time="0.0014369487762451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;7]" time="0.0015680789947509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;8]" time="0.005158901214599609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;9]" time="0.011459827423095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;10]" time="0.002086162567138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;11]" time="0.002007007598876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;12]" time="0.0019254684448242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;13]" time="0.0017125606536865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;14]" time="0.0018894672393798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;15]" time="0.002087831497192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;16]" time="0.0019712448120117188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.007929563522338867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0032126903533935547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.02023005485534668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.023342609405517578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0304415225982666"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.02991962432861328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.008054733276367188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0028128623962402344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.029297828674316406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.04002213478088379"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.12885332107543945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.03386354446411133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.02152729034423828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.006151676177978516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.027714967727661133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.04488682746887207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.050373077392578125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.07214236259460449"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.028826475143432617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.006497383117675781"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.18047523498535156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.09674453735351562"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.33665919303894043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0813596248626709"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.008918046951293945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.004546642303466797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.3498406410217285"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.5699350833892822"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="3.0166659355163574"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.18581604957580566"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.010090351104736328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.004145145416259766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.020142793655395508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.022558212280273438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.030203580856323242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.030165433883666992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.008487939834594727"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0038819313049316406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.02964472770690918"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.03987550735473633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.12786269187927246"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.03298687934875488"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.02150559425354004"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0062634944915771484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.027862548828125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.04503130912780762"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.05002284049987793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.07143855094909668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.028977155685424805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.006563901901245117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.18821144104003906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.0976858139038086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.34920310974121094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0811765193939209"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.009025096893310547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.00590968132019043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.3625822067260742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.5815646648406982"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="3.057969093322754"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.1872568130493164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.008906364440917969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.004128694534301758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0201261043548584"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.02464437484741211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.029873371124267578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.029526710510253906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.008028745651245117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.002797842025756836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.029109477996826172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.040683746337890625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.12594914436340332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0331270694732666"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.020679473876953125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.006313323974609375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.027760028839111328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.045537471771240234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.049742698669433594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.07117819786071777"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.03000950813293457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0067369937896728516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.18523621559143066"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.09867620468139648"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.3521387577056885"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.08267545700073242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.008884191513061523"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.006310224533081055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.36142897605895996"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.6368503570556641"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="3.363516092300415"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.23224353790283203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.009944915771484375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.00440216064453125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.02217411994934082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.024767160415649414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.033289432525634766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0334169864654541"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.008938312530517578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.004324436187744141"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.032074928283691406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.04317069053649902"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.1444108486175537"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0358433723449707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.023359298706054688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.006575345993041992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.03068065643310547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.04973483085632324"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0563654899597168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0794222354888916"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.03291010856628418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.007064104080200195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.2022411823272705"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.1055305004119873"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.38373422622680664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.09048295021057129"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.009981393814086914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.005386829376220703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.3751497268676758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.6640233993530273"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="3.2945804595947266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.21257996559143066"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.009514570236206055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.004533529281616211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.021438121795654297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.024488210678100586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.03298807144165039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.03326582908630371"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.00921940803527832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.004521608352661133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0329594612121582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.043795108795166016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.13412785530090332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.03381848335266113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.021046876907348633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.006184101104736328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.02781224250793457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.04646658897399902"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.04952549934387207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.07170772552490234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.029296159744262695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.006626129150390625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.18205022811889648"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.09756016731262207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.3414006233215332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.08157730102539062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.008719444274902344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0050432682037353516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.3585035800933838"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.590872049331665"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="3.063908100128174"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.18656396865844727"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.008876323699951172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0040624141693115234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.020063161849975586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.022557973861694336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.030475616455078125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.029485702514648438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.00810694694519043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0029375553131103516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0292510986328125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.03986096382141113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.12692594528198242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.03331613540649414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.020723581314086914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.006005048751831055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.02814483642578125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.044815778732299805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.050743818283081055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.07215428352355957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.028803348541259766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.00647425651550293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.18024778366088867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.0961310863494873"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.3406682014465332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.08130264282226562"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.008655071258544922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0051462650299072266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.3642919063568115"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.5908396244049072"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="3.0992558002471924"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.19626855850219727"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.008768081665039062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.003161191940307617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.020532608032226562"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.023621797561645508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.031354665756225586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.02996683120727539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.00832819938659668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.003022432327270508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.03081059455871582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.04027676582336426"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.13289117813110352"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.03387880325317383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.021173715591430664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0063855648040771484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.028268814086914062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.04523324966430664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.04925656318664551"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.07114863395690918"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.02879810333251953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.006406307220458984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.19185519218444824"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.10184288024902344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.35782909393310547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.08334779739379883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.008831977844238281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004382133483886719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.3506126403808594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.5966827869415283"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="3.05869197845459"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.1918773651123047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.009123563766479492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0042400360107421875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.020043373107910156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.022934675216674805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.03001999855041504"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.030154705047607422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.008155584335327148"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0028793811798095703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.02952122688293457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.03993868827819824"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.13080739974975586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.03362393379211426"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.021367311477661133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.006503105163574219"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.02843642234802246"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.04535961151123047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.04979872703552246"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0717630386352539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.02928471565246582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.00641179084777832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.1774611473083496"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.09794235229492188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.34230542182922363"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.08181333541870117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.008798837661743164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.005164146423339844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.3686656951904297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.6021862030029297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="3.110114097595215"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.1919572353363037"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.009373903274536133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.00421905517578125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.02007269859313965"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.02325606346130371"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.03098607063293457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.03016376495361328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.008326053619384766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.002881288528442383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.029807090759277344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.04093480110168457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.13033270835876465"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.03306436538696289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.02094101905822754"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.006205081939697266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.027495145797729492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.045737266540527344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.04980874061584473"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.07272982597351074"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.030185222625732422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.006822824478149414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.19698405265808105"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.10149884223937988"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.3553633689880371"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.08243966102600098"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.00898885726928711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.008568048477172852"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.3676638603210449"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.6141037940979004"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="3.1629645824432373"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.18780016899108887"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;0]" time="0.0927894115447998"><system-err>14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;1]" time="0.06693601608276367"><system-err>14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;2]" time="0.07198524475097656"><system-err>14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;3]" time="0.06756448745727539"><system-err>14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;4]" time="0.06986498832702637"><system-err>14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;5]" time="0.06641936302185059"><system-err>14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;6]" time="0.06850337982177734"><system-err>14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;7]" time="0.06532549858093262"><system-err>14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
14:14 L2ProductP1: Integrate the products of the shape functions on each element
14:14 L2ProductP1: Determine global dofs ...
14:14 L2ProductP1: Boundary treatment ...
14:14 L2ProductP1: Assemble system matrix ...
14:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:14 DiffusionOperatorP1: Determine global dofs ...
14:14 DiffusionOperatorP1: Boundary treatment ...
14:14 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;8]" time="0.06922459602355957"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;9]" time="0.06732439994812012"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;10]" time="0.07048439979553223"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;11]" time="0.06728625297546387"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;12]" time="0.06497001647949219"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;13]" time="0.06149625778198242"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;14]" time="0.0730443000793457"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;15]" time="0.06914877891540527"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;16]" time="0.06557202339172363"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;17]" time="0.06069064140319824"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;18]" time="0.07231593132019043"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;19]" time="0.06718730926513672"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;20]" time="0.06930851936340332"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;21]" time="0.06641554832458496"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 L2ProductP1: Integrate the products of the shape functions on each element
14:15 L2ProductP1: Determine global dofs ...
14:15 L2ProductP1: Boundary treatment ...
14:15 L2ProductP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;22]" time="0.07018232345581055"><system-err>14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:15 DiffusionOperatorP1: Determine global dofs ...
14:15 DiffusionOperatorP1: Boundary treatment ...
14:15 DiffusionOperatorP1: Assemble system matrix ...
14:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:16 DiffusionOperatorP1: Determine global dofs ...
14:16 DiffusionOperatorP1: Boundary treatment ...
14:16 DiffusionOperatorP1: Assemble system matrix ...
14:16 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:16 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:16 DiffusionOperatorP1: Determine global dofs ...
14:16 DiffusionOperatorP1: Boundary treatment ...
14:16 DiffusionOperatorP1: Assemble system matrix ...
14:16 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:16 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:16 DiffusionOperatorP1: Determine global dofs ...
14:16 DiffusionOperatorP1: Boundary treatment ...
14:16 DiffusionOperatorP1: Assemble system matrix ...
14:16 L2ProductP1: Integrate the products of the shape functions on each element
14:16 L2ProductP1: Determine global dofs ...
14:16 L2ProductP1: Boundary treatment ...
14:16 L2ProductP1: Assemble system matrix ...
14:16 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:16 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:16 DiffusionOperatorP1: Determine global dofs ...
14:16 DiffusionOperatorP1: Boundary treatment ...
14:16 DiffusionOperatorP1: Assemble system matrix ...
14:16 L2ProductP1: Integrate the products of the shape functions on each element
14:16 L2ProductP1: Determine global dofs ...
14:16 L2ProductP1: Boundary treatment ...
14:16 L2ProductP1: Assemble system matrix ...
14:16 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:16 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:16 DiffusionOperatorP1: Determine global dofs ...
14:16 DiffusionOperatorP1: Boundary treatment ...
14:16 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;23]" time="0.06889009475708008"><system-err>14:16 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:16 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:16 DiffusionOperatorP1: Determine global dofs ...
14:16 DiffusionOperatorP1: Boundary treatment ...
14:16 DiffusionOperatorP1: Assemble system matrix ...
14:16 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:16 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:16 DiffusionOperatorP1: Determine global dofs ...
14:16 DiffusionOperatorP1: Boundary treatment ...
14:16 DiffusionOperatorP1: Assemble system matrix ...
14:16 L2ProductP1: Integrate the products of the shape functions on each element
14:16 L2ProductP1: Determine global dofs ...
14:16 L2ProductP1: Boundary treatment ...
14:16 L2ProductP1: Assemble system matrix ...
14:16 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:16 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:16 DiffusionOperatorP1: Determine global dofs ...
14:16 DiffusionOperatorP1: Boundary treatment ...
14:16 DiffusionOperatorP1: Assemble system matrix ...
14:16 L2ProductP1: Integrate the products of the shape functions on each element
14:16 L2ProductP1: Determine global dofs ...
14:16 L2ProductP1: Boundary treatment ...
14:16 L2ProductP1: Assemble system matrix ...
14:16 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:16 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:16 DiffusionOperatorP1: Determine global dofs ...
14:16 DiffusionOperatorP1: Boundary treatment ...
14:16 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;24]" time="0.047599077224731445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;25]" time="0.04764604568481445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;26]" time="0.047080278396606445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;27]" time="0.0419924259185791"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;28]" time="0.04227399826049805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;29]" time="0.04159808158874512"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;30]" time="0.04187488555908203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;31]" time="0.042964935302734375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;32]" time="0.14333605766296387"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;33]" time="0.10736489295959473"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;34]" time="0.045029401779174805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;35]" time="0.10740780830383301"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;36]" time="0.0477139949798584"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;0]" time="0.016301870346069336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;1]" time="0.017215967178344727"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;2]" time="0.12446784973144531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;3]" time="0.19790101051330566"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;4]" time="0.036948204040527344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;5]" time="0.014300823211669922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;6]" time="0.014786243438720703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;7]" time="0.21572566032409668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;8]" time="1.4587137699127197"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;9]" time="0.24485182762145996"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;10]" time="0.031882286071777344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;11]" time="0.36571598052978516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;12]" time="0.05405068397521973"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;13]" time="0.19934487342834473"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;14]" time="0.35564637184143066"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;15]" time="0.6006736755371094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;16]" time="0.7057600021362305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;17]" time="0.042024850845336914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;18]" time="0.043952226638793945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;19]" time="1.396472454071045"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;20]" time="4.37917160987854"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;21]" time="10.264357328414917"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;22]" time="0.014648675918579102"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;23]" time="0.014547348022460938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;24]" time="3.575378656387329"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;25]" time="50.50082874298096"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;26]" time="7.244946002960205"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;0]" time="0.016603946685791016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;1]" time="0.017526626586914062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;2]" time="0.13029217720031738"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;3]" time="0.20011520385742188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;4]" time="0.03707575798034668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;5]" time="0.014626026153564453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;6]" time="0.015278100967407227"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;7]" time="0.2172689437866211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;8]" time="1.501878023147583"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;9]" time="0.26346755027770996"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;10]" time="0.03168916702270508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;11]" time="0.36417436599731445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;12]" time="0.05436372756958008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;13]" time="0.19896602630615234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;14]" time="0.3548238277435303"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;15]" time="0.5952436923980713"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;16]" time="0.6841511726379395"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;17]" time="0.0422825813293457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;18]" time="0.04315519332885742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;19]" time="1.4096252918243408"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;20]" time="4.357398748397827"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;21]" time="9.72034478187561"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;22]" time="0.01533961296081543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;23]" time="0.015855073928833008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;24]" time="3.5626213550567627"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;25]" time="49.83474779129028"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;26]" time="7.147234916687012"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;0]" time="0.015624046325683594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;1]" time="0.016063690185546875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;2]" time="0.1239614486694336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;3]" time="0.19568204879760742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;4]" time="0.03502082824707031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;5]" time="0.013051509857177734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;6]" time="0.013098955154418945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;7]" time="0.20991969108581543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;8]" time="1.4490058422088623"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;9]" time="0.24728846549987793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;10]" time="0.032546281814575195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;11]" time="0.3655996322631836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;12]" time="0.054021596908569336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;13]" time="0.1992642879486084"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;14]" time="0.3521389961242676"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;15]" time="0.5939233303070068"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;16]" time="0.6769821643829346"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;17]" time="0.04223990440368652"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;18]" time="0.04230237007141113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;19]" time="1.402331829071045"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;20]" time="4.211327791213989"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;21]" time="9.769391298294067"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;22]" time="0.015073299407958984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;23]" time="0.015816688537597656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;24]" time="3.567833662033081"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;25]" time="50.33089303970337"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;26]" time="7.239752292633057"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;0]" time="0.26406407356262207"><system-err>18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 L2ProductP1: Integrate the products of the shape functions on each element
18:21 L2ProductP1: Determine global dofs ...
18:21 L2ProductP1: Boundary treatment ...
18:21 L2ProductP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 L2ProductP1: Integrate the products of the shape functions on each element
18:21 L2ProductP1: Determine global dofs ...
18:21 L2ProductP1: Boundary treatment ...
18:21 L2ProductP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;1]" time="0.2647576332092285"><system-err>18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 L2ProductP1: Integrate the products of the shape functions on each element
18:21 L2ProductP1: Determine global dofs ...
18:21 L2ProductP1: Boundary treatment ...
18:21 L2ProductP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 L2ProductP1: Integrate the products of the shape functions on each element
18:21 L2ProductP1: Determine global dofs ...
18:21 L2ProductP1: Boundary treatment ...
18:21 L2ProductP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;2]" time="0.26045727729797363"><system-err>18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 L2ProductP1: Integrate the products of the shape functions on each element
18:21 L2ProductP1: Determine global dofs ...
18:21 L2ProductP1: Boundary treatment ...
18:21 L2ProductP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
18:21 L2ProductP1: Integrate the products of the shape functions on each element
18:21 L2ProductP1: Determine global dofs ...
18:21 L2ProductP1: Boundary treatment ...
18:21 L2ProductP1: Assemble system matrix ...
18:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:21 DiffusionOperatorP1: Determine global dofs ...
18:21 DiffusionOperatorP1: Boundary treatment ...
18:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;3]" time="0.2615954875946045"><system-err>18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 L2ProductP1: Integrate the products of the shape functions on each element
18:22 L2ProductP1: Determine global dofs ...
18:22 L2ProductP1: Boundary treatment ...
18:22 L2ProductP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 L2ProductP1: Integrate the products of the shape functions on each element
18:22 L2ProductP1: Determine global dofs ...
18:22 L2ProductP1: Boundary treatment ...
18:22 L2ProductP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;4]" time="0.2547173500061035"><system-err>18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 L2ProductP1: Integrate the products of the shape functions on each element
18:22 L2ProductP1: Determine global dofs ...
18:22 L2ProductP1: Boundary treatment ...
18:22 L2ProductP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 L2ProductP1: Integrate the products of the shape functions on each element
18:22 L2ProductP1: Determine global dofs ...
18:22 L2ProductP1: Boundary treatment ...
18:22 L2ProductP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;5]" time="0.2555389404296875"><system-err>18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 L2ProductP1: Integrate the products of the shape functions on each element
18:22 L2ProductP1: Determine global dofs ...
18:22 L2ProductP1: Boundary treatment ...
18:22 L2ProductP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 L2ProductP1: Integrate the products of the shape functions on each element
18:22 L2ProductP1: Determine global dofs ...
18:22 L2ProductP1: Boundary treatment ...
18:22 L2ProductP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;6]" time="0.2577788829803467"><system-err>18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 L2ProductP1: Integrate the products of the shape functions on each element
18:22 L2ProductP1: Determine global dofs ...
18:22 L2ProductP1: Boundary treatment ...
18:22 L2ProductP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
18:22 L2ProductP1: Integrate the products of the shape functions on each element
18:22 L2ProductP1: Determine global dofs ...
18:22 L2ProductP1: Boundary treatment ...
18:22 L2ProductP1: Assemble system matrix ...
18:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:22 DiffusionOperatorP1: Determine global dofs ...
18:22 DiffusionOperatorP1: Boundary treatment ...
18:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;7]" time="0.2587611675262451"><system-err>18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 L2ProductP1: Integrate the products of the shape functions on each element
18:23 L2ProductP1: Determine global dofs ...
18:23 L2ProductP1: Boundary treatment ...
18:23 L2ProductP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 L2ProductP1: Integrate the products of the shape functions on each element
18:23 L2ProductP1: Determine global dofs ...
18:23 L2ProductP1: Boundary treatment ...
18:23 L2ProductP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;8]" time="0.25743842124938965"><system-err>18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 L2ProductP1: Integrate the products of the shape functions on each element
18:23 L2ProductP1: Determine global dofs ...
18:23 L2ProductP1: Boundary treatment ...
18:23 L2ProductP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 L2ProductP1: Integrate the products of the shape functions on each element
18:23 L2ProductP1: Determine global dofs ...
18:23 L2ProductP1: Boundary treatment ...
18:23 L2ProductP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;9]" time="0.25871920585632324"><system-err>18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 L2ProductP1: Integrate the products of the shape functions on each element
18:23 L2ProductP1: Determine global dofs ...
18:23 L2ProductP1: Boundary treatment ...
18:23 L2ProductP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 L2ProductP1: Integrate the products of the shape functions on each element
18:23 L2ProductP1: Determine global dofs ...
18:23 L2ProductP1: Boundary treatment ...
18:23 L2ProductP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;10]" time="0.2623167037963867"><system-err>18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 L2ProductP1: Integrate the products of the shape functions on each element
18:23 L2ProductP1: Determine global dofs ...
18:23 L2ProductP1: Boundary treatment ...
18:23 L2ProductP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
18:23 L2ProductP1: Integrate the products of the shape functions on each element
18:23 L2ProductP1: Determine global dofs ...
18:23 L2ProductP1: Boundary treatment ...
18:23 L2ProductP1: Assemble system matrix ...
18:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:23 DiffusionOperatorP1: Determine global dofs ...
18:23 DiffusionOperatorP1: Boundary treatment ...
18:23 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;11]" time="0.2629690170288086"><system-err>18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 L2ProductP1: Integrate the products of the shape functions on each element
18:24 L2ProductP1: Determine global dofs ...
18:24 L2ProductP1: Boundary treatment ...
18:24 L2ProductP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 L2ProductP1: Integrate the products of the shape functions on each element
18:24 L2ProductP1: Determine global dofs ...
18:24 L2ProductP1: Boundary treatment ...
18:24 L2ProductP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;12]" time="0.24093985557556152"><system-err>18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 L2ProductP1: Integrate the products of the shape functions on each element
18:24 L2ProductP1: Determine global dofs ...
18:24 L2ProductP1: Boundary treatment ...
18:24 L2ProductP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 L2ProductP1: Integrate the products of the shape functions on each element
18:24 L2ProductP1: Determine global dofs ...
18:24 L2ProductP1: Boundary treatment ...
18:24 L2ProductP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;13]" time="0.23617768287658691"><system-err>18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 L2ProductP1: Integrate the products of the shape functions on each element
18:24 L2ProductP1: Determine global dofs ...
18:24 L2ProductP1: Boundary treatment ...
18:24 L2ProductP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 L2ProductP1: Integrate the products of the shape functions on each element
18:24 L2ProductP1: Determine global dofs ...
18:24 L2ProductP1: Boundary treatment ...
18:24 L2ProductP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;14]" time="0.2574269771575928"><system-err>18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 L2ProductP1: Integrate the products of the shape functions on each element
18:24 L2ProductP1: Determine global dofs ...
18:24 L2ProductP1: Boundary treatment ...
18:24 L2ProductP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
18:24 L2ProductP1: Integrate the products of the shape functions on each element
18:24 L2ProductP1: Determine global dofs ...
18:24 L2ProductP1: Boundary treatment ...
18:24 L2ProductP1: Assemble system matrix ...
18:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:24 DiffusionOperatorP1: Determine global dofs ...
18:24 DiffusionOperatorP1: Boundary treatment ...
18:24 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;15]" time="0.2620053291320801"><system-err>18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 L2ProductP1: Integrate the products of the shape functions on each element
18:25 L2ProductP1: Determine global dofs ...
18:25 L2ProductP1: Boundary treatment ...
18:25 L2ProductP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 L2ProductP1: Integrate the products of the shape functions on each element
18:25 L2ProductP1: Determine global dofs ...
18:25 L2ProductP1: Boundary treatment ...
18:25 L2ProductP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;16]" time="0.21939897537231445"><system-err>18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 L2ProductP1: Integrate the products of the shape functions on each element
18:25 L2ProductP1: Determine global dofs ...
18:25 L2ProductP1: Boundary treatment ...
18:25 L2ProductP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 L2ProductP1: Integrate the products of the shape functions on each element
18:25 L2ProductP1: Determine global dofs ...
18:25 L2ProductP1: Boundary treatment ...
18:25 L2ProductP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;17]" time="0.21909403800964355"><system-err>18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 L2ProductP1: Integrate the products of the shape functions on each element
18:25 L2ProductP1: Determine global dofs ...
18:25 L2ProductP1: Boundary treatment ...
18:25 L2ProductP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 L2ProductP1: Integrate the products of the shape functions on each element
18:25 L2ProductP1: Determine global dofs ...
18:25 L2ProductP1: Boundary treatment ...
18:25 L2ProductP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;18]" time="0.26724696159362793"><system-err>18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 L2ProductP1: Integrate the products of the shape functions on each element
18:25 L2ProductP1: Determine global dofs ...
18:25 L2ProductP1: Boundary treatment ...
18:25 L2ProductP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
18:25 L2ProductP1: Integrate the products of the shape functions on each element
18:25 L2ProductP1: Determine global dofs ...
18:25 L2ProductP1: Boundary treatment ...
18:25 L2ProductP1: Assemble system matrix ...
18:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:25 DiffusionOperatorP1: Determine global dofs ...
18:25 DiffusionOperatorP1: Boundary treatment ...
18:25 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;19]" time="0.26415491104125977"><system-err>18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 L2ProductP1: Integrate the products of the shape functions on each element
18:26 L2ProductP1: Determine global dofs ...
18:26 L2ProductP1: Boundary treatment ...
18:26 L2ProductP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 L2ProductP1: Integrate the products of the shape functions on each element
18:26 L2ProductP1: Determine global dofs ...
18:26 L2ProductP1: Boundary treatment ...
18:26 L2ProductP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;20]" time="0.2579464912414551"><system-err>18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 L2ProductP1: Integrate the products of the shape functions on each element
18:26 L2ProductP1: Determine global dofs ...
18:26 L2ProductP1: Boundary treatment ...
18:26 L2ProductP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 L2ProductP1: Integrate the products of the shape functions on each element
18:26 L2ProductP1: Determine global dofs ...
18:26 L2ProductP1: Boundary treatment ...
18:26 L2ProductP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;21]" time="0.2587153911590576"><system-err>18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 L2ProductP1: Integrate the products of the shape functions on each element
18:26 L2ProductP1: Determine global dofs ...
18:26 L2ProductP1: Boundary treatment ...
18:26 L2ProductP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 L2ProductP1: Integrate the products of the shape functions on each element
18:26 L2ProductP1: Determine global dofs ...
18:26 L2ProductP1: Boundary treatment ...
18:26 L2ProductP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;22]" time="0.25592851638793945"><system-err>18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 L2ProductP1: Integrate the products of the shape functions on each element
18:26 L2ProductP1: Determine global dofs ...
18:26 L2ProductP1: Boundary treatment ...
18:26 L2ProductP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
18:26 L2ProductP1: Integrate the products of the shape functions on each element
18:26 L2ProductP1: Determine global dofs ...
18:26 L2ProductP1: Boundary treatment ...
18:26 L2ProductP1: Assemble system matrix ...
18:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:26 DiffusionOperatorP1: Determine global dofs ...
18:26 DiffusionOperatorP1: Boundary treatment ...
18:26 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;23]" time="0.26373934745788574"><system-err>18:27 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:27 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:27 DiffusionOperatorP1: Determine global dofs ...
18:27 DiffusionOperatorP1: Boundary treatment ...
18:27 DiffusionOperatorP1: Assemble system matrix ...
18:27 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:27 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:27 DiffusionOperatorP1: Determine global dofs ...
18:27 DiffusionOperatorP1: Boundary treatment ...
18:27 DiffusionOperatorP1: Assemble system matrix ...
18:27 L2ProductP1: Integrate the products of the shape functions on each element
18:27 L2ProductP1: Determine global dofs ...
18:27 L2ProductP1: Boundary treatment ...
18:27 L2ProductP1: Assemble system matrix ...
18:27 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:27 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:27 DiffusionOperatorP1: Determine global dofs ...
18:27 DiffusionOperatorP1: Boundary treatment ...
18:27 DiffusionOperatorP1: Assemble system matrix ...
18:27 L2ProductP1: Integrate the products of the shape functions on each element
18:27 L2ProductP1: Determine global dofs ...
18:27 L2ProductP1: Boundary treatment ...
18:27 L2ProductP1: Assemble system matrix ...
18:27 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:27 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:27 DiffusionOperatorP1: Determine global dofs ...
18:27 DiffusionOperatorP1: Boundary treatment ...
18:27 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;24]" time="0.2625584602355957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;25]" time="0.2589714527130127"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;26]" time="0.2604491710662842"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;27]" time="0.20608258247375488"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;28]" time="0.20682525634765625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;29]" time="0.21332716941833496"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;30]" time="0.21310782432556152"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;31]" time="0.2161264419555664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;32]" time="0.7503581047058105"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;33]" time="0.5686135292053223"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;34]" time="0.22602200508117676"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;35]" time="0.5632810592651367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;36]" time="0.25954127311706543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;0]" time="0.004148006439208984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;1]" time="0.0014464855194091797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;2]" time="0.0058710575103759766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;3]" time="0.0047779083251953125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;4]" time="0.0051076412200927734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;5]" time="0.0026128292083740234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;6]" time="0.0014159679412841797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;7]" time="0.0055561065673828125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;8]" time="0.01100468635559082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;9]" time="0.01793193817138672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;10]" time="0.00656580924987793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;11]" time="0.002070903778076172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;12]" time="0.01344609260559082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;13]" time="0.00986623764038086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;14]" time="0.011075258255004883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;15]" time="0.0054302215576171875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;16]" time="0.002414703369140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;17]" time="0.009898662567138672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;18]" time="0.042032718658447266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;19]" time="0.04304337501525879"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;20]" time="0.0034902095794677734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;21]" time="0.0025186538696289062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;22]" time="0.014002799987792969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;23]" time="0.1187129020690918"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;24]" time="0.2225494384765625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.004055976867675781"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.002859830856323242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.004854917526245117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.00633692741394043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.006390810012817383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.004788637161254883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0029006004333496094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0029137134552001953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.015481948852539062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.03205060958862305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.10454869270324707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.007126808166503906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.004767656326293945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.008116722106933594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.007056474685668945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.008052825927734375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.01170492172241211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.01195526123046875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.004706144332885742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.003766775131225586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.03864336013793945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.04148578643798828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.13962364196777344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.008144617080688477"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.00413823127746582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.004143714904785156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.03624391555786133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.05990433692932129"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.2103896141052246"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.009974002838134766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004313945770263672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.002950429916381836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.004465818405151367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0063283443450927734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.006531476974487305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.004777669906616211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.002905130386352539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0029077529907226562"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.015459537506103516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.03629302978515625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.10796904563903809"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0072307586669921875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.004888772964477539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.008512496948242188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0070078372955322266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.00818777084350586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.012141704559326172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.013164281845092773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.004741191864013672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.004289388656616211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.040375471115112305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.042230844497680664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.1428220272064209"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.008430719375610352"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.003063678741455078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004091978073120117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.03584098815917969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.05878305435180664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.2081890106201172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.00986790657043457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0043201446533203125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0029277801513671875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.004542827606201172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0063724517822265625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0065155029296875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.004903554916381836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0029778480529785156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.003103971481323242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.018804550170898438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.032120466232299805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.1058354377746582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.007161378860473633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.004881858825683594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.00842738151550293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.006724357604980469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.008054971694946289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.01185464859008789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.01209259033203125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.004698276519775391"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.003833293914794922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.03865694999694824"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.04171442985534668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.13983511924743652"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.008074045181274414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.002995729446411133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004095315933227539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.03524899482727051"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.05871224403381348"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.20578742027282715"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.009585142135620117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0031037330627441406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.002775907516479492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.004465341567993164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0062177181243896484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.006333589553833008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.004688262939453125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0028934478759765625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0029053688049316406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.01528477668762207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.03210592269897461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.10454702377319336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.00698399543762207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.004713296890258789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.008191823959350586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0066263675689697266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.00795125961303711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.011796712875366211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.012057781219482422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.004583120346069336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.003782987594604492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.03832530975341797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.04127049446105957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.14256596565246582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.007995843887329102"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.003038167953491211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.004088640213012695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.03573346138000488"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.059206247329711914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.20987486839294434"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.010404586791992188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.004425764083862305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0030646324157714844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.004792690277099609"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.006806850433349609"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.006703853607177734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.005099773406982422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0030083656311035156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0031023025512695312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.015431404113769531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.03348422050476074"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.10670757293701172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.007111310958862305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.004832267761230469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.008485078811645508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0067026615142822266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.008157491683959961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.01196599006652832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.012085914611816406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.004817485809326172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004009246826171875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.03993058204650879"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.04457592964172363"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.14038586616516113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.008307695388793945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.00414586067199707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.00434422492980957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.03573918342590332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.05895495414733887"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.20947766304016113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.010150909423828125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0033066272735595703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0029420852661132812"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0047740936279296875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.006779670715332031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0068511962890625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.005022764205932617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.003094196319580078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0030498504638671875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.01551508903503418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.03151297569274902"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.10609936714172363"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.00704193115234375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.004950523376464844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.008924484252929688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.006832122802734375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.008228063583374023"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.012504816055297852"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.013213634490966797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.003864765167236328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0038802623748779297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.03942728042602539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.042037248611450195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.14099717140197754"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.010541200637817383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0039196014404296875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004298686981201172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.03561687469482422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.0586698055267334"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.20904803276062012"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.009645938873291016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0031409263610839844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0027360916137695312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.004473447799682617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.006273031234741211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.006443500518798828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.00475311279296875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0029087066650390625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.002941131591796875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.015434980392456055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.032341957092285156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.10521936416625977"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0069773197174072266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0048961639404296875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.00923466682434082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0070514678955078125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.008082151412963867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.012084007263183594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.013220787048339844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.003873586654663086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0039730072021484375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.03892087936401367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.04243350028991699"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.14068865776062012"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.008204936981201172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0041620731353759766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004156589508056641"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.03515148162841797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.061391592025756836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.20984578132629395"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.009928464889526367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0032072067260742188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.003285646438598633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.004753589630126953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.006528139114379883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.006624698638916016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.004927396774291992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0030808448791503906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.003108978271484375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.015674829483032227"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.031522512435913086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.1120753288269043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.007052183151245117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.004996061325073242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.008570194244384766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.00689387321472168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.010146141052246094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.012326478958129883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.013081789016723633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0037529468536376953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.003850698471069336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.03864765167236328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.04178786277770996"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.13975262641906738"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.00783991813659668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0029702186584472656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0040128231048583984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.03565835952758789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.05917811393737793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.20771241188049316"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.009912729263305664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.00434112548828125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0029532909393310547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0047338008880615234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.006515026092529297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0066432952880859375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.004945516586303711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0029785633087158203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0030591487884521484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.015600442886352539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.03594326972961426"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.10836100578308105"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.007120370864868164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.005068302154541016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.008492708206176758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0073201656341552734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.008546113967895508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.012239217758178711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.01395273208618164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.00508427619934082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.004129171371459961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.03954792022705078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.0430607795715332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.14205574989318848"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.008177757263183594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.004248380661010742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0042340755462646484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.035310983657836914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.059182167053222656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.2064352035522461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.009504556655883789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="178" name="test_project_array" time="0.0020575523376464844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="188" name="test_project_array_with_product" time="0.0025594234466552734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;0]" time="0.0019681453704833984"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;1]" time="0.0017397403717041016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;2]" time="0.0018451213836669922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;3]" time="0.09923028945922852"><system-err>18:40 gram_schmidt: Orthonormalizing vector 31 again
18:40 gram_schmidt: Removing linear dependent vector 32
18:40 gram_schmidt: Removing linear dependent vector 33
18:40 gram_schmidt: Removing linear dependent vector 34
18:40 gram_schmidt: Removing linear dependent vector 35
18:40 gram_schmidt: Removing linear dependent vector 36
18:40 gram_schmidt: Removing linear dependent vector 37
18:40 gram_schmidt: Removing linear dependent vector 38
18:40 gram_schmidt: Removing linear dependent vector 39
18:40 gram_schmidt: Removing linear dependent vector 40
18:40 gram_schmidt: Removing linear dependent vector 41
18:40 gram_schmidt: Removing linear dependent vector 42
18:40 gram_schmidt: Orthonormalizing vector 31 again
18:40 gram_schmidt: Removing linear dependent vector 32
18:40 gram_schmidt: Removing linear dependent vector 33
18:40 gram_schmidt: Removing linear dependent vector 34
18:40 gram_schmidt: Removing linear dependent vector 35
18:40 gram_schmidt: Removing linear dependent vector 36
18:40 gram_schmidt: Removing linear dependent vector 37
18:40 gram_schmidt: Removing linear dependent vector 38
18:40 gram_schmidt: Removing linear dependent vector 39
18:40 gram_schmidt: Removing linear dependent vector 40
18:40 gram_schmidt: Removing linear dependent vector 41
18:40 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;4]" time="0.020882129669189453"><system-err>18:40 gram_schmidt: Removing vector 0 of norm 0.0
18:40 gram_schmidt: Removing vector 1 of norm 0.0
18:40 gram_schmidt: Removing vector 2 of norm 0.0
18:40 gram_schmidt: Removing vector 3 of norm 0.0
18:40 gram_schmidt: Removing vector 4 of norm 0.0
18:40 gram_schmidt: Removing vector 5 of norm 0.0
18:40 gram_schmidt: Removing vector 6 of norm 0.0
18:40 gram_schmidt: Removing vector 7 of norm 0.0
18:40 gram_schmidt: Removing vector 8 of norm 0.0
18:40 gram_schmidt: Removing vector 9 of norm 0.0
18:40 gram_schmidt: Removing vector 10 of norm 0.0
18:40 gram_schmidt: Removing vector 11 of norm 0.0
18:40 gram_schmidt: Removing vector 12 of norm 0.0
18:40 gram_schmidt: Removing vector 13 of norm 0.0
18:40 gram_schmidt: Removing vector 14 of norm 0.0
18:40 gram_schmidt: Removing vector 15 of norm 0.0
18:40 gram_schmidt: Removing vector 16 of norm 0.0
18:40 gram_schmidt: Removing vector 17 of norm 0.0
18:40 gram_schmidt: Removing vector 18 of norm 0.0
18:40 gram_schmidt: Removing vector 19 of norm 0.0
18:40 gram_schmidt: Removing vector 20 of norm 0.0
18:40 gram_schmidt: Removing vector 21 of norm 0.0
18:40 gram_schmidt: Removing vector 22 of norm 0.0
18:40 gram_schmidt: Removing vector 23 of norm 0.0
18:40 gram_schmidt: Removing vector 24 of norm 0.0
18:40 gram_schmidt: Removing vector 25 of norm 0.0
18:40 gram_schmidt: Removing vector 26 of norm 0.0
18:40 gram_schmidt: Removing vector 27 of norm 0.0
18:40 gram_schmidt: Removing vector 28 of norm 0.0
18:40 gram_schmidt: Removing vector 29 of norm 0.0
18:40 gram_schmidt: Removing vector 30 of norm 0.0
18:40 gram_schmidt: Removing vector 31 of norm 0.0
18:40 gram_schmidt: Removing vector 32 of norm 0.0
18:40 gram_schmidt: Removing vector 33 of norm 0.0
18:40 gram_schmidt: Removing vector 34 of norm 0.0
18:40 gram_schmidt: Removing vector 35 of norm 0.0
18:40 gram_schmidt: Removing vector 36 of norm 0.0
18:40 gram_schmidt: Removing vector 37 of norm 0.0
18:40 gram_schmidt: Removing vector 38 of norm 0.0
18:40 gram_schmidt: Removing vector 39 of norm 0.0
18:40 gram_schmidt: Removing vector 40 of norm 0.0
18:40 gram_schmidt: Removing vector 41 of norm 0.0
18:40 gram_schmidt: Removing vector 42 of norm 0.0
18:40 gram_schmidt: Removing vector 43 of norm 0.0
18:40 gram_schmidt: Removing vector 44 of norm 0.0
18:40 gram_schmidt: Removing vector 45 of norm 0.0
18:40 gram_schmidt: Removing vector 46 of norm 0.0
18:40 gram_schmidt: Removing vector 47 of norm 0.0
18:40 gram_schmidt: Removing vector 48 of norm 0.0
18:40 gram_schmidt: Removing vector 49 of norm 0.0
18:40 gram_schmidt: Removing vector 50 of norm 0.0
18:40 gram_schmidt: Removing vector 51 of norm 0.0
18:40 gram_schmidt: Removing vector 52 of norm 0.0
18:40 gram_schmidt: Removing vector 53 of norm 0.0
18:40 gram_schmidt: Removing vector 54 of norm 0.0
18:40 gram_schmidt: Removing vector 55 of norm 0.0
18:40 gram_schmidt: Removing vector 56 of norm 0.0
18:40 gram_schmidt: Removing vector 57 of norm 0.0
18:40 gram_schmidt: Removing vector 58 of norm 0.0
18:40 gram_schmidt: Removing vector 59 of norm 0.0
18:40 gram_schmidt: Removing vector 60 of norm 0.0
18:40 gram_schmidt: Removing vector 61 of norm 0.0
18:40 gram_schmidt: Removing vector 62 of norm 0.0
18:40 gram_schmidt: Removing vector 63 of norm 0.0
18:40 gram_schmidt: Removing vector 64 of norm 0.0
18:40 gram_schmidt: Removing vector 65 of norm 0.0
18:40 gram_schmidt: Removing vector 66 of norm 0.0
18:40 gram_schmidt: Removing vector 67 of norm 0.0
18:40 gram_schmidt: Removing vector 68 of norm 0.0
18:40 gram_schmidt: Removing vector 69 of norm 0.0
18:40 gram_schmidt: Removing vector 70 of norm 0.0
18:40 gram_schmidt: Removing vector 71 of norm 0.0
18:40 gram_schmidt: Removing vector 72 of norm 0.0
18:40 gram_schmidt: Removing vector 73 of norm 0.0
18:40 gram_schmidt: Removing vector 74 of norm 0.0
18:40 gram_schmidt: Removing vector 75 of norm 0.0
18:40 gram_schmidt: Removing vector 76 of norm 0.0
18:40 gram_schmidt: Removing vector 77 of norm 0.0
18:40 gram_schmidt: Removing vector 78 of norm 0.0
18:40 gram_schmidt: Removing vector 79 of norm 0.0
18:40 gram_schmidt: Removing vector 80 of norm 0.0
18:40 gram_schmidt: Removing vector 81 of norm 0.0
18:40 gram_schmidt: Removing vector 82 of norm 0.0
18:40 gram_schmidt: Removing vector 83 of norm 0.0
18:40 gram_schmidt: Removing vector 84 of norm 0.0
18:40 gram_schmidt: Removing vector 85 of norm 0.0
18:40 gram_schmidt: Removing vector 86 of norm 0.0
18:40 gram_schmidt: Removing vector 87 of norm 0.0
18:40 gram_schmidt: Removing vector 88 of norm 0.0
18:40 gram_schmidt: Removing vector 89 of norm 0.0
18:40 gram_schmidt: Removing vector 90 of norm 0.0
18:40 gram_schmidt: Removing vector 91 of norm 0.0
18:40 gram_schmidt: Removing vector 92 of norm 0.0
18:40 gram_schmidt: Removing vector 93 of norm 0.0
18:40 gram_schmidt: Removing vector 94 of norm 0.0
18:40 gram_schmidt: Removing vector 95 of norm 0.0
18:40 gram_schmidt: Removing vector 96 of norm 0.0
18:40 gram_schmidt: Removing vector 97 of norm 0.0
18:40 gram_schmidt: Removing vector 98 of norm 0.0
18:40 gram_schmidt: Removing vector 99 of norm 0.0
18:40 gram_schmidt: Removing vector 100 of norm 0.0
18:40 gram_schmidt: Removing vector 101 of norm 0.0
18:40 gram_schmidt: Removing vector 0 of norm 0.0
18:40 gram_schmidt: Removing vector 1 of norm 0.0
18:40 gram_schmidt: Removing vector 2 of norm 0.0
18:40 gram_schmidt: Removing vector 3 of norm 0.0
18:40 gram_schmidt: Removing vector 4 of norm 0.0
18:40 gram_schmidt: Removing vector 5 of norm 0.0
18:40 gram_schmidt: Removing vector 6 of norm 0.0
18:40 gram_schmidt: Removing vector 7 of norm 0.0
18:40 gram_schmidt: Removing vector 8 of norm 0.0
18:40 gram_schmidt: Removing vector 9 of norm 0.0
18:40 gram_schmidt: Removing vector 10 of norm 0.0
18:40 gram_schmidt: Removing vector 11 of norm 0.0
18:40 gram_schmidt: Removing vector 12 of norm 0.0
18:40 gram_schmidt: Removing vector 13 of norm 0.0
18:40 gram_schmidt: Removing vector 14 of norm 0.0
18:40 gram_schmidt: Removing vector 15 of norm 0.0
18:40 gram_schmidt: Removing vector 16 of norm 0.0
18:40 gram_schmidt: Removing vector 17 of norm 0.0
18:40 gram_schmidt: Removing vector 18 of norm 0.0
18:40 gram_schmidt: Removing vector 19 of norm 0.0
18:40 gram_schmidt: Removing vector 20 of norm 0.0
18:40 gram_schmidt: Removing vector 21 of norm 0.0
18:40 gram_schmidt: Removing vector 22 of norm 0.0
18:40 gram_schmidt: Removing vector 23 of norm 0.0
18:40 gram_schmidt: Removing vector 24 of norm 0.0
18:40 gram_schmidt: Removing vector 25 of norm 0.0
18:40 gram_schmidt: Removing vector 26 of norm 0.0
18:40 gram_schmidt: Removing vector 27 of norm 0.0
18:40 gram_schmidt: Removing vector 28 of norm 0.0
18:40 gram_schmidt: Removing vector 29 of norm 0.0
18:40 gram_schmidt: Removing vector 30 of norm 0.0
18:40 gram_schmidt: Removing vector 31 of norm 0.0
18:40 gram_schmidt: Removing vector 32 of norm 0.0
18:40 gram_schmidt: Removing vector 33 of norm 0.0
18:40 gram_schmidt: Removing vector 34 of norm 0.0
18:40 gram_schmidt: Removing vector 35 of norm 0.0
18:40 gram_schmidt: Removing vector 36 of norm 0.0
18:40 gram_schmidt: Removing vector 37 of norm 0.0
18:40 gram_schmidt: Removing vector 38 of norm 0.0
18:40 gram_schmidt: Removing vector 39 of norm 0.0
18:40 gram_schmidt: Removing vector 40 of norm 0.0
18:40 gram_schmidt: Removing vector 41 of norm 0.0
18:40 gram_schmidt: Removing vector 42 of norm 0.0
18:40 gram_schmidt: Removing vector 43 of norm 0.0
18:40 gram_schmidt: Removing vector 44 of norm 0.0
18:40 gram_schmidt: Removing vector 45 of norm 0.0
18:40 gram_schmidt: Removing vector 46 of norm 0.0
18:40 gram_schmidt: Removing vector 47 of norm 0.0
18:40 gram_schmidt: Removing vector 48 of norm 0.0
18:40 gram_schmidt: Removing vector 49 of norm 0.0
18:40 gram_schmidt: Removing vector 50 of norm 0.0
18:40 gram_schmidt: Removing vector 51 of norm 0.0
18:40 gram_schmidt: Removing vector 52 of norm 0.0
18:40 gram_schmidt: Removing vector 53 of norm 0.0
18:40 gram_schmidt: Removing vector 54 of norm 0.0
18:40 gram_schmidt: Removing vector 55 of norm 0.0
18:40 gram_schmidt: Removing vector 56 of norm 0.0
18:40 gram_schmidt: Removing vector 57 of norm 0.0
18:40 gram_schmidt: Removing vector 58 of norm 0.0
18:40 gram_schmidt: Removing vector 59 of norm 0.0
18:40 gram_schmidt: Removing vector 60 of norm 0.0
18:40 gram_schmidt: Removing vector 61 of norm 0.0
18:40 gram_schmidt: Removing vector 62 of norm 0.0
18:40 gram_schmidt: Removing vector 63 of norm 0.0
18:40 gram_schmidt: Removing vector 64 of norm 0.0
18:40 gram_schmidt: Removing vector 65 of norm 0.0
18:40 gram_schmidt: Removing vector 66 of norm 0.0
18:40 gram_schmidt: Removing vector 67 of norm 0.0
18:40 gram_schmidt: Removing vector 68 of norm 0.0
18:40 gram_schmidt: Removing vector 69 of norm 0.0
18:40 gram_schmidt: Removing vector 70 of norm 0.0
18:40 gram_schmidt: Removing vector 71 of norm 0.0
18:40 gram_schmidt: Removing vector 72 of norm 0.0
18:40 gram_schmidt: Removing vector 73 of norm 0.0
18:40 gram_schmidt: Removing vector 74 of norm 0.0
18:40 gram_schmidt: Removing vector 75 of norm 0.0
18:40 gram_schmidt: Removing vector 76 of norm 0.0
18:40 gram_schmidt: Removing vector 77 of norm 0.0
18:40 gram_schmidt: Removing vector 78 of norm 0.0
18:40 gram_schmidt: Removing vector 79 of norm 0.0
18:40 gram_schmidt: Removing vector 80 of norm 0.0
18:40 gram_schmidt: Removing vector 81 of norm 0.0
18:40 gram_schmidt: Removing vector 82 of norm 0.0
18:40 gram_schmidt: Removing vector 83 of norm 0.0
18:40 gram_schmidt: Removing vector 84 of norm 0.0
18:40 gram_schmidt: Removing vector 85 of norm 0.0
18:40 gram_schmidt: Removing vector 86 of norm 0.0
18:40 gram_schmidt: Removing vector 87 of norm 0.0
18:40 gram_schmidt: Removing vector 88 of norm 0.0
18:40 gram_schmidt: Removing vector 89 of norm 0.0
18:40 gram_schmidt: Removing vector 90 of norm 0.0
18:40 gram_schmidt: Removing vector 91 of norm 0.0
18:40 gram_schmidt: Removing vector 92 of norm 0.0
18:40 gram_schmidt: Removing vector 93 of norm 0.0
18:40 gram_schmidt: Removing vector 94 of norm 0.0
18:40 gram_schmidt: Removing vector 95 of norm 0.0
18:40 gram_schmidt: Removing vector 96 of norm 0.0
18:40 gram_schmidt: Removing vector 97 of norm 0.0
18:40 gram_schmidt: Removing vector 98 of norm 0.0
18:40 gram_schmidt: Removing vector 99 of norm 0.0
18:40 gram_schmidt: Removing vector 100 of norm 0.0
18:40 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;5]" time="0.0026564598083496094"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;6]" time="0.001798391342163086"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;7]" time="0.0022783279418945312"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;8]" time="0.19099783897399902"><system-err>18:40 gram_schmidt: Orthonormalizing vector 31 again
18:40 gram_schmidt: Removing linear dependent vector 32
18:40 gram_schmidt: Removing linear dependent vector 33
18:40 gram_schmidt: Removing linear dependent vector 34
18:40 gram_schmidt: Removing linear dependent vector 35
18:40 gram_schmidt: Removing linear dependent vector 36
18:40 gram_schmidt: Removing linear dependent vector 37
18:40 gram_schmidt: Removing linear dependent vector 38
18:40 gram_schmidt: Removing linear dependent vector 39
18:40 gram_schmidt: Removing linear dependent vector 40
18:40 gram_schmidt: Removing linear dependent vector 41
18:40 gram_schmidt: Removing linear dependent vector 42
18:40 gram_schmidt: Orthonormalizing vector 31 again
18:40 gram_schmidt: Removing linear dependent vector 32
18:40 gram_schmidt: Removing linear dependent vector 33
18:40 gram_schmidt: Removing linear dependent vector 34
18:40 gram_schmidt: Removing linear dependent vector 35
18:40 gram_schmidt: Removing linear dependent vector 36
18:40 gram_schmidt: Removing linear dependent vector 37
18:40 gram_schmidt: Removing linear dependent vector 38
18:40 gram_schmidt: Removing linear dependent vector 39
18:40 gram_schmidt: Removing linear dependent vector 40
18:40 gram_schmidt: Removing linear dependent vector 41
18:40 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;9]" time="0.02718043327331543"><system-err>18:40 gram_schmidt: Removing vector 0 of norm 0.0
18:40 gram_schmidt: Removing vector 1 of norm 0.0
18:40 gram_schmidt: Removing vector 2 of norm 0.0
18:40 gram_schmidt: Removing vector 3 of norm 0.0
18:40 gram_schmidt: Removing vector 4 of norm 0.0
18:40 gram_schmidt: Removing vector 5 of norm 0.0
18:40 gram_schmidt: Removing vector 6 of norm 0.0
18:40 gram_schmidt: Removing vector 7 of norm 0.0
18:40 gram_schmidt: Removing vector 8 of norm 0.0
18:40 gram_schmidt: Removing vector 9 of norm 0.0
18:40 gram_schmidt: Removing vector 10 of norm 0.0
18:40 gram_schmidt: Removing vector 11 of norm 0.0
18:40 gram_schmidt: Removing vector 12 of norm 0.0
18:40 gram_schmidt: Removing vector 13 of norm 0.0
18:40 gram_schmidt: Removing vector 14 of norm 0.0
18:40 gram_schmidt: Removing vector 15 of norm 0.0
18:40 gram_schmidt: Removing vector 16 of norm 0.0
18:40 gram_schmidt: Removing vector 17 of norm 0.0
18:40 gram_schmidt: Removing vector 18 of norm 0.0
18:40 gram_schmidt: Removing vector 19 of norm 0.0
18:40 gram_schmidt: Removing vector 20 of norm 0.0
18:40 gram_schmidt: Removing vector 21 of norm 0.0
18:40 gram_schmidt: Removing vector 22 of norm 0.0
18:40 gram_schmidt: Removing vector 23 of norm 0.0
18:40 gram_schmidt: Removing vector 24 of norm 0.0
18:40 gram_schmidt: Removing vector 25 of norm 0.0
18:40 gram_schmidt: Removing vector 26 of norm 0.0
18:40 gram_schmidt: Removing vector 27 of norm 0.0
18:40 gram_schmidt: Removing vector 28 of norm 0.0
18:40 gram_schmidt: Removing vector 29 of norm 0.0
18:40 gram_schmidt: Removing vector 30 of norm 0.0
18:40 gram_schmidt: Removing vector 31 of norm 0.0
18:40 gram_schmidt: Removing vector 32 of norm 0.0
18:40 gram_schmidt: Removing vector 33 of norm 0.0
18:40 gram_schmidt: Removing vector 34 of norm 0.0
18:40 gram_schmidt: Removing vector 35 of norm 0.0
18:40 gram_schmidt: Removing vector 36 of norm 0.0
18:40 gram_schmidt: Removing vector 37 of norm 0.0
18:40 gram_schmidt: Removing vector 38 of norm 0.0
18:40 gram_schmidt: Removing vector 39 of norm 0.0
18:40 gram_schmidt: Removing vector 40 of norm 0.0
18:40 gram_schmidt: Removing vector 41 of norm 0.0
18:40 gram_schmidt: Removing vector 42 of norm 0.0
18:40 gram_schmidt: Removing vector 43 of norm 0.0
18:40 gram_schmidt: Removing vector 44 of norm 0.0
18:40 gram_schmidt: Removing vector 45 of norm 0.0
18:40 gram_schmidt: Removing vector 46 of norm 0.0
18:40 gram_schmidt: Removing vector 47 of norm 0.0
18:40 gram_schmidt: Removing vector 48 of norm 0.0
18:40 gram_schmidt: Removing vector 49 of norm 0.0
18:40 gram_schmidt: Removing vector 50 of norm 0.0
18:40 gram_schmidt: Removing vector 51 of norm 0.0
18:40 gram_schmidt: Removing vector 52 of norm 0.0
18:40 gram_schmidt: Removing vector 53 of norm 0.0
18:40 gram_schmidt: Removing vector 54 of norm 0.0
18:40 gram_schmidt: Removing vector 55 of norm 0.0
18:40 gram_schmidt: Removing vector 56 of norm 0.0
18:40 gram_schmidt: Removing vector 57 of norm 0.0
18:40 gram_schmidt: Removing vector 58 of norm 0.0
18:40 gram_schmidt: Removing vector 59 of norm 0.0
18:40 gram_schmidt: Removing vector 60 of norm 0.0
18:40 gram_schmidt: Removing vector 61 of norm 0.0
18:40 gram_schmidt: Removing vector 62 of norm 0.0
18:40 gram_schmidt: Removing vector 63 of norm 0.0
18:40 gram_schmidt: Removing vector 64 of norm 0.0
18:40 gram_schmidt: Removing vector 65 of norm 0.0
18:40 gram_schmidt: Removing vector 66 of norm 0.0
18:40 gram_schmidt: Removing vector 67 of norm 0.0
18:40 gram_schmidt: Removing vector 68 of norm 0.0
18:40 gram_schmidt: Removing vector 69 of norm 0.0
18:40 gram_schmidt: Removing vector 70 of norm 0.0
18:40 gram_schmidt: Removing vector 71 of norm 0.0
18:40 gram_schmidt: Removing vector 72 of norm 0.0
18:40 gram_schmidt: Removing vector 73 of norm 0.0
18:40 gram_schmidt: Removing vector 74 of norm 0.0
18:40 gram_schmidt: Removing vector 75 of norm 0.0
18:40 gram_schmidt: Removing vector 76 of norm 0.0
18:40 gram_schmidt: Removing vector 77 of norm 0.0
18:40 gram_schmidt: Removing vector 78 of norm 0.0
18:40 gram_schmidt: Removing vector 79 of norm 0.0
18:40 gram_schmidt: Removing vector 80 of norm 0.0
18:40 gram_schmidt: Removing vector 81 of norm 0.0
18:40 gram_schmidt: Removing vector 82 of norm 0.0
18:40 gram_schmidt: Removing vector 83 of norm 0.0
18:40 gram_schmidt: Removing vector 84 of norm 0.0
18:40 gram_schmidt: Removing vector 85 of norm 0.0
18:40 gram_schmidt: Removing vector 86 of norm 0.0
18:40 gram_schmidt: Removing vector 87 of norm 0.0
18:40 gram_schmidt: Removing vector 88 of norm 0.0
18:40 gram_schmidt: Removing vector 89 of norm 0.0
18:40 gram_schmidt: Removing vector 90 of norm 0.0
18:40 gram_schmidt: Removing vector 91 of norm 0.0
18:40 gram_schmidt: Removing vector 92 of norm 0.0
18:40 gram_schmidt: Removing vector 93 of norm 0.0
18:40 gram_schmidt: Removing vector 94 of norm 0.0
18:40 gram_schmidt: Removing vector 95 of norm 0.0
18:40 gram_schmidt: Removing vector 96 of norm 0.0
18:40 gram_schmidt: Removing vector 97 of norm 0.0
18:40 gram_schmidt: Removing vector 98 of norm 0.0
18:40 gram_schmidt: Removing vector 99 of norm 0.0
18:40 gram_schmidt: Removing vector 100 of norm 0.0
18:40 gram_schmidt: Removing vector 101 of norm 0.0
18:40 gram_schmidt: Removing vector 0 of norm 0.0
18:40 gram_schmidt: Removing vector 1 of norm 0.0
18:40 gram_schmidt: Removing vector 2 of norm 0.0
18:40 gram_schmidt: Removing vector 3 of norm 0.0
18:40 gram_schmidt: Removing vector 4 of norm 0.0
18:40 gram_schmidt: Removing vector 5 of norm 0.0
18:40 gram_schmidt: Removing vector 6 of norm 0.0
18:40 gram_schmidt: Removing vector 7 of norm 0.0
18:40 gram_schmidt: Removing vector 8 of norm 0.0
18:40 gram_schmidt: Removing vector 9 of norm 0.0
18:40 gram_schmidt: Removing vector 10 of norm 0.0
18:40 gram_schmidt: Removing vector 11 of norm 0.0
18:40 gram_schmidt: Removing vector 12 of norm 0.0
18:40 gram_schmidt: Removing vector 13 of norm 0.0
18:40 gram_schmidt: Removing vector 14 of norm 0.0
18:40 gram_schmidt: Removing vector 15 of norm 0.0
18:40 gram_schmidt: Removing vector 16 of norm 0.0
18:40 gram_schmidt: Removing vector 17 of norm 0.0
18:40 gram_schmidt: Removing vector 18 of norm 0.0
18:40 gram_schmidt: Removing vector 19 of norm 0.0
18:40 gram_schmidt: Removing vector 20 of norm 0.0
18:40 gram_schmidt: Removing vector 21 of norm 0.0
18:40 gram_schmidt: Removing vector 22 of norm 0.0
18:40 gram_schmidt: Removing vector 23 of norm 0.0
18:40 gram_schmidt: Removing vector 24 of norm 0.0
18:40 gram_schmidt: Removing vector 25 of norm 0.0
18:40 gram_schmidt: Removing vector 26 of norm 0.0
18:40 gram_schmidt: Removing vector 27 of norm 0.0
18:40 gram_schmidt: Removing vector 28 of norm 0.0
18:40 gram_schmidt: Removing vector 29 of norm 0.0
18:40 gram_schmidt: Removing vector 30 of norm 0.0
18:40 gram_schmidt: Removing vector 31 of norm 0.0
18:40 gram_schmidt: Removing vector 32 of norm 0.0
18:40 gram_schmidt: Removing vector 33 of norm 0.0
18:40 gram_schmidt: Removing vector 34 of norm 0.0
18:40 gram_schmidt: Removing vector 35 of norm 0.0
18:40 gram_schmidt: Removing vector 36 of norm 0.0
18:40 gram_schmidt: Removing vector 37 of norm 0.0
18:40 gram_schmidt: Removing vector 38 of norm 0.0
18:40 gram_schmidt: Removing vector 39 of norm 0.0
18:40 gram_schmidt: Removing vector 40 of norm 0.0
18:40 gram_schmidt: Removing vector 41 of norm 0.0
18:40 gram_schmidt: Removing vector 42 of norm 0.0
18:40 gram_schmidt: Removing vector 43 of norm 0.0
18:40 gram_schmidt: Removing vector 44 of norm 0.0
18:40 gram_schmidt: Removing vector 45 of norm 0.0
18:40 gram_schmidt: Removing vector 46 of norm 0.0
18:40 gram_schmidt: Removing vector 47 of norm 0.0
18:40 gram_schmidt: Removing vector 48 of norm 0.0
18:40 gram_schmidt: Removing vector 49 of norm 0.0
18:40 gram_schmidt: Removing vector 50 of norm 0.0
18:40 gram_schmidt: Removing vector 51 of norm 0.0
18:40 gram_schmidt: Removing vector 52 of norm 0.0
18:40 gram_schmidt: Removing vector 53 of norm 0.0
18:40 gram_schmidt: Removing vector 54 of norm 0.0
18:40 gram_schmidt: Removing vector 55 of norm 0.0
18:40 gram_schmidt: Removing vector 56 of norm 0.0
18:40 gram_schmidt: Removing vector 57 of norm 0.0
18:40 gram_schmidt: Removing vector 58 of norm 0.0
18:40 gram_schmidt: Removing vector 59 of norm 0.0
18:40 gram_schmidt: Removing vector 60 of norm 0.0
18:40 gram_schmidt: Removing vector 61 of norm 0.0
18:40 gram_schmidt: Removing vector 62 of norm 0.0
18:40 gram_schmidt: Removing vector 63 of norm 0.0
18:40 gram_schmidt: Removing vector 64 of norm 0.0
18:40 gram_schmidt: Removing vector 65 of norm 0.0
18:40 gram_schmidt: Removing vector 66 of norm 0.0
18:40 gram_schmidt: Removing vector 67 of norm 0.0
18:40 gram_schmidt: Removing vector 68 of norm 0.0
18:40 gram_schmidt: Removing vector 69 of norm 0.0
18:40 gram_schmidt: Removing vector 70 of norm 0.0
18:40 gram_schmidt: Removing vector 71 of norm 0.0
18:40 gram_schmidt: Removing vector 72 of norm 0.0
18:40 gram_schmidt: Removing vector 73 of norm 0.0
18:40 gram_schmidt: Removing vector 74 of norm 0.0
18:40 gram_schmidt: Removing vector 75 of norm 0.0
18:40 gram_schmidt: Removing vector 76 of norm 0.0
18:40 gram_schmidt: Removing vector 77 of norm 0.0
18:40 gram_schmidt: Removing vector 78 of norm 0.0
18:40 gram_schmidt: Removing vector 79 of norm 0.0
18:40 gram_schmidt: Removing vector 80 of norm 0.0
18:40 gram_schmidt: Removing vector 81 of norm 0.0
18:40 gram_schmidt: Removing vector 82 of norm 0.0
18:40 gram_schmidt: Removing vector 83 of norm 0.0
18:40 gram_schmidt: Removing vector 84 of norm 0.0
18:40 gram_schmidt: Removing vector 85 of norm 0.0
18:40 gram_schmidt: Removing vector 86 of norm 0.0
18:40 gram_schmidt: Removing vector 87 of norm 0.0
18:40 gram_schmidt: Removing vector 88 of norm 0.0
18:40 gram_schmidt: Removing vector 89 of norm 0.0
18:40 gram_schmidt: Removing vector 90 of norm 0.0
18:40 gram_schmidt: Removing vector 91 of norm 0.0
18:40 gram_schmidt: Removing vector 92 of norm 0.0
18:40 gram_schmidt: Removing vector 93 of norm 0.0
18:40 gram_schmidt: Removing vector 94 of norm 0.0
18:40 gram_schmidt: Removing vector 95 of norm 0.0
18:40 gram_schmidt: Removing vector 96 of norm 0.0
18:40 gram_schmidt: Removing vector 97 of norm 0.0
18:40 gram_schmidt: Removing vector 98 of norm 0.0
18:40 gram_schmidt: Removing vector 99 of norm 0.0
18:40 gram_schmidt: Removing vector 100 of norm 0.0
18:40 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;10]" time="0.0035262107849121094"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;11]" time="0.006524801254272461"><system-err>18:40 gram_schmidt: Removing linear dependent vector 3
18:40 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;12]" time="0.003972530364990234"><system-err>18:40 gram_schmidt: Removing vector 0 of norm 0.0
18:40 gram_schmidt: Removing vector 1 of norm 0.0
18:40 gram_schmidt: Removing vector 2 of norm 0.0
18:40 gram_schmidt: Removing vector 0 of norm 0.0
18:40 gram_schmidt: Removing vector 1 of norm 0.0
18:40 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;13]" time="0.0027794837951660156"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;14]" time="0.0045702457427978516"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;15]" time="0.36989617347717285"><system-err>18:40 gram_schmidt: Removing linear dependent vector 36
18:40 gram_schmidt: Removing linear dependent vector 37
18:40 gram_schmidt: Removing linear dependent vector 38
18:40 gram_schmidt: Removing linear dependent vector 39
18:40 gram_schmidt: Removing linear dependent vector 40
18:40 gram_schmidt: Removing linear dependent vector 41
18:40 gram_schmidt: Removing linear dependent vector 42
18:40 gram_schmidt: Removing linear dependent vector 36
18:40 gram_schmidt: Removing linear dependent vector 37
18:40 gram_schmidt: Removing linear dependent vector 38
18:40 gram_schmidt: Removing linear dependent vector 39
18:40 gram_schmidt: Removing linear dependent vector 40
18:40 gram_schmidt: Removing linear dependent vector 41
18:40 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;16]" time="0.19366788864135742"><system-err>18:40 gram_schmidt: Removing linear dependent vector 3
18:40 gram_schmidt: Removing linear dependent vector 4
18:40 gram_schmidt: Removing linear dependent vector 5
18:40 gram_schmidt: Removing linear dependent vector 6
18:40 gram_schmidt: Removing linear dependent vector 7
18:40 gram_schmidt: Removing linear dependent vector 8
18:40 gram_schmidt: Removing linear dependent vector 9
18:40 gram_schmidt: Removing linear dependent vector 10
18:40 gram_schmidt: Removing linear dependent vector 11
18:40 gram_schmidt: Removing linear dependent vector 12
18:40 gram_schmidt: Removing linear dependent vector 13
18:40 gram_schmidt: Removing linear dependent vector 14
18:40 gram_schmidt: Removing linear dependent vector 15
18:40 gram_schmidt: Removing linear dependent vector 16
18:40 gram_schmidt: Removing linear dependent vector 17
18:40 gram_schmidt: Removing linear dependent vector 18
18:40 gram_schmidt: Removing linear dependent vector 19
18:40 gram_schmidt: Removing linear dependent vector 20
18:40 gram_schmidt: Removing linear dependent vector 21
18:40 gram_schmidt: Removing linear dependent vector 22
18:40 gram_schmidt: Removing linear dependent vector 23
18:40 gram_schmidt: Removing linear dependent vector 24
18:40 gram_schmidt: Removing linear dependent vector 25
18:40 gram_schmidt: Removing linear dependent vector 26
18:40 gram_schmidt: Removing linear dependent vector 27
18:40 gram_schmidt: Removing linear dependent vector 28
18:40 gram_schmidt: Removing linear dependent vector 29
18:40 gram_schmidt: Removing linear dependent vector 30
18:40 gram_schmidt: Removing linear dependent vector 31
18:40 gram_schmidt: Removing linear dependent vector 32
18:40 gram_schmidt: Removing linear dependent vector 33
18:40 gram_schmidt: Removing linear dependent vector 34
18:40 gram_schmidt: Removing linear dependent vector 35
18:40 gram_schmidt: Removing linear dependent vector 36
18:40 gram_schmidt: Removing linear dependent vector 37
18:40 gram_schmidt: Removing linear dependent vector 38
18:40 gram_schmidt: Removing linear dependent vector 39
18:40 gram_schmidt: Removing linear dependent vector 40
18:40 gram_schmidt: Removing linear dependent vector 41
18:40 gram_schmidt: Removing linear dependent vector 42
18:40 gram_schmidt: Removing linear dependent vector 43
18:40 gram_schmidt: Removing linear dependent vector 44
18:40 gram_schmidt: Removing linear dependent vector 45
18:40 gram_schmidt: Removing linear dependent vector 46
18:40 gram_schmidt: Removing linear dependent vector 47
18:40 gram_schmidt: Removing linear dependent vector 48
18:40 gram_schmidt: Removing linear dependent vector 49
18:40 gram_schmidt: Removing linear dependent vector 50
18:40 gram_schmidt: Removing linear dependent vector 51
18:40 gram_schmidt: Removing linear dependent vector 52
18:40 gram_schmidt: Removing linear dependent vector 53
18:40 gram_schmidt: Removing linear dependent vector 54
18:40 gram_schmidt: Removing linear dependent vector 55
18:40 gram_schmidt: Removing linear dependent vector 56
18:40 gram_schmidt: Removing linear dependent vector 57
18:40 gram_schmidt: Removing linear dependent vector 58
18:40 gram_schmidt: Removing linear dependent vector 59
18:40 gram_schmidt: Removing linear dependent vector 60
18:40 gram_schmidt: Removing linear dependent vector 61
18:40 gram_schmidt: Removing linear dependent vector 62
18:40 gram_schmidt: Removing linear dependent vector 63
18:40 gram_schmidt: Removing linear dependent vector 64
18:40 gram_schmidt: Removing linear dependent vector 65
18:40 gram_schmidt: Removing linear dependent vector 66
18:40 gram_schmidt: Removing linear dependent vector 67
18:40 gram_schmidt: Removing linear dependent vector 68
18:40 gram_schmidt: Removing linear dependent vector 69
18:40 gram_schmidt: Removing linear dependent vector 70
18:40 gram_schmidt: Removing linear dependent vector 71
18:40 gram_schmidt: Removing linear dependent vector 72
18:40 gram_schmidt: Removing linear dependent vector 73
18:40 gram_schmidt: Removing linear dependent vector 74
18:40 gram_schmidt: Removing linear dependent vector 75
18:40 gram_schmidt: Removing linear dependent vector 76
18:40 gram_schmidt: Removing linear dependent vector 77
18:40 gram_schmidt: Removing linear dependent vector 78
18:40 gram_schmidt: Removing linear dependent vector 79
18:40 gram_schmidt: Removing linear dependent vector 80
18:40 gram_schmidt: Removing linear dependent vector 81
18:40 gram_schmidt: Removing linear dependent vector 82
18:40 gram_schmidt: Removing linear dependent vector 83
18:40 gram_schmidt: Removing linear dependent vector 84
18:40 gram_schmidt: Removing linear dependent vector 85
18:40 gram_schmidt: Removing linear dependent vector 86
18:40 gram_schmidt: Removing linear dependent vector 87
18:40 gram_schmidt: Removing linear dependent vector 88
18:40 gram_schmidt: Removing linear dependent vector 89
18:40 gram_schmidt: Removing linear dependent vector 90
18:40 gram_schmidt: Removing linear dependent vector 91
18:40 gram_schmidt: Removing linear dependent vector 92
18:40 gram_schmidt: Removing linear dependent vector 93
18:40 gram_schmidt: Removing linear dependent vector 94
18:40 gram_schmidt: Removing linear dependent vector 95
18:40 gram_schmidt: Removing linear dependent vector 96
18:40 gram_schmidt: Removing linear dependent vector 97
18:40 gram_schmidt: Removing linear dependent vector 98
18:40 gram_schmidt: Removing linear dependent vector 99
18:40 gram_schmidt: Removing linear dependent vector 100
18:40 gram_schmidt: Removing linear dependent vector 101
18:40 gram_schmidt: Removing linear dependent vector 3
18:40 gram_schmidt: Removing linear dependent vector 4
18:40 gram_schmidt: Removing linear dependent vector 5
18:40 gram_schmidt: Removing linear dependent vector 6
18:40 gram_schmidt: Removing linear dependent vector 7
18:40 gram_schmidt: Removing linear dependent vector 8
18:40 gram_schmidt: Removing linear dependent vector 9
18:40 gram_schmidt: Removing linear dependent vector 10
18:40 gram_schmidt: Removing linear dependent vector 11
18:40 gram_schmidt: Removing linear dependent vector 12
18:40 gram_schmidt: Removing linear dependent vector 13
18:40 gram_schmidt: Removing linear dependent vector 14
18:40 gram_schmidt: Removing linear dependent vector 15
18:40 gram_schmidt: Removing linear dependent vector 16
18:40 gram_schmidt: Removing linear dependent vector 17
18:40 gram_schmidt: Removing linear dependent vector 18
18:40 gram_schmidt: Removing linear dependent vector 19
18:40 gram_schmidt: Removing linear dependent vector 20
18:40 gram_schmidt: Removing linear dependent vector 21
18:40 gram_schmidt: Removing linear dependent vector 22
18:40 gram_schmidt: Removing linear dependent vector 23
18:40 gram_schmidt: Removing linear dependent vector 24
18:40 gram_schmidt: Removing linear dependent vector 25
18:40 gram_schmidt: Removing linear dependent vector 26
18:40 gram_schmidt: Removing linear dependent vector 27
18:40 gram_schmidt: Removing linear dependent vector 28
18:40 gram_schmidt: Removing linear dependent vector 29
18:40 gram_schmidt: Removing linear dependent vector 30
18:40 gram_schmidt: Removing linear dependent vector 31
18:40 gram_schmidt: Removing linear dependent vector 32
18:40 gram_schmidt: Removing linear dependent vector 33
18:40 gram_schmidt: Removing linear dependent vector 34
18:40 gram_schmidt: Removing linear dependent vector 35
18:40 gram_schmidt: Removing linear dependent vector 36
18:40 gram_schmidt: Removing linear dependent vector 37
18:40 gram_schmidt: Removing linear dependent vector 38
18:40 gram_schmidt: Removing linear dependent vector 39
18:40 gram_schmidt: Removing linear dependent vector 40
18:40 gram_schmidt: Removing linear dependent vector 41
18:40 gram_schmidt: Removing linear dependent vector 42
18:40 gram_schmidt: Removing linear dependent vector 43
18:40 gram_schmidt: Removing linear dependent vector 44
18:40 gram_schmidt: Removing linear dependent vector 45
18:40 gram_schmidt: Removing linear dependent vector 46
18:40 gram_schmidt: Removing linear dependent vector 47
18:40 gram_schmidt: Removing linear dependent vector 48
18:40 gram_schmidt: Removing linear dependent vector 49
18:40 gram_schmidt: Removing linear dependent vector 50
18:40 gram_schmidt: Removing linear dependent vector 51
18:40 gram_schmidt: Removing linear dependent vector 52
18:40 gram_schmidt: Removing linear dependent vector 53
18:40 gram_schmidt: Removing linear dependent vector 54
18:40 gram_schmidt: Removing linear dependent vector 55
18:40 gram_schmidt: Removing linear dependent vector 56
18:40 gram_schmidt: Removing linear dependent vector 57
18:40 gram_schmidt: Removing linear dependent vector 58
18:40 gram_schmidt: Removing linear dependent vector 59
18:40 gram_schmidt: Removing linear dependent vector 60
18:40 gram_schmidt: Removing linear dependent vector 61
18:40 gram_schmidt: Removing linear dependent vector 62
18:40 gram_schmidt: Removing linear dependent vector 63
18:40 gram_schmidt: Removing linear dependent vector 64
18:40 gram_schmidt: Removing linear dependent vector 65
18:40 gram_schmidt: Removing linear dependent vector 66
18:40 gram_schmidt: Removing linear dependent vector 67
18:40 gram_schmidt: Removing linear dependent vector 68
18:40 gram_schmidt: Removing linear dependent vector 69
18:40 gram_schmidt: Removing linear dependent vector 70
18:40 gram_schmidt: Removing linear dependent vector 71
18:40 gram_schmidt: Removing linear dependent vector 72
18:40 gram_schmidt: Removing linear dependent vector 73
18:40 gram_schmidt: Removing linear dependent vector 74
18:40 gram_schmidt: Removing linear dependent vector 75
18:40 gram_schmidt: Removing linear dependent vector 76
18:40 gram_schmidt: Removing linear dependent vector 77
18:40 gram_schmidt: Removing linear dependent vector 78
18:40 gram_schmidt: Removing linear dependent vector 79
18:40 gram_schmidt: Removing linear dependent vector 80
18:40 gram_schmidt: Removing linear dependent vector 81
18:40 gram_schmidt: Removing linear dependent vector 82
18:40 gram_schmidt: Removing linear dependent vector 83
18:40 gram_schmidt: Removing linear dependent vector 84
18:40 gram_schmidt: Removing linear dependent vector 85
18:40 gram_schmidt: Removing linear dependent vector 86
18:40 gram_schmidt: Removing linear dependent vector 87
18:40 gram_schmidt: Removing linear dependent vector 88
18:40 gram_schmidt: Removing linear dependent vector 89
18:40 gram_schmidt: Removing linear dependent vector 90
18:40 gram_schmidt: Removing linear dependent vector 91
18:41 gram_schmidt: Removing linear dependent vector 92
18:41 gram_schmidt: Removing linear dependent vector 93
18:41 gram_schmidt: Removing linear dependent vector 94
18:41 gram_schmidt: Removing linear dependent vector 95
18:41 gram_schmidt: Removing linear dependent vector 96
18:41 gram_schmidt: Removing linear dependent vector 97
18:41 gram_schmidt: Removing linear dependent vector 98
18:41 gram_schmidt: Removing linear dependent vector 99
18:41 gram_schmidt: Removing linear dependent vector 100
18:41 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;17]" time="0.0033063888549804688"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;18]" time="0.0024831295013427734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;19]" time="0.0049631595611572266"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;20]" time="0.2705986499786377"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;21]" time="1.4158082008361816"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;22]" time="0.0027801990509033203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;23]" time="0.002001047134399414"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;24]" time="0.008618354797363281"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;25]" time="0.4023325443267822"><system-err>18:42 gram_schmidt: Orthonormalizing vector 31 again
18:42 gram_schmidt: Removing linear dependent vector 32
18:42 gram_schmidt: Removing linear dependent vector 33
18:42 gram_schmidt: Removing linear dependent vector 34
18:42 gram_schmidt: Removing linear dependent vector 35
18:42 gram_schmidt: Removing linear dependent vector 36
18:42 gram_schmidt: Removing linear dependent vector 37
18:42 gram_schmidt: Removing linear dependent vector 38
18:42 gram_schmidt: Removing linear dependent vector 39
18:42 gram_schmidt: Removing linear dependent vector 40
18:42 gram_schmidt: Removing linear dependent vector 41
18:42 gram_schmidt: Removing linear dependent vector 42
18:43 gram_schmidt: Orthonormalizing vector 31 again
18:43 gram_schmidt: Removing linear dependent vector 32
18:43 gram_schmidt: Removing linear dependent vector 33
18:43 gram_schmidt: Removing linear dependent vector 34
18:43 gram_schmidt: Removing linear dependent vector 35
18:43 gram_schmidt: Removing linear dependent vector 36
18:43 gram_schmidt: Removing linear dependent vector 37
18:43 gram_schmidt: Removing linear dependent vector 38
18:43 gram_schmidt: Removing linear dependent vector 39
18:43 gram_schmidt: Removing linear dependent vector 40
18:43 gram_schmidt: Removing linear dependent vector 41
18:43 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;26]" time="0.23610568046569824"><system-err>18:43 gram_schmidt: Removing vector 0 of norm 0.0
18:43 gram_schmidt: Removing vector 1 of norm 0.0
18:43 gram_schmidt: Removing vector 2 of norm 0.0
18:43 gram_schmidt: Removing vector 3 of norm 0.0
18:43 gram_schmidt: Removing vector 4 of norm 0.0
18:43 gram_schmidt: Removing vector 5 of norm 0.0
18:43 gram_schmidt: Removing vector 6 of norm 0.0
18:43 gram_schmidt: Removing vector 7 of norm 0.0
18:43 gram_schmidt: Removing vector 8 of norm 0.0
18:43 gram_schmidt: Removing vector 9 of norm 0.0
18:43 gram_schmidt: Removing vector 10 of norm 0.0
18:43 gram_schmidt: Removing vector 11 of norm 0.0
18:43 gram_schmidt: Removing vector 12 of norm 0.0
18:43 gram_schmidt: Removing vector 13 of norm 0.0
18:43 gram_schmidt: Removing vector 14 of norm 0.0
18:43 gram_schmidt: Removing vector 15 of norm 0.0
18:43 gram_schmidt: Removing vector 16 of norm 0.0
18:43 gram_schmidt: Removing vector 17 of norm 0.0
18:43 gram_schmidt: Removing vector 18 of norm 0.0
18:43 gram_schmidt: Removing vector 19 of norm 0.0
18:43 gram_schmidt: Removing vector 20 of norm 0.0
18:43 gram_schmidt: Removing vector 21 of norm 0.0
18:43 gram_schmidt: Removing vector 22 of norm 0.0
18:43 gram_schmidt: Removing vector 23 of norm 0.0
18:43 gram_schmidt: Removing vector 24 of norm 0.0
18:43 gram_schmidt: Removing vector 25 of norm 0.0
18:43 gram_schmidt: Removing vector 26 of norm 0.0
18:43 gram_schmidt: Removing vector 27 of norm 0.0
18:43 gram_schmidt: Removing vector 28 of norm 0.0
18:43 gram_schmidt: Removing vector 29 of norm 0.0
18:43 gram_schmidt: Removing vector 30 of norm 0.0
18:43 gram_schmidt: Removing vector 31 of norm 0.0
18:43 gram_schmidt: Removing vector 32 of norm 0.0
18:43 gram_schmidt: Removing vector 33 of norm 0.0
18:43 gram_schmidt: Removing vector 34 of norm 0.0
18:43 gram_schmidt: Removing vector 35 of norm 0.0
18:43 gram_schmidt: Removing vector 36 of norm 0.0
18:43 gram_schmidt: Removing vector 37 of norm 0.0
18:43 gram_schmidt: Removing vector 38 of norm 0.0
18:43 gram_schmidt: Removing vector 39 of norm 0.0
18:43 gram_schmidt: Removing vector 40 of norm 0.0
18:43 gram_schmidt: Removing vector 41 of norm 0.0
18:43 gram_schmidt: Removing vector 42 of norm 0.0
18:43 gram_schmidt: Removing vector 43 of norm 0.0
18:43 gram_schmidt: Removing vector 44 of norm 0.0
18:43 gram_schmidt: Removing vector 45 of norm 0.0
18:43 gram_schmidt: Removing vector 46 of norm 0.0
18:43 gram_schmidt: Removing vector 47 of norm 0.0
18:43 gram_schmidt: Removing vector 48 of norm 0.0
18:43 gram_schmidt: Removing vector 49 of norm 0.0
18:43 gram_schmidt: Removing vector 50 of norm 0.0
18:43 gram_schmidt: Removing vector 51 of norm 0.0
18:43 gram_schmidt: Removing vector 52 of norm 0.0
18:43 gram_schmidt: Removing vector 53 of norm 0.0
18:43 gram_schmidt: Removing vector 54 of norm 0.0
18:43 gram_schmidt: Removing vector 55 of norm 0.0
18:43 gram_schmidt: Removing vector 56 of norm 0.0
18:43 gram_schmidt: Removing vector 57 of norm 0.0
18:43 gram_schmidt: Removing vector 58 of norm 0.0
18:43 gram_schmidt: Removing vector 59 of norm 0.0
18:43 gram_schmidt: Removing vector 60 of norm 0.0
18:43 gram_schmidt: Removing vector 61 of norm 0.0
18:43 gram_schmidt: Removing vector 62 of norm 0.0
18:43 gram_schmidt: Removing vector 63 of norm 0.0
18:43 gram_schmidt: Removing vector 64 of norm 0.0
18:43 gram_schmidt: Removing vector 65 of norm 0.0
18:43 gram_schmidt: Removing vector 66 of norm 0.0
18:43 gram_schmidt: Removing vector 67 of norm 0.0
18:43 gram_schmidt: Removing vector 68 of norm 0.0
18:43 gram_schmidt: Removing vector 69 of norm 0.0
18:43 gram_schmidt: Removing vector 70 of norm 0.0
18:43 gram_schmidt: Removing vector 71 of norm 0.0
18:43 gram_schmidt: Removing vector 72 of norm 0.0
18:43 gram_schmidt: Removing vector 73 of norm 0.0
18:43 gram_schmidt: Removing vector 74 of norm 0.0
18:43 gram_schmidt: Removing vector 75 of norm 0.0
18:43 gram_schmidt: Removing vector 76 of norm 0.0
18:43 gram_schmidt: Removing vector 77 of norm 0.0
18:43 gram_schmidt: Removing vector 78 of norm 0.0
18:43 gram_schmidt: Removing vector 79 of norm 0.0
18:43 gram_schmidt: Removing vector 80 of norm 0.0
18:43 gram_schmidt: Removing vector 81 of norm 0.0
18:43 gram_schmidt: Removing vector 82 of norm 0.0
18:43 gram_schmidt: Removing vector 83 of norm 0.0
18:43 gram_schmidt: Removing vector 84 of norm 0.0
18:43 gram_schmidt: Removing vector 85 of norm 0.0
18:43 gram_schmidt: Removing vector 86 of norm 0.0
18:43 gram_schmidt: Removing vector 87 of norm 0.0
18:43 gram_schmidt: Removing vector 88 of norm 0.0
18:43 gram_schmidt: Removing vector 89 of norm 0.0
18:43 gram_schmidt: Removing vector 90 of norm 0.0
18:43 gram_schmidt: Removing vector 91 of norm 0.0
18:43 gram_schmidt: Removing vector 92 of norm 0.0
18:43 gram_schmidt: Removing vector 93 of norm 0.0
18:43 gram_schmidt: Removing vector 94 of norm 0.0
18:43 gram_schmidt: Removing vector 95 of norm 0.0
18:43 gram_schmidt: Removing vector 96 of norm 0.0
18:43 gram_schmidt: Removing vector 97 of norm 0.0
18:43 gram_schmidt: Removing vector 98 of norm 0.0
18:43 gram_schmidt: Removing vector 99 of norm 0.0
18:43 gram_schmidt: Removing vector 100 of norm 0.0
18:43 gram_schmidt: Removing vector 101 of norm 0.0
18:43 gram_schmidt: Removing vector 0 of norm 0.0
18:43 gram_schmidt: Removing vector 1 of norm 0.0
18:43 gram_schmidt: Removing vector 2 of norm 0.0
18:43 gram_schmidt: Removing vector 3 of norm 0.0
18:43 gram_schmidt: Removing vector 4 of norm 0.0
18:43 gram_schmidt: Removing vector 5 of norm 0.0
18:43 gram_schmidt: Removing vector 6 of norm 0.0
18:43 gram_schmidt: Removing vector 7 of norm 0.0
18:43 gram_schmidt: Removing vector 8 of norm 0.0
18:43 gram_schmidt: Removing vector 9 of norm 0.0
18:43 gram_schmidt: Removing vector 10 of norm 0.0
18:43 gram_schmidt: Removing vector 11 of norm 0.0
18:43 gram_schmidt: Removing vector 12 of norm 0.0
18:43 gram_schmidt: Removing vector 13 of norm 0.0
18:43 gram_schmidt: Removing vector 14 of norm 0.0
18:43 gram_schmidt: Removing vector 15 of norm 0.0
18:43 gram_schmidt: Removing vector 16 of norm 0.0
18:43 gram_schmidt: Removing vector 17 of norm 0.0
18:43 gram_schmidt: Removing vector 18 of norm 0.0
18:43 gram_schmidt: Removing vector 19 of norm 0.0
18:43 gram_schmidt: Removing vector 20 of norm 0.0
18:43 gram_schmidt: Removing vector 21 of norm 0.0
18:43 gram_schmidt: Removing vector 22 of norm 0.0
18:43 gram_schmidt: Removing vector 23 of norm 0.0
18:43 gram_schmidt: Removing vector 24 of norm 0.0
18:43 gram_schmidt: Removing vector 25 of norm 0.0
18:43 gram_schmidt: Removing vector 26 of norm 0.0
18:43 gram_schmidt: Removing vector 27 of norm 0.0
18:43 gram_schmidt: Removing vector 28 of norm 0.0
18:43 gram_schmidt: Removing vector 29 of norm 0.0
18:43 gram_schmidt: Removing vector 30 of norm 0.0
18:43 gram_schmidt: Removing vector 31 of norm 0.0
18:43 gram_schmidt: Removing vector 32 of norm 0.0
18:43 gram_schmidt: Removing vector 33 of norm 0.0
18:43 gram_schmidt: Removing vector 34 of norm 0.0
18:43 gram_schmidt: Removing vector 35 of norm 0.0
18:43 gram_schmidt: Removing vector 36 of norm 0.0
18:43 gram_schmidt: Removing vector 37 of norm 0.0
18:43 gram_schmidt: Removing vector 38 of norm 0.0
18:43 gram_schmidt: Removing vector 39 of norm 0.0
18:43 gram_schmidt: Removing vector 40 of norm 0.0
18:43 gram_schmidt: Removing vector 41 of norm 0.0
18:43 gram_schmidt: Removing vector 42 of norm 0.0
18:43 gram_schmidt: Removing vector 43 of norm 0.0
18:43 gram_schmidt: Removing vector 44 of norm 0.0
18:43 gram_schmidt: Removing vector 45 of norm 0.0
18:43 gram_schmidt: Removing vector 46 of norm 0.0
18:43 gram_schmidt: Removing vector 47 of norm 0.0
18:43 gram_schmidt: Removing vector 48 of norm 0.0
18:43 gram_schmidt: Removing vector 49 of norm 0.0
18:43 gram_schmidt: Removing vector 50 of norm 0.0
18:43 gram_schmidt: Removing vector 51 of norm 0.0
18:43 gram_schmidt: Removing vector 52 of norm 0.0
18:43 gram_schmidt: Removing vector 53 of norm 0.0
18:43 gram_schmidt: Removing vector 54 of norm 0.0
18:43 gram_schmidt: Removing vector 55 of norm 0.0
18:43 gram_schmidt: Removing vector 56 of norm 0.0
18:43 gram_schmidt: Removing vector 57 of norm 0.0
18:43 gram_schmidt: Removing vector 58 of norm 0.0
18:43 gram_schmidt: Removing vector 59 of norm 0.0
18:43 gram_schmidt: Removing vector 60 of norm 0.0
18:43 gram_schmidt: Removing vector 61 of norm 0.0
18:43 gram_schmidt: Removing vector 62 of norm 0.0
18:43 gram_schmidt: Removing vector 63 of norm 0.0
18:43 gram_schmidt: Removing vector 64 of norm 0.0
18:43 gram_schmidt: Removing vector 65 of norm 0.0
18:43 gram_schmidt: Removing vector 66 of norm 0.0
18:43 gram_schmidt: Removing vector 67 of norm 0.0
18:43 gram_schmidt: Removing vector 68 of norm 0.0
18:43 gram_schmidt: Removing vector 69 of norm 0.0
18:43 gram_schmidt: Removing vector 70 of norm 0.0
18:43 gram_schmidt: Removing vector 71 of norm 0.0
18:43 gram_schmidt: Removing vector 72 of norm 0.0
18:43 gram_schmidt: Removing vector 73 of norm 0.0
18:43 gram_schmidt: Removing vector 74 of norm 0.0
18:43 gram_schmidt: Removing vector 75 of norm 0.0
18:43 gram_schmidt: Removing vector 76 of norm 0.0
18:43 gram_schmidt: Removing vector 77 of norm 0.0
18:43 gram_schmidt: Removing vector 78 of norm 0.0
18:43 gram_schmidt: Removing vector 79 of norm 0.0
18:43 gram_schmidt: Removing vector 80 of norm 0.0
18:43 gram_schmidt: Removing vector 81 of norm 0.0
18:43 gram_schmidt: Removing vector 82 of norm 0.0
18:43 gram_schmidt: Removing vector 83 of norm 0.0
18:43 gram_schmidt: Removing vector 84 of norm 0.0
18:43 gram_schmidt: Removing vector 85 of norm 0.0
18:43 gram_schmidt: Removing vector 86 of norm 0.0
18:43 gram_schmidt: Removing vector 87 of norm 0.0
18:43 gram_schmidt: Removing vector 88 of norm 0.0
18:43 gram_schmidt: Removing vector 89 of norm 0.0
18:43 gram_schmidt: Removing vector 90 of norm 0.0
18:43 gram_schmidt: Removing vector 91 of norm 0.0
18:43 gram_schmidt: Removing vector 92 of norm 0.0
18:43 gram_schmidt: Removing vector 93 of norm 0.0
18:43 gram_schmidt: Removing vector 94 of norm 0.0
18:43 gram_schmidt: Removing vector 95 of norm 0.0
18:43 gram_schmidt: Removing vector 96 of norm 0.0
18:43 gram_schmidt: Removing vector 97 of norm 0.0
18:43 gram_schmidt: Removing vector 98 of norm 0.0
18:43 gram_schmidt: Removing vector 99 of norm 0.0
18:43 gram_schmidt: Removing vector 100 of norm 0.0
18:43 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;0]" time="0.002796649932861328"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;1]" time="0.00189208984375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;2]" time="0.0020494461059570312"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;3]" time="0.09805083274841309"><system-err>18:43 gram_schmidt: Orthonormalizing vector 31 again
18:43 gram_schmidt: Removing linear dependent vector 32
18:43 gram_schmidt: Removing linear dependent vector 33
18:43 gram_schmidt: Removing linear dependent vector 34
18:43 gram_schmidt: Removing linear dependent vector 35
18:43 gram_schmidt: Removing linear dependent vector 36
18:43 gram_schmidt: Removing linear dependent vector 37
18:43 gram_schmidt: Removing linear dependent vector 38
18:43 gram_schmidt: Removing linear dependent vector 39
18:43 gram_schmidt: Removing linear dependent vector 40
18:43 gram_schmidt: Removing linear dependent vector 41
18:43 gram_schmidt: Removing linear dependent vector 42
18:43 gram_schmidt: Orthonormalizing vector 31 again
18:43 gram_schmidt: Removing linear dependent vector 32
18:43 gram_schmidt: Removing linear dependent vector 33
18:43 gram_schmidt: Removing linear dependent vector 34
18:43 gram_schmidt: Removing linear dependent vector 35
18:43 gram_schmidt: Removing linear dependent vector 36
18:43 gram_schmidt: Removing linear dependent vector 37
18:43 gram_schmidt: Removing linear dependent vector 38
18:43 gram_schmidt: Removing linear dependent vector 39
18:43 gram_schmidt: Removing linear dependent vector 40
18:43 gram_schmidt: Removing linear dependent vector 41
18:43 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;4]" time="0.020923614501953125"><system-err>18:43 gram_schmidt: Removing vector 0 of norm 0.0
18:43 gram_schmidt: Removing vector 1 of norm 0.0
18:43 gram_schmidt: Removing vector 2 of norm 0.0
18:43 gram_schmidt: Removing vector 3 of norm 0.0
18:43 gram_schmidt: Removing vector 4 of norm 0.0
18:43 gram_schmidt: Removing vector 5 of norm 0.0
18:43 gram_schmidt: Removing vector 6 of norm 0.0
18:43 gram_schmidt: Removing vector 7 of norm 0.0
18:43 gram_schmidt: Removing vector 8 of norm 0.0
18:43 gram_schmidt: Removing vector 9 of norm 0.0
18:43 gram_schmidt: Removing vector 10 of norm 0.0
18:43 gram_schmidt: Removing vector 11 of norm 0.0
18:43 gram_schmidt: Removing vector 12 of norm 0.0
18:43 gram_schmidt: Removing vector 13 of norm 0.0
18:43 gram_schmidt: Removing vector 14 of norm 0.0
18:43 gram_schmidt: Removing vector 15 of norm 0.0
18:43 gram_schmidt: Removing vector 16 of norm 0.0
18:43 gram_schmidt: Removing vector 17 of norm 0.0
18:43 gram_schmidt: Removing vector 18 of norm 0.0
18:43 gram_schmidt: Removing vector 19 of norm 0.0
18:43 gram_schmidt: Removing vector 20 of norm 0.0
18:43 gram_schmidt: Removing vector 21 of norm 0.0
18:43 gram_schmidt: Removing vector 22 of norm 0.0
18:43 gram_schmidt: Removing vector 23 of norm 0.0
18:43 gram_schmidt: Removing vector 24 of norm 0.0
18:43 gram_schmidt: Removing vector 25 of norm 0.0
18:43 gram_schmidt: Removing vector 26 of norm 0.0
18:43 gram_schmidt: Removing vector 27 of norm 0.0
18:43 gram_schmidt: Removing vector 28 of norm 0.0
18:43 gram_schmidt: Removing vector 29 of norm 0.0
18:43 gram_schmidt: Removing vector 30 of norm 0.0
18:43 gram_schmidt: Removing vector 31 of norm 0.0
18:43 gram_schmidt: Removing vector 32 of norm 0.0
18:43 gram_schmidt: Removing vector 33 of norm 0.0
18:43 gram_schmidt: Removing vector 34 of norm 0.0
18:43 gram_schmidt: Removing vector 35 of norm 0.0
18:43 gram_schmidt: Removing vector 36 of norm 0.0
18:43 gram_schmidt: Removing vector 37 of norm 0.0
18:43 gram_schmidt: Removing vector 38 of norm 0.0
18:43 gram_schmidt: Removing vector 39 of norm 0.0
18:43 gram_schmidt: Removing vector 40 of norm 0.0
18:43 gram_schmidt: Removing vector 41 of norm 0.0
18:43 gram_schmidt: Removing vector 42 of norm 0.0
18:43 gram_schmidt: Removing vector 43 of norm 0.0
18:43 gram_schmidt: Removing vector 44 of norm 0.0
18:43 gram_schmidt: Removing vector 45 of norm 0.0
18:43 gram_schmidt: Removing vector 46 of norm 0.0
18:43 gram_schmidt: Removing vector 47 of norm 0.0
18:43 gram_schmidt: Removing vector 48 of norm 0.0
18:43 gram_schmidt: Removing vector 49 of norm 0.0
18:43 gram_schmidt: Removing vector 50 of norm 0.0
18:43 gram_schmidt: Removing vector 51 of norm 0.0
18:43 gram_schmidt: Removing vector 52 of norm 0.0
18:43 gram_schmidt: Removing vector 53 of norm 0.0
18:43 gram_schmidt: Removing vector 54 of norm 0.0
18:43 gram_schmidt: Removing vector 55 of norm 0.0
18:43 gram_schmidt: Removing vector 56 of norm 0.0
18:43 gram_schmidt: Removing vector 57 of norm 0.0
18:43 gram_schmidt: Removing vector 58 of norm 0.0
18:43 gram_schmidt: Removing vector 59 of norm 0.0
18:43 gram_schmidt: Removing vector 60 of norm 0.0
18:43 gram_schmidt: Removing vector 61 of norm 0.0
18:43 gram_schmidt: Removing vector 62 of norm 0.0
18:43 gram_schmidt: Removing vector 63 of norm 0.0
18:43 gram_schmidt: Removing vector 64 of norm 0.0
18:43 gram_schmidt: Removing vector 65 of norm 0.0
18:43 gram_schmidt: Removing vector 66 of norm 0.0
18:43 gram_schmidt: Removing vector 67 of norm 0.0
18:43 gram_schmidt: Removing vector 68 of norm 0.0
18:43 gram_schmidt: Removing vector 69 of norm 0.0
18:43 gram_schmidt: Removing vector 70 of norm 0.0
18:43 gram_schmidt: Removing vector 71 of norm 0.0
18:43 gram_schmidt: Removing vector 72 of norm 0.0
18:43 gram_schmidt: Removing vector 73 of norm 0.0
18:43 gram_schmidt: Removing vector 74 of norm 0.0
18:43 gram_schmidt: Removing vector 75 of norm 0.0
18:43 gram_schmidt: Removing vector 76 of norm 0.0
18:43 gram_schmidt: Removing vector 77 of norm 0.0
18:43 gram_schmidt: Removing vector 78 of norm 0.0
18:43 gram_schmidt: Removing vector 79 of norm 0.0
18:43 gram_schmidt: Removing vector 80 of norm 0.0
18:43 gram_schmidt: Removing vector 81 of norm 0.0
18:43 gram_schmidt: Removing vector 82 of norm 0.0
18:43 gram_schmidt: Removing vector 83 of norm 0.0
18:43 gram_schmidt: Removing vector 84 of norm 0.0
18:43 gram_schmidt: Removing vector 85 of norm 0.0
18:43 gram_schmidt: Removing vector 86 of norm 0.0
18:43 gram_schmidt: Removing vector 87 of norm 0.0
18:43 gram_schmidt: Removing vector 88 of norm 0.0
18:43 gram_schmidt: Removing vector 89 of norm 0.0
18:43 gram_schmidt: Removing vector 90 of norm 0.0
18:43 gram_schmidt: Removing vector 91 of norm 0.0
18:43 gram_schmidt: Removing vector 92 of norm 0.0
18:43 gram_schmidt: Removing vector 93 of norm 0.0
18:43 gram_schmidt: Removing vector 94 of norm 0.0
18:43 gram_schmidt: Removing vector 95 of norm 0.0
18:43 gram_schmidt: Removing vector 96 of norm 0.0
18:43 gram_schmidt: Removing vector 97 of norm 0.0
18:43 gram_schmidt: Removing vector 98 of norm 0.0
18:43 gram_schmidt: Removing vector 99 of norm 0.0
18:43 gram_schmidt: Removing vector 100 of norm 0.0
18:43 gram_schmidt: Removing vector 101 of norm 0.0
18:43 gram_schmidt: Removing vector 0 of norm 0.0
18:43 gram_schmidt: Removing vector 1 of norm 0.0
18:43 gram_schmidt: Removing vector 2 of norm 0.0
18:43 gram_schmidt: Removing vector 3 of norm 0.0
18:43 gram_schmidt: Removing vector 4 of norm 0.0
18:43 gram_schmidt: Removing vector 5 of norm 0.0
18:43 gram_schmidt: Removing vector 6 of norm 0.0
18:43 gram_schmidt: Removing vector 7 of norm 0.0
18:43 gram_schmidt: Removing vector 8 of norm 0.0
18:43 gram_schmidt: Removing vector 9 of norm 0.0
18:43 gram_schmidt: Removing vector 10 of norm 0.0
18:43 gram_schmidt: Removing vector 11 of norm 0.0
18:43 gram_schmidt: Removing vector 12 of norm 0.0
18:43 gram_schmidt: Removing vector 13 of norm 0.0
18:43 gram_schmidt: Removing vector 14 of norm 0.0
18:43 gram_schmidt: Removing vector 15 of norm 0.0
18:43 gram_schmidt: Removing vector 16 of norm 0.0
18:43 gram_schmidt: Removing vector 17 of norm 0.0
18:43 gram_schmidt: Removing vector 18 of norm 0.0
18:43 gram_schmidt: Removing vector 19 of norm 0.0
18:43 gram_schmidt: Removing vector 20 of norm 0.0
18:43 gram_schmidt: Removing vector 21 of norm 0.0
18:43 gram_schmidt: Removing vector 22 of norm 0.0
18:43 gram_schmidt: Removing vector 23 of norm 0.0
18:43 gram_schmidt: Removing vector 24 of norm 0.0
18:43 gram_schmidt: Removing vector 25 of norm 0.0
18:43 gram_schmidt: Removing vector 26 of norm 0.0
18:43 gram_schmidt: Removing vector 27 of norm 0.0
18:43 gram_schmidt: Removing vector 28 of norm 0.0
18:43 gram_schmidt: Removing vector 29 of norm 0.0
18:43 gram_schmidt: Removing vector 30 of norm 0.0
18:43 gram_schmidt: Removing vector 31 of norm 0.0
18:43 gram_schmidt: Removing vector 32 of norm 0.0
18:43 gram_schmidt: Removing vector 33 of norm 0.0
18:43 gram_schmidt: Removing vector 34 of norm 0.0
18:43 gram_schmidt: Removing vector 35 of norm 0.0
18:43 gram_schmidt: Removing vector 36 of norm 0.0
18:43 gram_schmidt: Removing vector 37 of norm 0.0
18:43 gram_schmidt: Removing vector 38 of norm 0.0
18:43 gram_schmidt: Removing vector 39 of norm 0.0
18:43 gram_schmidt: Removing vector 40 of norm 0.0
18:43 gram_schmidt: Removing vector 41 of norm 0.0
18:43 gram_schmidt: Removing vector 42 of norm 0.0
18:43 gram_schmidt: Removing vector 43 of norm 0.0
18:43 gram_schmidt: Removing vector 44 of norm 0.0
18:43 gram_schmidt: Removing vector 45 of norm 0.0
18:43 gram_schmidt: Removing vector 46 of norm 0.0
18:43 gram_schmidt: Removing vector 47 of norm 0.0
18:43 gram_schmidt: Removing vector 48 of norm 0.0
18:43 gram_schmidt: Removing vector 49 of norm 0.0
18:43 gram_schmidt: Removing vector 50 of norm 0.0
18:43 gram_schmidt: Removing vector 51 of norm 0.0
18:43 gram_schmidt: Removing vector 52 of norm 0.0
18:43 gram_schmidt: Removing vector 53 of norm 0.0
18:43 gram_schmidt: Removing vector 54 of norm 0.0
18:43 gram_schmidt: Removing vector 55 of norm 0.0
18:43 gram_schmidt: Removing vector 56 of norm 0.0
18:43 gram_schmidt: Removing vector 57 of norm 0.0
18:43 gram_schmidt: Removing vector 58 of norm 0.0
18:43 gram_schmidt: Removing vector 59 of norm 0.0
18:43 gram_schmidt: Removing vector 60 of norm 0.0
18:43 gram_schmidt: Removing vector 61 of norm 0.0
18:43 gram_schmidt: Removing vector 62 of norm 0.0
18:43 gram_schmidt: Removing vector 63 of norm 0.0
18:43 gram_schmidt: Removing vector 64 of norm 0.0
18:43 gram_schmidt: Removing vector 65 of norm 0.0
18:43 gram_schmidt: Removing vector 66 of norm 0.0
18:43 gram_schmidt: Removing vector 67 of norm 0.0
18:43 gram_schmidt: Removing vector 68 of norm 0.0
18:43 gram_schmidt: Removing vector 69 of norm 0.0
18:43 gram_schmidt: Removing vector 70 of norm 0.0
18:43 gram_schmidt: Removing vector 71 of norm 0.0
18:43 gram_schmidt: Removing vector 72 of norm 0.0
18:43 gram_schmidt: Removing vector 73 of norm 0.0
18:43 gram_schmidt: Removing vector 74 of norm 0.0
18:43 gram_schmidt: Removing vector 75 of norm 0.0
18:43 gram_schmidt: Removing vector 76 of norm 0.0
18:43 gram_schmidt: Removing vector 77 of norm 0.0
18:43 gram_schmidt: Removing vector 78 of norm 0.0
18:43 gram_schmidt: Removing vector 79 of norm 0.0
18:43 gram_schmidt: Removing vector 80 of norm 0.0
18:43 gram_schmidt: Removing vector 81 of norm 0.0
18:43 gram_schmidt: Removing vector 82 of norm 0.0
18:43 gram_schmidt: Removing vector 83 of norm 0.0
18:43 gram_schmidt: Removing vector 84 of norm 0.0
18:43 gram_schmidt: Removing vector 85 of norm 0.0
18:43 gram_schmidt: Removing vector 86 of norm 0.0
18:43 gram_schmidt: Removing vector 87 of norm 0.0
18:43 gram_schmidt: Removing vector 88 of norm 0.0
18:43 gram_schmidt: Removing vector 89 of norm 0.0
18:43 gram_schmidt: Removing vector 90 of norm 0.0
18:43 gram_schmidt: Removing vector 91 of norm 0.0
18:43 gram_schmidt: Removing vector 92 of norm 0.0
18:43 gram_schmidt: Removing vector 93 of norm 0.0
18:43 gram_schmidt: Removing vector 94 of norm 0.0
18:43 gram_schmidt: Removing vector 95 of norm 0.0
18:43 gram_schmidt: Removing vector 96 of norm 0.0
18:43 gram_schmidt: Removing vector 97 of norm 0.0
18:43 gram_schmidt: Removing vector 98 of norm 0.0
18:43 gram_schmidt: Removing vector 99 of norm 0.0
18:43 gram_schmidt: Removing vector 100 of norm 0.0
18:43 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;5]" time="0.002637624740600586"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;6]" time="0.0018780231475830078"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;7]" time="0.002340078353881836"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;8]" time="0.18941283226013184"><system-err>18:43 gram_schmidt: Orthonormalizing vector 31 again
18:43 gram_schmidt: Removing linear dependent vector 32
18:43 gram_schmidt: Removing linear dependent vector 33
18:43 gram_schmidt: Removing linear dependent vector 34
18:43 gram_schmidt: Removing linear dependent vector 35
18:43 gram_schmidt: Removing linear dependent vector 36
18:43 gram_schmidt: Removing linear dependent vector 37
18:43 gram_schmidt: Removing linear dependent vector 38
18:43 gram_schmidt: Removing linear dependent vector 39
18:43 gram_schmidt: Removing linear dependent vector 40
18:43 gram_schmidt: Removing linear dependent vector 41
18:43 gram_schmidt: Removing linear dependent vector 42
18:43 gram_schmidt: Orthonormalizing vector 31 again
18:43 gram_schmidt: Removing linear dependent vector 32
18:43 gram_schmidt: Removing linear dependent vector 33
18:43 gram_schmidt: Removing linear dependent vector 34
18:43 gram_schmidt: Removing linear dependent vector 35
18:43 gram_schmidt: Removing linear dependent vector 36
18:43 gram_schmidt: Removing linear dependent vector 37
18:43 gram_schmidt: Removing linear dependent vector 38
18:43 gram_schmidt: Removing linear dependent vector 39
18:43 gram_schmidt: Removing linear dependent vector 40
18:43 gram_schmidt: Removing linear dependent vector 41
18:43 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;9]" time="0.026582002639770508"><system-err>18:43 gram_schmidt: Removing vector 0 of norm 0.0
18:43 gram_schmidt: Removing vector 1 of norm 0.0
18:43 gram_schmidt: Removing vector 2 of norm 0.0
18:43 gram_schmidt: Removing vector 3 of norm 0.0
18:43 gram_schmidt: Removing vector 4 of norm 0.0
18:43 gram_schmidt: Removing vector 5 of norm 0.0
18:43 gram_schmidt: Removing vector 6 of norm 0.0
18:43 gram_schmidt: Removing vector 7 of norm 0.0
18:43 gram_schmidt: Removing vector 8 of norm 0.0
18:43 gram_schmidt: Removing vector 9 of norm 0.0
18:43 gram_schmidt: Removing vector 10 of norm 0.0
18:43 gram_schmidt: Removing vector 11 of norm 0.0
18:43 gram_schmidt: Removing vector 12 of norm 0.0
18:43 gram_schmidt: Removing vector 13 of norm 0.0
18:43 gram_schmidt: Removing vector 14 of norm 0.0
18:43 gram_schmidt: Removing vector 15 of norm 0.0
18:43 gram_schmidt: Removing vector 16 of norm 0.0
18:43 gram_schmidt: Removing vector 17 of norm 0.0
18:43 gram_schmidt: Removing vector 18 of norm 0.0
18:43 gram_schmidt: Removing vector 19 of norm 0.0
18:43 gram_schmidt: Removing vector 20 of norm 0.0
18:43 gram_schmidt: Removing vector 21 of norm 0.0
18:43 gram_schmidt: Removing vector 22 of norm 0.0
18:43 gram_schmidt: Removing vector 23 of norm 0.0
18:43 gram_schmidt: Removing vector 24 of norm 0.0
18:43 gram_schmidt: Removing vector 25 of norm 0.0
18:43 gram_schmidt: Removing vector 26 of norm 0.0
18:43 gram_schmidt: Removing vector 27 of norm 0.0
18:43 gram_schmidt: Removing vector 28 of norm 0.0
18:43 gram_schmidt: Removing vector 29 of norm 0.0
18:43 gram_schmidt: Removing vector 30 of norm 0.0
18:43 gram_schmidt: Removing vector 31 of norm 0.0
18:43 gram_schmidt: Removing vector 32 of norm 0.0
18:43 gram_schmidt: Removing vector 33 of norm 0.0
18:43 gram_schmidt: Removing vector 34 of norm 0.0
18:43 gram_schmidt: Removing vector 35 of norm 0.0
18:43 gram_schmidt: Removing vector 36 of norm 0.0
18:43 gram_schmidt: Removing vector 37 of norm 0.0
18:43 gram_schmidt: Removing vector 38 of norm 0.0
18:43 gram_schmidt: Removing vector 39 of norm 0.0
18:43 gram_schmidt: Removing vector 40 of norm 0.0
18:43 gram_schmidt: Removing vector 41 of norm 0.0
18:43 gram_schmidt: Removing vector 42 of norm 0.0
18:43 gram_schmidt: Removing vector 43 of norm 0.0
18:43 gram_schmidt: Removing vector 44 of norm 0.0
18:43 gram_schmidt: Removing vector 45 of norm 0.0
18:43 gram_schmidt: Removing vector 46 of norm 0.0
18:43 gram_schmidt: Removing vector 47 of norm 0.0
18:43 gram_schmidt: Removing vector 48 of norm 0.0
18:43 gram_schmidt: Removing vector 49 of norm 0.0
18:43 gram_schmidt: Removing vector 50 of norm 0.0
18:43 gram_schmidt: Removing vector 51 of norm 0.0
18:43 gram_schmidt: Removing vector 52 of norm 0.0
18:43 gram_schmidt: Removing vector 53 of norm 0.0
18:43 gram_schmidt: Removing vector 54 of norm 0.0
18:43 gram_schmidt: Removing vector 55 of norm 0.0
18:43 gram_schmidt: Removing vector 56 of norm 0.0
18:43 gram_schmidt: Removing vector 57 of norm 0.0
18:43 gram_schmidt: Removing vector 58 of norm 0.0
18:43 gram_schmidt: Removing vector 59 of norm 0.0
18:43 gram_schmidt: Removing vector 60 of norm 0.0
18:43 gram_schmidt: Removing vector 61 of norm 0.0
18:43 gram_schmidt: Removing vector 62 of norm 0.0
18:43 gram_schmidt: Removing vector 63 of norm 0.0
18:43 gram_schmidt: Removing vector 64 of norm 0.0
18:43 gram_schmidt: Removing vector 65 of norm 0.0
18:43 gram_schmidt: Removing vector 66 of norm 0.0
18:43 gram_schmidt: Removing vector 67 of norm 0.0
18:43 gram_schmidt: Removing vector 68 of norm 0.0
18:43 gram_schmidt: Removing vector 69 of norm 0.0
18:43 gram_schmidt: Removing vector 70 of norm 0.0
18:43 gram_schmidt: Removing vector 71 of norm 0.0
18:43 gram_schmidt: Removing vector 72 of norm 0.0
18:43 gram_schmidt: Removing vector 73 of norm 0.0
18:43 gram_schmidt: Removing vector 74 of norm 0.0
18:43 gram_schmidt: Removing vector 75 of norm 0.0
18:43 gram_schmidt: Removing vector 76 of norm 0.0
18:43 gram_schmidt: Removing vector 77 of norm 0.0
18:43 gram_schmidt: Removing vector 78 of norm 0.0
18:43 gram_schmidt: Removing vector 79 of norm 0.0
18:43 gram_schmidt: Removing vector 80 of norm 0.0
18:43 gram_schmidt: Removing vector 81 of norm 0.0
18:43 gram_schmidt: Removing vector 82 of norm 0.0
18:43 gram_schmidt: Removing vector 83 of norm 0.0
18:43 gram_schmidt: Removing vector 84 of norm 0.0
18:43 gram_schmidt: Removing vector 85 of norm 0.0
18:43 gram_schmidt: Removing vector 86 of norm 0.0
18:43 gram_schmidt: Removing vector 87 of norm 0.0
18:43 gram_schmidt: Removing vector 88 of norm 0.0
18:43 gram_schmidt: Removing vector 89 of norm 0.0
18:43 gram_schmidt: Removing vector 90 of norm 0.0
18:43 gram_schmidt: Removing vector 91 of norm 0.0
18:43 gram_schmidt: Removing vector 92 of norm 0.0
18:43 gram_schmidt: Removing vector 93 of norm 0.0
18:43 gram_schmidt: Removing vector 94 of norm 0.0
18:43 gram_schmidt: Removing vector 95 of norm 0.0
18:43 gram_schmidt: Removing vector 96 of norm 0.0
18:43 gram_schmidt: Removing vector 97 of norm 0.0
18:43 gram_schmidt: Removing vector 98 of norm 0.0
18:43 gram_schmidt: Removing vector 99 of norm 0.0
18:43 gram_schmidt: Removing vector 100 of norm 0.0
18:43 gram_schmidt: Removing vector 101 of norm 0.0
18:43 gram_schmidt: Removing vector 0 of norm 0.0
18:43 gram_schmidt: Removing vector 1 of norm 0.0
18:43 gram_schmidt: Removing vector 2 of norm 0.0
18:43 gram_schmidt: Removing vector 3 of norm 0.0
18:43 gram_schmidt: Removing vector 4 of norm 0.0
18:43 gram_schmidt: Removing vector 5 of norm 0.0
18:43 gram_schmidt: Removing vector 6 of norm 0.0
18:43 gram_schmidt: Removing vector 7 of norm 0.0
18:43 gram_schmidt: Removing vector 8 of norm 0.0
18:43 gram_schmidt: Removing vector 9 of norm 0.0
18:43 gram_schmidt: Removing vector 10 of norm 0.0
18:43 gram_schmidt: Removing vector 11 of norm 0.0
18:43 gram_schmidt: Removing vector 12 of norm 0.0
18:43 gram_schmidt: Removing vector 13 of norm 0.0
18:43 gram_schmidt: Removing vector 14 of norm 0.0
18:43 gram_schmidt: Removing vector 15 of norm 0.0
18:43 gram_schmidt: Removing vector 16 of norm 0.0
18:43 gram_schmidt: Removing vector 17 of norm 0.0
18:43 gram_schmidt: Removing vector 18 of norm 0.0
18:43 gram_schmidt: Removing vector 19 of norm 0.0
18:43 gram_schmidt: Removing vector 20 of norm 0.0
18:43 gram_schmidt: Removing vector 21 of norm 0.0
18:43 gram_schmidt: Removing vector 22 of norm 0.0
18:43 gram_schmidt: Removing vector 23 of norm 0.0
18:43 gram_schmidt: Removing vector 24 of norm 0.0
18:43 gram_schmidt: Removing vector 25 of norm 0.0
18:43 gram_schmidt: Removing vector 26 of norm 0.0
18:43 gram_schmidt: Removing vector 27 of norm 0.0
18:43 gram_schmidt: Removing vector 28 of norm 0.0
18:43 gram_schmidt: Removing vector 29 of norm 0.0
18:43 gram_schmidt: Removing vector 30 of norm 0.0
18:43 gram_schmidt: Removing vector 31 of norm 0.0
18:43 gram_schmidt: Removing vector 32 of norm 0.0
18:43 gram_schmidt: Removing vector 33 of norm 0.0
18:43 gram_schmidt: Removing vector 34 of norm 0.0
18:43 gram_schmidt: Removing vector 35 of norm 0.0
18:43 gram_schmidt: Removing vector 36 of norm 0.0
18:43 gram_schmidt: Removing vector 37 of norm 0.0
18:43 gram_schmidt: Removing vector 38 of norm 0.0
18:43 gram_schmidt: Removing vector 39 of norm 0.0
18:43 gram_schmidt: Removing vector 40 of norm 0.0
18:43 gram_schmidt: Removing vector 41 of norm 0.0
18:43 gram_schmidt: Removing vector 42 of norm 0.0
18:43 gram_schmidt: Removing vector 43 of norm 0.0
18:43 gram_schmidt: Removing vector 44 of norm 0.0
18:43 gram_schmidt: Removing vector 45 of norm 0.0
18:43 gram_schmidt: Removing vector 46 of norm 0.0
18:43 gram_schmidt: Removing vector 47 of norm 0.0
18:43 gram_schmidt: Removing vector 48 of norm 0.0
18:43 gram_schmidt: Removing vector 49 of norm 0.0
18:43 gram_schmidt: Removing vector 50 of norm 0.0
18:43 gram_schmidt: Removing vector 51 of norm 0.0
18:43 gram_schmidt: Removing vector 52 of norm 0.0
18:43 gram_schmidt: Removing vector 53 of norm 0.0
18:43 gram_schmidt: Removing vector 54 of norm 0.0
18:43 gram_schmidt: Removing vector 55 of norm 0.0
18:43 gram_schmidt: Removing vector 56 of norm 0.0
18:43 gram_schmidt: Removing vector 57 of norm 0.0
18:43 gram_schmidt: Removing vector 58 of norm 0.0
18:43 gram_schmidt: Removing vector 59 of norm 0.0
18:43 gram_schmidt: Removing vector 60 of norm 0.0
18:43 gram_schmidt: Removing vector 61 of norm 0.0
18:43 gram_schmidt: Removing vector 62 of norm 0.0
18:43 gram_schmidt: Removing vector 63 of norm 0.0
18:43 gram_schmidt: Removing vector 64 of norm 0.0
18:43 gram_schmidt: Removing vector 65 of norm 0.0
18:43 gram_schmidt: Removing vector 66 of norm 0.0
18:43 gram_schmidt: Removing vector 67 of norm 0.0
18:43 gram_schmidt: Removing vector 68 of norm 0.0
18:43 gram_schmidt: Removing vector 69 of norm 0.0
18:43 gram_schmidt: Removing vector 70 of norm 0.0
18:43 gram_schmidt: Removing vector 71 of norm 0.0
18:43 gram_schmidt: Removing vector 72 of norm 0.0
18:43 gram_schmidt: Removing vector 73 of norm 0.0
18:43 gram_schmidt: Removing vector 74 of norm 0.0
18:43 gram_schmidt: Removing vector 75 of norm 0.0
18:43 gram_schmidt: Removing vector 76 of norm 0.0
18:43 gram_schmidt: Removing vector 77 of norm 0.0
18:43 gram_schmidt: Removing vector 78 of norm 0.0
18:43 gram_schmidt: Removing vector 79 of norm 0.0
18:43 gram_schmidt: Removing vector 80 of norm 0.0
18:43 gram_schmidt: Removing vector 81 of norm 0.0
18:43 gram_schmidt: Removing vector 82 of norm 0.0
18:43 gram_schmidt: Removing vector 83 of norm 0.0
18:43 gram_schmidt: Removing vector 84 of norm 0.0
18:43 gram_schmidt: Removing vector 85 of norm 0.0
18:43 gram_schmidt: Removing vector 86 of norm 0.0
18:43 gram_schmidt: Removing vector 87 of norm 0.0
18:43 gram_schmidt: Removing vector 88 of norm 0.0
18:43 gram_schmidt: Removing vector 89 of norm 0.0
18:43 gram_schmidt: Removing vector 90 of norm 0.0
18:43 gram_schmidt: Removing vector 91 of norm 0.0
18:43 gram_schmidt: Removing vector 92 of norm 0.0
18:43 gram_schmidt: Removing vector 93 of norm 0.0
18:43 gram_schmidt: Removing vector 94 of norm 0.0
18:43 gram_schmidt: Removing vector 95 of norm 0.0
18:43 gram_schmidt: Removing vector 96 of norm 0.0
18:43 gram_schmidt: Removing vector 97 of norm 0.0
18:43 gram_schmidt: Removing vector 98 of norm 0.0
18:43 gram_schmidt: Removing vector 99 of norm 0.0
18:43 gram_schmidt: Removing vector 100 of norm 0.0
18:43 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;10]" time="0.0033452510833740234"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;11]" time="0.006269693374633789"><system-err>18:43 gram_schmidt: Removing linear dependent vector 3
18:43 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;12]" time="0.003698110580444336"><system-err>18:43 gram_schmidt: Removing vector 0 of norm 0.0
18:43 gram_schmidt: Removing vector 1 of norm 0.0
18:43 gram_schmidt: Removing vector 2 of norm 0.0
18:43 gram_schmidt: Removing vector 0 of norm 0.0
18:43 gram_schmidt: Removing vector 1 of norm 0.0
18:43 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;13]" time="0.0025310516357421875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;14]" time="0.004487514495849609"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;15]" time="0.367445707321167"><system-err>18:43 gram_schmidt: Removing linear dependent vector 36
18:43 gram_schmidt: Removing linear dependent vector 37
18:43 gram_schmidt: Removing linear dependent vector 38
18:43 gram_schmidt: Removing linear dependent vector 39
18:43 gram_schmidt: Removing linear dependent vector 40
18:43 gram_schmidt: Removing linear dependent vector 41
18:43 gram_schmidt: Removing linear dependent vector 42
18:44 gram_schmidt: Removing linear dependent vector 36
18:44 gram_schmidt: Removing linear dependent vector 37
18:44 gram_schmidt: Removing linear dependent vector 38
18:44 gram_schmidt: Removing linear dependent vector 39
18:44 gram_schmidt: Removing linear dependent vector 40
18:44 gram_schmidt: Removing linear dependent vector 41
18:44 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;16]" time="0.1956164836883545"><system-err>18:44 gram_schmidt: Removing linear dependent vector 3
18:44 gram_schmidt: Removing linear dependent vector 4
18:44 gram_schmidt: Removing linear dependent vector 5
18:44 gram_schmidt: Removing linear dependent vector 6
18:44 gram_schmidt: Removing linear dependent vector 7
18:44 gram_schmidt: Removing linear dependent vector 8
18:44 gram_schmidt: Removing linear dependent vector 9
18:44 gram_schmidt: Removing linear dependent vector 10
18:44 gram_schmidt: Removing linear dependent vector 11
18:44 gram_schmidt: Removing linear dependent vector 12
18:44 gram_schmidt: Removing linear dependent vector 13
18:44 gram_schmidt: Removing linear dependent vector 14
18:44 gram_schmidt: Removing linear dependent vector 15
18:44 gram_schmidt: Removing linear dependent vector 16
18:44 gram_schmidt: Removing linear dependent vector 17
18:44 gram_schmidt: Removing linear dependent vector 18
18:44 gram_schmidt: Removing linear dependent vector 19
18:44 gram_schmidt: Removing linear dependent vector 20
18:44 gram_schmidt: Removing linear dependent vector 21
18:44 gram_schmidt: Removing linear dependent vector 22
18:44 gram_schmidt: Removing linear dependent vector 23
18:44 gram_schmidt: Removing linear dependent vector 24
18:44 gram_schmidt: Removing linear dependent vector 25
18:44 gram_schmidt: Removing linear dependent vector 26
18:44 gram_schmidt: Removing linear dependent vector 27
18:44 gram_schmidt: Removing linear dependent vector 28
18:44 gram_schmidt: Removing linear dependent vector 29
18:44 gram_schmidt: Removing linear dependent vector 30
18:44 gram_schmidt: Removing linear dependent vector 31
18:44 gram_schmidt: Removing linear dependent vector 32
18:44 gram_schmidt: Removing linear dependent vector 33
18:44 gram_schmidt: Removing linear dependent vector 34
18:44 gram_schmidt: Removing linear dependent vector 35
18:44 gram_schmidt: Removing linear dependent vector 36
18:44 gram_schmidt: Removing linear dependent vector 37
18:44 gram_schmidt: Removing linear dependent vector 38
18:44 gram_schmidt: Removing linear dependent vector 39
18:44 gram_schmidt: Removing linear dependent vector 40
18:44 gram_schmidt: Removing linear dependent vector 41
18:44 gram_schmidt: Removing linear dependent vector 42
18:44 gram_schmidt: Removing linear dependent vector 43
18:44 gram_schmidt: Removing linear dependent vector 44
18:44 gram_schmidt: Removing linear dependent vector 45
18:44 gram_schmidt: Removing linear dependent vector 46
18:44 gram_schmidt: Removing linear dependent vector 47
18:44 gram_schmidt: Removing linear dependent vector 48
18:44 gram_schmidt: Removing linear dependent vector 49
18:44 gram_schmidt: Removing linear dependent vector 50
18:44 gram_schmidt: Removing linear dependent vector 51
18:44 gram_schmidt: Removing linear dependent vector 52
18:44 gram_schmidt: Removing linear dependent vector 53
18:44 gram_schmidt: Removing linear dependent vector 54
18:44 gram_schmidt: Removing linear dependent vector 55
18:44 gram_schmidt: Removing linear dependent vector 56
18:44 gram_schmidt: Removing linear dependent vector 57
18:44 gram_schmidt: Removing linear dependent vector 58
18:44 gram_schmidt: Removing linear dependent vector 59
18:44 gram_schmidt: Removing linear dependent vector 60
18:44 gram_schmidt: Removing linear dependent vector 61
18:44 gram_schmidt: Removing linear dependent vector 62
18:44 gram_schmidt: Removing linear dependent vector 63
18:44 gram_schmidt: Removing linear dependent vector 64
18:44 gram_schmidt: Removing linear dependent vector 65
18:44 gram_schmidt: Removing linear dependent vector 66
18:44 gram_schmidt: Removing linear dependent vector 67
18:44 gram_schmidt: Removing linear dependent vector 68
18:44 gram_schmidt: Removing linear dependent vector 69
18:44 gram_schmidt: Removing linear dependent vector 70
18:44 gram_schmidt: Removing linear dependent vector 71
18:44 gram_schmidt: Removing linear dependent vector 72
18:44 gram_schmidt: Removing linear dependent vector 73
18:44 gram_schmidt: Removing linear dependent vector 74
18:44 gram_schmidt: Removing linear dependent vector 75
18:44 gram_schmidt: Removing linear dependent vector 76
18:44 gram_schmidt: Removing linear dependent vector 77
18:44 gram_schmidt: Removing linear dependent vector 78
18:44 gram_schmidt: Removing linear dependent vector 79
18:44 gram_schmidt: Removing linear dependent vector 80
18:44 gram_schmidt: Removing linear dependent vector 81
18:44 gram_schmidt: Removing linear dependent vector 82
18:44 gram_schmidt: Removing linear dependent vector 83
18:44 gram_schmidt: Removing linear dependent vector 84
18:44 gram_schmidt: Removing linear dependent vector 85
18:44 gram_schmidt: Removing linear dependent vector 86
18:44 gram_schmidt: Removing linear dependent vector 87
18:44 gram_schmidt: Removing linear dependent vector 88
18:44 gram_schmidt: Removing linear dependent vector 89
18:44 gram_schmidt: Removing linear dependent vector 90
18:44 gram_schmidt: Removing linear dependent vector 91
18:44 gram_schmidt: Removing linear dependent vector 92
18:44 gram_schmidt: Removing linear dependent vector 93
18:44 gram_schmidt: Removing linear dependent vector 94
18:44 gram_schmidt: Removing linear dependent vector 95
18:44 gram_schmidt: Removing linear dependent vector 96
18:44 gram_schmidt: Removing linear dependent vector 97
18:44 gram_schmidt: Removing linear dependent vector 98
18:44 gram_schmidt: Removing linear dependent vector 99
18:44 gram_schmidt: Removing linear dependent vector 100
18:44 gram_schmidt: Removing linear dependent vector 101
18:44 gram_schmidt: Removing linear dependent vector 3
18:44 gram_schmidt: Removing linear dependent vector 4
18:44 gram_schmidt: Removing linear dependent vector 5
18:44 gram_schmidt: Removing linear dependent vector 6
18:44 gram_schmidt: Removing linear dependent vector 7
18:44 gram_schmidt: Removing linear dependent vector 8
18:44 gram_schmidt: Removing linear dependent vector 9
18:44 gram_schmidt: Removing linear dependent vector 10
18:44 gram_schmidt: Removing linear dependent vector 11
18:44 gram_schmidt: Removing linear dependent vector 12
18:44 gram_schmidt: Removing linear dependent vector 13
18:44 gram_schmidt: Removing linear dependent vector 14
18:44 gram_schmidt: Removing linear dependent vector 15
18:44 gram_schmidt: Removing linear dependent vector 16
18:44 gram_schmidt: Removing linear dependent vector 17
18:44 gram_schmidt: Removing linear dependent vector 18
18:44 gram_schmidt: Removing linear dependent vector 19
18:44 gram_schmidt: Removing linear dependent vector 20
18:44 gram_schmidt: Removing linear dependent vector 21
18:44 gram_schmidt: Removing linear dependent vector 22
18:44 gram_schmidt: Removing linear dependent vector 23
18:44 gram_schmidt: Removing linear dependent vector 24
18:44 gram_schmidt: Removing linear dependent vector 25
18:44 gram_schmidt: Removing linear dependent vector 26
18:44 gram_schmidt: Removing linear dependent vector 27
18:44 gram_schmidt: Removing linear dependent vector 28
18:44 gram_schmidt: Removing linear dependent vector 29
18:44 gram_schmidt: Removing linear dependent vector 30
18:44 gram_schmidt: Removing linear dependent vector 31
18:44 gram_schmidt: Removing linear dependent vector 32
18:44 gram_schmidt: Removing linear dependent vector 33
18:44 gram_schmidt: Removing linear dependent vector 34
18:44 gram_schmidt: Removing linear dependent vector 35
18:44 gram_schmidt: Removing linear dependent vector 36
18:44 gram_schmidt: Removing linear dependent vector 37
18:44 gram_schmidt: Removing linear dependent vector 38
18:44 gram_schmidt: Removing linear dependent vector 39
18:44 gram_schmidt: Removing linear dependent vector 40
18:44 gram_schmidt: Removing linear dependent vector 41
18:44 gram_schmidt: Removing linear dependent vector 42
18:44 gram_schmidt: Removing linear dependent vector 43
18:44 gram_schmidt: Removing linear dependent vector 44
18:44 gram_schmidt: Removing linear dependent vector 45
18:44 gram_schmidt: Removing linear dependent vector 46
18:44 gram_schmidt: Removing linear dependent vector 47
18:44 gram_schmidt: Removing linear dependent vector 48
18:44 gram_schmidt: Removing linear dependent vector 49
18:44 gram_schmidt: Removing linear dependent vector 50
18:44 gram_schmidt: Removing linear dependent vector 51
18:44 gram_schmidt: Removing linear dependent vector 52
18:44 gram_schmidt: Removing linear dependent vector 53
18:44 gram_schmidt: Removing linear dependent vector 54
18:44 gram_schmidt: Removing linear dependent vector 55
18:44 gram_schmidt: Removing linear dependent vector 56
18:44 gram_schmidt: Removing linear dependent vector 57
18:44 gram_schmidt: Removing linear dependent vector 58
18:44 gram_schmidt: Removing linear dependent vector 59
18:44 gram_schmidt: Removing linear dependent vector 60
18:44 gram_schmidt: Removing linear dependent vector 61
18:44 gram_schmidt: Removing linear dependent vector 62
18:44 gram_schmidt: Removing linear dependent vector 63
18:44 gram_schmidt: Removing linear dependent vector 64
18:44 gram_schmidt: Removing linear dependent vector 65
18:44 gram_schmidt: Removing linear dependent vector 66
18:44 gram_schmidt: Removing linear dependent vector 67
18:44 gram_schmidt: Removing linear dependent vector 68
18:44 gram_schmidt: Removing linear dependent vector 69
18:44 gram_schmidt: Removing linear dependent vector 70
18:44 gram_schmidt: Removing linear dependent vector 71
18:44 gram_schmidt: Removing linear dependent vector 72
18:44 gram_schmidt: Removing linear dependent vector 73
18:44 gram_schmidt: Removing linear dependent vector 74
18:44 gram_schmidt: Removing linear dependent vector 75
18:44 gram_schmidt: Removing linear dependent vector 76
18:44 gram_schmidt: Removing linear dependent vector 77
18:44 gram_schmidt: Removing linear dependent vector 78
18:44 gram_schmidt: Removing linear dependent vector 79
18:44 gram_schmidt: Removing linear dependent vector 80
18:44 gram_schmidt: Removing linear dependent vector 81
18:44 gram_schmidt: Removing linear dependent vector 82
18:44 gram_schmidt: Removing linear dependent vector 83
18:44 gram_schmidt: Removing linear dependent vector 84
18:44 gram_schmidt: Removing linear dependent vector 85
18:44 gram_schmidt: Removing linear dependent vector 86
18:44 gram_schmidt: Removing linear dependent vector 87
18:44 gram_schmidt: Removing linear dependent vector 88
18:44 gram_schmidt: Removing linear dependent vector 89
18:44 gram_schmidt: Removing linear dependent vector 90
18:44 gram_schmidt: Removing linear dependent vector 91
18:44 gram_schmidt: Removing linear dependent vector 92
18:44 gram_schmidt: Removing linear dependent vector 93
18:44 gram_schmidt: Removing linear dependent vector 94
18:44 gram_schmidt: Removing linear dependent vector 95
18:44 gram_schmidt: Removing linear dependent vector 96
18:44 gram_schmidt: Removing linear dependent vector 97
18:44 gram_schmidt: Removing linear dependent vector 98
18:44 gram_schmidt: Removing linear dependent vector 99
18:44 gram_schmidt: Removing linear dependent vector 100
18:44 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;17]" time="0.0033936500549316406"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;18]" time="0.0026705265045166016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;19]" time="0.005228996276855469"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;20]" time="0.26937317848205566"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;21]" time="1.4214420318603516"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;22]" time="0.0025641918182373047"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;23]" time="0.0019409656524658203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;24]" time="0.008394241333007812"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;25]" time="0.39612436294555664"><system-err>18:46 gram_schmidt: Orthonormalizing vector 31 again
18:46 gram_schmidt: Removing linear dependent vector 32
18:46 gram_schmidt: Removing linear dependent vector 33
18:46 gram_schmidt: Removing linear dependent vector 34
18:46 gram_schmidt: Removing linear dependent vector 35
18:46 gram_schmidt: Removing linear dependent vector 36
18:46 gram_schmidt: Removing linear dependent vector 37
18:46 gram_schmidt: Removing linear dependent vector 38
18:46 gram_schmidt: Removing linear dependent vector 39
18:46 gram_schmidt: Removing linear dependent vector 40
18:46 gram_schmidt: Removing linear dependent vector 41
18:46 gram_schmidt: Removing linear dependent vector 42
18:46 gram_schmidt: Orthonormalizing vector 31 again
18:46 gram_schmidt: Removing linear dependent vector 32
18:46 gram_schmidt: Removing linear dependent vector 33
18:46 gram_schmidt: Removing linear dependent vector 34
18:46 gram_schmidt: Removing linear dependent vector 35
18:46 gram_schmidt: Removing linear dependent vector 36
18:46 gram_schmidt: Removing linear dependent vector 37
18:46 gram_schmidt: Removing linear dependent vector 38
18:46 gram_schmidt: Removing linear dependent vector 39
18:46 gram_schmidt: Removing linear dependent vector 40
18:46 gram_schmidt: Removing linear dependent vector 41
18:46 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;26]" time="0.23659181594848633"><system-err>18:46 gram_schmidt: Removing vector 0 of norm 0.0
18:46 gram_schmidt: Removing vector 1 of norm 0.0
18:46 gram_schmidt: Removing vector 2 of norm 0.0
18:46 gram_schmidt: Removing vector 3 of norm 0.0
18:46 gram_schmidt: Removing vector 4 of norm 0.0
18:46 gram_schmidt: Removing vector 5 of norm 0.0
18:46 gram_schmidt: Removing vector 6 of norm 0.0
18:46 gram_schmidt: Removing vector 7 of norm 0.0
18:46 gram_schmidt: Removing vector 8 of norm 0.0
18:46 gram_schmidt: Removing vector 9 of norm 0.0
18:46 gram_schmidt: Removing vector 10 of norm 0.0
18:46 gram_schmidt: Removing vector 11 of norm 0.0
18:46 gram_schmidt: Removing vector 12 of norm 0.0
18:46 gram_schmidt: Removing vector 13 of norm 0.0
18:46 gram_schmidt: Removing vector 14 of norm 0.0
18:46 gram_schmidt: Removing vector 15 of norm 0.0
18:46 gram_schmidt: Removing vector 16 of norm 0.0
18:46 gram_schmidt: Removing vector 17 of norm 0.0
18:46 gram_schmidt: Removing vector 18 of norm 0.0
18:46 gram_schmidt: Removing vector 19 of norm 0.0
18:46 gram_schmidt: Removing vector 20 of norm 0.0
18:46 gram_schmidt: Removing vector 21 of norm 0.0
18:46 gram_schmidt: Removing vector 22 of norm 0.0
18:46 gram_schmidt: Removing vector 23 of norm 0.0
18:46 gram_schmidt: Removing vector 24 of norm 0.0
18:46 gram_schmidt: Removing vector 25 of norm 0.0
18:46 gram_schmidt: Removing vector 26 of norm 0.0
18:46 gram_schmidt: Removing vector 27 of norm 0.0
18:46 gram_schmidt: Removing vector 28 of norm 0.0
18:46 gram_schmidt: Removing vector 29 of norm 0.0
18:46 gram_schmidt: Removing vector 30 of norm 0.0
18:46 gram_schmidt: Removing vector 31 of norm 0.0
18:46 gram_schmidt: Removing vector 32 of norm 0.0
18:46 gram_schmidt: Removing vector 33 of norm 0.0
18:46 gram_schmidt: Removing vector 34 of norm 0.0
18:46 gram_schmidt: Removing vector 35 of norm 0.0
18:46 gram_schmidt: Removing vector 36 of norm 0.0
18:46 gram_schmidt: Removing vector 37 of norm 0.0
18:46 gram_schmidt: Removing vector 38 of norm 0.0
18:46 gram_schmidt: Removing vector 39 of norm 0.0
18:46 gram_schmidt: Removing vector 40 of norm 0.0
18:46 gram_schmidt: Removing vector 41 of norm 0.0
18:46 gram_schmidt: Removing vector 42 of norm 0.0
18:46 gram_schmidt: Removing vector 43 of norm 0.0
18:46 gram_schmidt: Removing vector 44 of norm 0.0
18:46 gram_schmidt: Removing vector 45 of norm 0.0
18:46 gram_schmidt: Removing vector 46 of norm 0.0
18:46 gram_schmidt: Removing vector 47 of norm 0.0
18:46 gram_schmidt: Removing vector 48 of norm 0.0
18:46 gram_schmidt: Removing vector 49 of norm 0.0
18:46 gram_schmidt: Removing vector 50 of norm 0.0
18:46 gram_schmidt: Removing vector 51 of norm 0.0
18:46 gram_schmidt: Removing vector 52 of norm 0.0
18:46 gram_schmidt: Removing vector 53 of norm 0.0
18:46 gram_schmidt: Removing vector 54 of norm 0.0
18:46 gram_schmidt: Removing vector 55 of norm 0.0
18:46 gram_schmidt: Removing vector 56 of norm 0.0
18:46 gram_schmidt: Removing vector 57 of norm 0.0
18:46 gram_schmidt: Removing vector 58 of norm 0.0
18:46 gram_schmidt: Removing vector 59 of norm 0.0
18:46 gram_schmidt: Removing vector 60 of norm 0.0
18:46 gram_schmidt: Removing vector 61 of norm 0.0
18:46 gram_schmidt: Removing vector 62 of norm 0.0
18:46 gram_schmidt: Removing vector 63 of norm 0.0
18:46 gram_schmidt: Removing vector 64 of norm 0.0
18:46 gram_schmidt: Removing vector 65 of norm 0.0
18:46 gram_schmidt: Removing vector 66 of norm 0.0
18:46 gram_schmidt: Removing vector 67 of norm 0.0
18:46 gram_schmidt: Removing vector 68 of norm 0.0
18:46 gram_schmidt: Removing vector 69 of norm 0.0
18:46 gram_schmidt: Removing vector 70 of norm 0.0
18:46 gram_schmidt: Removing vector 71 of norm 0.0
18:46 gram_schmidt: Removing vector 72 of norm 0.0
18:46 gram_schmidt: Removing vector 73 of norm 0.0
18:46 gram_schmidt: Removing vector 74 of norm 0.0
18:46 gram_schmidt: Removing vector 75 of norm 0.0
18:46 gram_schmidt: Removing vector 76 of norm 0.0
18:46 gram_schmidt: Removing vector 77 of norm 0.0
18:46 gram_schmidt: Removing vector 78 of norm 0.0
18:46 gram_schmidt: Removing vector 79 of norm 0.0
18:46 gram_schmidt: Removing vector 80 of norm 0.0
18:46 gram_schmidt: Removing vector 81 of norm 0.0
18:46 gram_schmidt: Removing vector 82 of norm 0.0
18:46 gram_schmidt: Removing vector 83 of norm 0.0
18:46 gram_schmidt: Removing vector 84 of norm 0.0
18:46 gram_schmidt: Removing vector 85 of norm 0.0
18:46 gram_schmidt: Removing vector 86 of norm 0.0
18:46 gram_schmidt: Removing vector 87 of norm 0.0
18:46 gram_schmidt: Removing vector 88 of norm 0.0
18:46 gram_schmidt: Removing vector 89 of norm 0.0
18:46 gram_schmidt: Removing vector 90 of norm 0.0
18:46 gram_schmidt: Removing vector 91 of norm 0.0
18:46 gram_schmidt: Removing vector 92 of norm 0.0
18:46 gram_schmidt: Removing vector 93 of norm 0.0
18:46 gram_schmidt: Removing vector 94 of norm 0.0
18:46 gram_schmidt: Removing vector 95 of norm 0.0
18:46 gram_schmidt: Removing vector 96 of norm 0.0
18:46 gram_schmidt: Removing vector 97 of norm 0.0
18:46 gram_schmidt: Removing vector 98 of norm 0.0
18:46 gram_schmidt: Removing vector 99 of norm 0.0
18:46 gram_schmidt: Removing vector 100 of norm 0.0
18:46 gram_schmidt: Removing vector 101 of norm 0.0
18:46 gram_schmidt: Removing vector 0 of norm 0.0
18:46 gram_schmidt: Removing vector 1 of norm 0.0
18:46 gram_schmidt: Removing vector 2 of norm 0.0
18:46 gram_schmidt: Removing vector 3 of norm 0.0
18:46 gram_schmidt: Removing vector 4 of norm 0.0
18:46 gram_schmidt: Removing vector 5 of norm 0.0
18:46 gram_schmidt: Removing vector 6 of norm 0.0
18:46 gram_schmidt: Removing vector 7 of norm 0.0
18:46 gram_schmidt: Removing vector 8 of norm 0.0
18:46 gram_schmidt: Removing vector 9 of norm 0.0
18:46 gram_schmidt: Removing vector 10 of norm 0.0
18:46 gram_schmidt: Removing vector 11 of norm 0.0
18:46 gram_schmidt: Removing vector 12 of norm 0.0
18:46 gram_schmidt: Removing vector 13 of norm 0.0
18:46 gram_schmidt: Removing vector 14 of norm 0.0
18:46 gram_schmidt: Removing vector 15 of norm 0.0
18:46 gram_schmidt: Removing vector 16 of norm 0.0
18:46 gram_schmidt: Removing vector 17 of norm 0.0
18:46 gram_schmidt: Removing vector 18 of norm 0.0
18:46 gram_schmidt: Removing vector 19 of norm 0.0
18:46 gram_schmidt: Removing vector 20 of norm 0.0
18:46 gram_schmidt: Removing vector 21 of norm 0.0
18:46 gram_schmidt: Removing vector 22 of norm 0.0
18:46 gram_schmidt: Removing vector 23 of norm 0.0
18:46 gram_schmidt: Removing vector 24 of norm 0.0
18:46 gram_schmidt: Removing vector 25 of norm 0.0
18:46 gram_schmidt: Removing vector 26 of norm 0.0
18:46 gram_schmidt: Removing vector 27 of norm 0.0
18:46 gram_schmidt: Removing vector 28 of norm 0.0
18:46 gram_schmidt: Removing vector 29 of norm 0.0
18:46 gram_schmidt: Removing vector 30 of norm 0.0
18:46 gram_schmidt: Removing vector 31 of norm 0.0
18:46 gram_schmidt: Removing vector 32 of norm 0.0
18:46 gram_schmidt: Removing vector 33 of norm 0.0
18:46 gram_schmidt: Removing vector 34 of norm 0.0
18:46 gram_schmidt: Removing vector 35 of norm 0.0
18:46 gram_schmidt: Removing vector 36 of norm 0.0
18:46 gram_schmidt: Removing vector 37 of norm 0.0
18:46 gram_schmidt: Removing vector 38 of norm 0.0
18:46 gram_schmidt: Removing vector 39 of norm 0.0
18:46 gram_schmidt: Removing vector 40 of norm 0.0
18:46 gram_schmidt: Removing vector 41 of norm 0.0
18:46 gram_schmidt: Removing vector 42 of norm 0.0
18:46 gram_schmidt: Removing vector 43 of norm 0.0
18:46 gram_schmidt: Removing vector 44 of norm 0.0
18:46 gram_schmidt: Removing vector 45 of norm 0.0
18:46 gram_schmidt: Removing vector 46 of norm 0.0
18:46 gram_schmidt: Removing vector 47 of norm 0.0
18:46 gram_schmidt: Removing vector 48 of norm 0.0
18:46 gram_schmidt: Removing vector 49 of norm 0.0
18:46 gram_schmidt: Removing vector 50 of norm 0.0
18:46 gram_schmidt: Removing vector 51 of norm 0.0
18:46 gram_schmidt: Removing vector 52 of norm 0.0
18:46 gram_schmidt: Removing vector 53 of norm 0.0
18:46 gram_schmidt: Removing vector 54 of norm 0.0
18:46 gram_schmidt: Removing vector 55 of norm 0.0
18:46 gram_schmidt: Removing vector 56 of norm 0.0
18:46 gram_schmidt: Removing vector 57 of norm 0.0
18:46 gram_schmidt: Removing vector 58 of norm 0.0
18:46 gram_schmidt: Removing vector 59 of norm 0.0
18:46 gram_schmidt: Removing vector 60 of norm 0.0
18:46 gram_schmidt: Removing vector 61 of norm 0.0
18:46 gram_schmidt: Removing vector 62 of norm 0.0
18:46 gram_schmidt: Removing vector 63 of norm 0.0
18:46 gram_schmidt: Removing vector 64 of norm 0.0
18:46 gram_schmidt: Removing vector 65 of norm 0.0
18:46 gram_schmidt: Removing vector 66 of norm 0.0
18:46 gram_schmidt: Removing vector 67 of norm 0.0
18:46 gram_schmidt: Removing vector 68 of norm 0.0
18:46 gram_schmidt: Removing vector 69 of norm 0.0
18:46 gram_schmidt: Removing vector 70 of norm 0.0
18:46 gram_schmidt: Removing vector 71 of norm 0.0
18:46 gram_schmidt: Removing vector 72 of norm 0.0
18:46 gram_schmidt: Removing vector 73 of norm 0.0
18:46 gram_schmidt: Removing vector 74 of norm 0.0
18:46 gram_schmidt: Removing vector 75 of norm 0.0
18:46 gram_schmidt: Removing vector 76 of norm 0.0
18:46 gram_schmidt: Removing vector 77 of norm 0.0
18:46 gram_schmidt: Removing vector 78 of norm 0.0
18:46 gram_schmidt: Removing vector 79 of norm 0.0
18:46 gram_schmidt: Removing vector 80 of norm 0.0
18:46 gram_schmidt: Removing vector 81 of norm 0.0
18:46 gram_schmidt: Removing vector 82 of norm 0.0
18:46 gram_schmidt: Removing vector 83 of norm 0.0
18:46 gram_schmidt: Removing vector 84 of norm 0.0
18:46 gram_schmidt: Removing vector 85 of norm 0.0
18:46 gram_schmidt: Removing vector 86 of norm 0.0
18:46 gram_schmidt: Removing vector 87 of norm 0.0
18:46 gram_schmidt: Removing vector 88 of norm 0.0
18:46 gram_schmidt: Removing vector 89 of norm 0.0
18:46 gram_schmidt: Removing vector 90 of norm 0.0
18:46 gram_schmidt: Removing vector 91 of norm 0.0
18:46 gram_schmidt: Removing vector 92 of norm 0.0
18:46 gram_schmidt: Removing vector 93 of norm 0.0
18:46 gram_schmidt: Removing vector 94 of norm 0.0
18:46 gram_schmidt: Removing vector 95 of norm 0.0
18:46 gram_schmidt: Removing vector 96 of norm 0.0
18:46 gram_schmidt: Removing vector 97 of norm 0.0
18:46 gram_schmidt: Removing vector 98 of norm 0.0
18:46 gram_schmidt: Removing vector 99 of norm 0.0
18:46 gram_schmidt: Removing vector 100 of norm 0.0
18:46 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;0]" time="0.002835988998413086"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;1]" time="0.0020685195922851562"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;2]" time="0.0022804737091064453"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;3]" time="0.1026458740234375"><system-err>18:46 gram_schmidt: Orthonormalizing vector 31 again
18:46 gram_schmidt: Removing linear dependent vector 32
18:46 gram_schmidt: Removing linear dependent vector 33
18:46 gram_schmidt: Removing linear dependent vector 34
18:46 gram_schmidt: Removing linear dependent vector 35
18:46 gram_schmidt: Removing linear dependent vector 36
18:46 gram_schmidt: Removing linear dependent vector 37
18:46 gram_schmidt: Removing linear dependent vector 38
18:46 gram_schmidt: Removing linear dependent vector 39
18:46 gram_schmidt: Removing linear dependent vector 40
18:46 gram_schmidt: Removing linear dependent vector 41
18:46 gram_schmidt: Removing linear dependent vector 42
18:46 gram_schmidt: Orthonormalizing vector 31 again
18:46 gram_schmidt: Removing linear dependent vector 32
18:46 gram_schmidt: Removing linear dependent vector 33
18:46 gram_schmidt: Removing linear dependent vector 34
18:46 gram_schmidt: Removing linear dependent vector 35
18:46 gram_schmidt: Removing linear dependent vector 36
18:46 gram_schmidt: Removing linear dependent vector 37
18:46 gram_schmidt: Removing linear dependent vector 38
18:46 gram_schmidt: Removing linear dependent vector 39
18:46 gram_schmidt: Removing linear dependent vector 40
18:46 gram_schmidt: Removing linear dependent vector 41
18:46 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;4]" time="0.023249387741088867"><system-err>18:46 gram_schmidt: Removing vector 0 of norm 0.0
18:46 gram_schmidt: Removing vector 1 of norm 0.0
18:46 gram_schmidt: Removing vector 2 of norm 0.0
18:46 gram_schmidt: Removing vector 3 of norm 0.0
18:46 gram_schmidt: Removing vector 4 of norm 0.0
18:46 gram_schmidt: Removing vector 5 of norm 0.0
18:46 gram_schmidt: Removing vector 6 of norm 0.0
18:46 gram_schmidt: Removing vector 7 of norm 0.0
18:46 gram_schmidt: Removing vector 8 of norm 0.0
18:46 gram_schmidt: Removing vector 9 of norm 0.0
18:46 gram_schmidt: Removing vector 10 of norm 0.0
18:46 gram_schmidt: Removing vector 11 of norm 0.0
18:46 gram_schmidt: Removing vector 12 of norm 0.0
18:46 gram_schmidt: Removing vector 13 of norm 0.0
18:46 gram_schmidt: Removing vector 14 of norm 0.0
18:46 gram_schmidt: Removing vector 15 of norm 0.0
18:46 gram_schmidt: Removing vector 16 of norm 0.0
18:46 gram_schmidt: Removing vector 17 of norm 0.0
18:46 gram_schmidt: Removing vector 18 of norm 0.0
18:46 gram_schmidt: Removing vector 19 of norm 0.0
18:46 gram_schmidt: Removing vector 20 of norm 0.0
18:46 gram_schmidt: Removing vector 21 of norm 0.0
18:46 gram_schmidt: Removing vector 22 of norm 0.0
18:46 gram_schmidt: Removing vector 23 of norm 0.0
18:46 gram_schmidt: Removing vector 24 of norm 0.0
18:46 gram_schmidt: Removing vector 25 of norm 0.0
18:46 gram_schmidt: Removing vector 26 of norm 0.0
18:46 gram_schmidt: Removing vector 27 of norm 0.0
18:46 gram_schmidt: Removing vector 28 of norm 0.0
18:46 gram_schmidt: Removing vector 29 of norm 0.0
18:46 gram_schmidt: Removing vector 30 of norm 0.0
18:46 gram_schmidt: Removing vector 31 of norm 0.0
18:46 gram_schmidt: Removing vector 32 of norm 0.0
18:46 gram_schmidt: Removing vector 33 of norm 0.0
18:46 gram_schmidt: Removing vector 34 of norm 0.0
18:46 gram_schmidt: Removing vector 35 of norm 0.0
18:46 gram_schmidt: Removing vector 36 of norm 0.0
18:46 gram_schmidt: Removing vector 37 of norm 0.0
18:46 gram_schmidt: Removing vector 38 of norm 0.0
18:46 gram_schmidt: Removing vector 39 of norm 0.0
18:46 gram_schmidt: Removing vector 40 of norm 0.0
18:46 gram_schmidt: Removing vector 41 of norm 0.0
18:46 gram_schmidt: Removing vector 42 of norm 0.0
18:46 gram_schmidt: Removing vector 43 of norm 0.0
18:46 gram_schmidt: Removing vector 44 of norm 0.0
18:46 gram_schmidt: Removing vector 45 of norm 0.0
18:46 gram_schmidt: Removing vector 46 of norm 0.0
18:46 gram_schmidt: Removing vector 47 of norm 0.0
18:46 gram_schmidt: Removing vector 48 of norm 0.0
18:46 gram_schmidt: Removing vector 49 of norm 0.0
18:46 gram_schmidt: Removing vector 50 of norm 0.0
18:46 gram_schmidt: Removing vector 51 of norm 0.0
18:46 gram_schmidt: Removing vector 52 of norm 0.0
18:46 gram_schmidt: Removing vector 53 of norm 0.0
18:46 gram_schmidt: Removing vector 54 of norm 0.0
18:46 gram_schmidt: Removing vector 55 of norm 0.0
18:46 gram_schmidt: Removing vector 56 of norm 0.0
18:46 gram_schmidt: Removing vector 57 of norm 0.0
18:46 gram_schmidt: Removing vector 58 of norm 0.0
18:46 gram_schmidt: Removing vector 59 of norm 0.0
18:46 gram_schmidt: Removing vector 60 of norm 0.0
18:46 gram_schmidt: Removing vector 61 of norm 0.0
18:46 gram_schmidt: Removing vector 62 of norm 0.0
18:46 gram_schmidt: Removing vector 63 of norm 0.0
18:46 gram_schmidt: Removing vector 64 of norm 0.0
18:46 gram_schmidt: Removing vector 65 of norm 0.0
18:46 gram_schmidt: Removing vector 66 of norm 0.0
18:46 gram_schmidt: Removing vector 67 of norm 0.0
18:46 gram_schmidt: Removing vector 68 of norm 0.0
18:46 gram_schmidt: Removing vector 69 of norm 0.0
18:46 gram_schmidt: Removing vector 70 of norm 0.0
18:46 gram_schmidt: Removing vector 71 of norm 0.0
18:46 gram_schmidt: Removing vector 72 of norm 0.0
18:46 gram_schmidt: Removing vector 73 of norm 0.0
18:46 gram_schmidt: Removing vector 74 of norm 0.0
18:46 gram_schmidt: Removing vector 75 of norm 0.0
18:46 gram_schmidt: Removing vector 76 of norm 0.0
18:46 gram_schmidt: Removing vector 77 of norm 0.0
18:46 gram_schmidt: Removing vector 78 of norm 0.0
18:46 gram_schmidt: Removing vector 79 of norm 0.0
18:46 gram_schmidt: Removing vector 80 of norm 0.0
18:46 gram_schmidt: Removing vector 81 of norm 0.0
18:46 gram_schmidt: Removing vector 82 of norm 0.0
18:46 gram_schmidt: Removing vector 83 of norm 0.0
18:46 gram_schmidt: Removing vector 84 of norm 0.0
18:46 gram_schmidt: Removing vector 85 of norm 0.0
18:46 gram_schmidt: Removing vector 86 of norm 0.0
18:46 gram_schmidt: Removing vector 87 of norm 0.0
18:46 gram_schmidt: Removing vector 88 of norm 0.0
18:46 gram_schmidt: Removing vector 89 of norm 0.0
18:46 gram_schmidt: Removing vector 90 of norm 0.0
18:46 gram_schmidt: Removing vector 91 of norm 0.0
18:46 gram_schmidt: Removing vector 92 of norm 0.0
18:46 gram_schmidt: Removing vector 93 of norm 0.0
18:46 gram_schmidt: Removing vector 94 of norm 0.0
18:46 gram_schmidt: Removing vector 95 of norm 0.0
18:46 gram_schmidt: Removing vector 96 of norm 0.0
18:46 gram_schmidt: Removing vector 97 of norm 0.0
18:46 gram_schmidt: Removing vector 98 of norm 0.0
18:46 gram_schmidt: Removing vector 99 of norm 0.0
18:46 gram_schmidt: Removing vector 100 of norm 0.0
18:46 gram_schmidt: Removing vector 101 of norm 0.0
18:46 gram_schmidt: Removing vector 0 of norm 0.0
18:46 gram_schmidt: Removing vector 1 of norm 0.0
18:46 gram_schmidt: Removing vector 2 of norm 0.0
18:46 gram_schmidt: Removing vector 3 of norm 0.0
18:46 gram_schmidt: Removing vector 4 of norm 0.0
18:46 gram_schmidt: Removing vector 5 of norm 0.0
18:46 gram_schmidt: Removing vector 6 of norm 0.0
18:46 gram_schmidt: Removing vector 7 of norm 0.0
18:46 gram_schmidt: Removing vector 8 of norm 0.0
18:46 gram_schmidt: Removing vector 9 of norm 0.0
18:46 gram_schmidt: Removing vector 10 of norm 0.0
18:46 gram_schmidt: Removing vector 11 of norm 0.0
18:46 gram_schmidt: Removing vector 12 of norm 0.0
18:46 gram_schmidt: Removing vector 13 of norm 0.0
18:46 gram_schmidt: Removing vector 14 of norm 0.0
18:46 gram_schmidt: Removing vector 15 of norm 0.0
18:46 gram_schmidt: Removing vector 16 of norm 0.0
18:46 gram_schmidt: Removing vector 17 of norm 0.0
18:46 gram_schmidt: Removing vector 18 of norm 0.0
18:46 gram_schmidt: Removing vector 19 of norm 0.0
18:46 gram_schmidt: Removing vector 20 of norm 0.0
18:46 gram_schmidt: Removing vector 21 of norm 0.0
18:46 gram_schmidt: Removing vector 22 of norm 0.0
18:46 gram_schmidt: Removing vector 23 of norm 0.0
18:46 gram_schmidt: Removing vector 24 of norm 0.0
18:46 gram_schmidt: Removing vector 25 of norm 0.0
18:46 gram_schmidt: Removing vector 26 of norm 0.0
18:46 gram_schmidt: Removing vector 27 of norm 0.0
18:46 gram_schmidt: Removing vector 28 of norm 0.0
18:46 gram_schmidt: Removing vector 29 of norm 0.0
18:46 gram_schmidt: Removing vector 30 of norm 0.0
18:46 gram_schmidt: Removing vector 31 of norm 0.0
18:46 gram_schmidt: Removing vector 32 of norm 0.0
18:46 gram_schmidt: Removing vector 33 of norm 0.0
18:46 gram_schmidt: Removing vector 34 of norm 0.0
18:46 gram_schmidt: Removing vector 35 of norm 0.0
18:46 gram_schmidt: Removing vector 36 of norm 0.0
18:46 gram_schmidt: Removing vector 37 of norm 0.0
18:46 gram_schmidt: Removing vector 38 of norm 0.0
18:46 gram_schmidt: Removing vector 39 of norm 0.0
18:46 gram_schmidt: Removing vector 40 of norm 0.0
18:46 gram_schmidt: Removing vector 41 of norm 0.0
18:46 gram_schmidt: Removing vector 42 of norm 0.0
18:46 gram_schmidt: Removing vector 43 of norm 0.0
18:46 gram_schmidt: Removing vector 44 of norm 0.0
18:46 gram_schmidt: Removing vector 45 of norm 0.0
18:46 gram_schmidt: Removing vector 46 of norm 0.0
18:46 gram_schmidt: Removing vector 47 of norm 0.0
18:46 gram_schmidt: Removing vector 48 of norm 0.0
18:46 gram_schmidt: Removing vector 49 of norm 0.0
18:46 gram_schmidt: Removing vector 50 of norm 0.0
18:46 gram_schmidt: Removing vector 51 of norm 0.0
18:46 gram_schmidt: Removing vector 52 of norm 0.0
18:46 gram_schmidt: Removing vector 53 of norm 0.0
18:46 gram_schmidt: Removing vector 54 of norm 0.0
18:46 gram_schmidt: Removing vector 55 of norm 0.0
18:46 gram_schmidt: Removing vector 56 of norm 0.0
18:46 gram_schmidt: Removing vector 57 of norm 0.0
18:46 gram_schmidt: Removing vector 58 of norm 0.0
18:46 gram_schmidt: Removing vector 59 of norm 0.0
18:46 gram_schmidt: Removing vector 60 of norm 0.0
18:46 gram_schmidt: Removing vector 61 of norm 0.0
18:46 gram_schmidt: Removing vector 62 of norm 0.0
18:46 gram_schmidt: Removing vector 63 of norm 0.0
18:46 gram_schmidt: Removing vector 64 of norm 0.0
18:46 gram_schmidt: Removing vector 65 of norm 0.0
18:46 gram_schmidt: Removing vector 66 of norm 0.0
18:46 gram_schmidt: Removing vector 67 of norm 0.0
18:46 gram_schmidt: Removing vector 68 of norm 0.0
18:46 gram_schmidt: Removing vector 69 of norm 0.0
18:46 gram_schmidt: Removing vector 70 of norm 0.0
18:46 gram_schmidt: Removing vector 71 of norm 0.0
18:46 gram_schmidt: Removing vector 72 of norm 0.0
18:46 gram_schmidt: Removing vector 73 of norm 0.0
18:46 gram_schmidt: Removing vector 74 of norm 0.0
18:46 gram_schmidt: Removing vector 75 of norm 0.0
18:46 gram_schmidt: Removing vector 76 of norm 0.0
18:46 gram_schmidt: Removing vector 77 of norm 0.0
18:46 gram_schmidt: Removing vector 78 of norm 0.0
18:46 gram_schmidt: Removing vector 79 of norm 0.0
18:46 gram_schmidt: Removing vector 80 of norm 0.0
18:46 gram_schmidt: Removing vector 81 of norm 0.0
18:46 gram_schmidt: Removing vector 82 of norm 0.0
18:46 gram_schmidt: Removing vector 83 of norm 0.0
18:46 gram_schmidt: Removing vector 84 of norm 0.0
18:46 gram_schmidt: Removing vector 85 of norm 0.0
18:46 gram_schmidt: Removing vector 86 of norm 0.0
18:46 gram_schmidt: Removing vector 87 of norm 0.0
18:46 gram_schmidt: Removing vector 88 of norm 0.0
18:46 gram_schmidt: Removing vector 89 of norm 0.0
18:46 gram_schmidt: Removing vector 90 of norm 0.0
18:46 gram_schmidt: Removing vector 91 of norm 0.0
18:46 gram_schmidt: Removing vector 92 of norm 0.0
18:46 gram_schmidt: Removing vector 93 of norm 0.0
18:46 gram_schmidt: Removing vector 94 of norm 0.0
18:46 gram_schmidt: Removing vector 95 of norm 0.0
18:46 gram_schmidt: Removing vector 96 of norm 0.0
18:46 gram_schmidt: Removing vector 97 of norm 0.0
18:46 gram_schmidt: Removing vector 98 of norm 0.0
18:46 gram_schmidt: Removing vector 99 of norm 0.0
18:46 gram_schmidt: Removing vector 100 of norm 0.0
18:46 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;5]" time="0.0028295516967773438"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;6]" time="0.002165079116821289"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;7]" time="0.002808809280395508"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;8]" time="0.20688438415527344"><system-err>18:46 gram_schmidt: Orthonormalizing vector 31 again
18:46 gram_schmidt: Removing linear dependent vector 32
18:46 gram_schmidt: Removing linear dependent vector 33
18:46 gram_schmidt: Removing linear dependent vector 34
18:46 gram_schmidt: Removing linear dependent vector 35
18:46 gram_schmidt: Removing linear dependent vector 36
18:46 gram_schmidt: Removing linear dependent vector 37
18:46 gram_schmidt: Removing linear dependent vector 38
18:46 gram_schmidt: Removing linear dependent vector 39
18:46 gram_schmidt: Removing linear dependent vector 40
18:46 gram_schmidt: Removing linear dependent vector 41
18:46 gram_schmidt: Removing linear dependent vector 42
18:47 gram_schmidt: Orthonormalizing vector 31 again
18:47 gram_schmidt: Removing linear dependent vector 32
18:47 gram_schmidt: Removing linear dependent vector 33
18:47 gram_schmidt: Removing linear dependent vector 34
18:47 gram_schmidt: Removing linear dependent vector 35
18:47 gram_schmidt: Removing linear dependent vector 36
18:47 gram_schmidt: Removing linear dependent vector 37
18:47 gram_schmidt: Removing linear dependent vector 38
18:47 gram_schmidt: Removing linear dependent vector 39
18:47 gram_schmidt: Removing linear dependent vector 40
18:47 gram_schmidt: Removing linear dependent vector 41
18:47 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;9]" time="0.030848979949951172"><system-err>18:47 gram_schmidt: Removing vector 0 of norm 0.0
18:47 gram_schmidt: Removing vector 1 of norm 0.0
18:47 gram_schmidt: Removing vector 2 of norm 0.0
18:47 gram_schmidt: Removing vector 3 of norm 0.0
18:47 gram_schmidt: Removing vector 4 of norm 0.0
18:47 gram_schmidt: Removing vector 5 of norm 0.0
18:47 gram_schmidt: Removing vector 6 of norm 0.0
18:47 gram_schmidt: Removing vector 7 of norm 0.0
18:47 gram_schmidt: Removing vector 8 of norm 0.0
18:47 gram_schmidt: Removing vector 9 of norm 0.0
18:47 gram_schmidt: Removing vector 10 of norm 0.0
18:47 gram_schmidt: Removing vector 11 of norm 0.0
18:47 gram_schmidt: Removing vector 12 of norm 0.0
18:47 gram_schmidt: Removing vector 13 of norm 0.0
18:47 gram_schmidt: Removing vector 14 of norm 0.0
18:47 gram_schmidt: Removing vector 15 of norm 0.0
18:47 gram_schmidt: Removing vector 16 of norm 0.0
18:47 gram_schmidt: Removing vector 17 of norm 0.0
18:47 gram_schmidt: Removing vector 18 of norm 0.0
18:47 gram_schmidt: Removing vector 19 of norm 0.0
18:47 gram_schmidt: Removing vector 20 of norm 0.0
18:47 gram_schmidt: Removing vector 21 of norm 0.0
18:47 gram_schmidt: Removing vector 22 of norm 0.0
18:47 gram_schmidt: Removing vector 23 of norm 0.0
18:47 gram_schmidt: Removing vector 24 of norm 0.0
18:47 gram_schmidt: Removing vector 25 of norm 0.0
18:47 gram_schmidt: Removing vector 26 of norm 0.0
18:47 gram_schmidt: Removing vector 27 of norm 0.0
18:47 gram_schmidt: Removing vector 28 of norm 0.0
18:47 gram_schmidt: Removing vector 29 of norm 0.0
18:47 gram_schmidt: Removing vector 30 of norm 0.0
18:47 gram_schmidt: Removing vector 31 of norm 0.0
18:47 gram_schmidt: Removing vector 32 of norm 0.0
18:47 gram_schmidt: Removing vector 33 of norm 0.0
18:47 gram_schmidt: Removing vector 34 of norm 0.0
18:47 gram_schmidt: Removing vector 35 of norm 0.0
18:47 gram_schmidt: Removing vector 36 of norm 0.0
18:47 gram_schmidt: Removing vector 37 of norm 0.0
18:47 gram_schmidt: Removing vector 38 of norm 0.0
18:47 gram_schmidt: Removing vector 39 of norm 0.0
18:47 gram_schmidt: Removing vector 40 of norm 0.0
18:47 gram_schmidt: Removing vector 41 of norm 0.0
18:47 gram_schmidt: Removing vector 42 of norm 0.0
18:47 gram_schmidt: Removing vector 43 of norm 0.0
18:47 gram_schmidt: Removing vector 44 of norm 0.0
18:47 gram_schmidt: Removing vector 45 of norm 0.0
18:47 gram_schmidt: Removing vector 46 of norm 0.0
18:47 gram_schmidt: Removing vector 47 of norm 0.0
18:47 gram_schmidt: Removing vector 48 of norm 0.0
18:47 gram_schmidt: Removing vector 49 of norm 0.0
18:47 gram_schmidt: Removing vector 50 of norm 0.0
18:47 gram_schmidt: Removing vector 51 of norm 0.0
18:47 gram_schmidt: Removing vector 52 of norm 0.0
18:47 gram_schmidt: Removing vector 53 of norm 0.0
18:47 gram_schmidt: Removing vector 54 of norm 0.0
18:47 gram_schmidt: Removing vector 55 of norm 0.0
18:47 gram_schmidt: Removing vector 56 of norm 0.0
18:47 gram_schmidt: Removing vector 57 of norm 0.0
18:47 gram_schmidt: Removing vector 58 of norm 0.0
18:47 gram_schmidt: Removing vector 59 of norm 0.0
18:47 gram_schmidt: Removing vector 60 of norm 0.0
18:47 gram_schmidt: Removing vector 61 of norm 0.0
18:47 gram_schmidt: Removing vector 62 of norm 0.0
18:47 gram_schmidt: Removing vector 63 of norm 0.0
18:47 gram_schmidt: Removing vector 64 of norm 0.0
18:47 gram_schmidt: Removing vector 65 of norm 0.0
18:47 gram_schmidt: Removing vector 66 of norm 0.0
18:47 gram_schmidt: Removing vector 67 of norm 0.0
18:47 gram_schmidt: Removing vector 68 of norm 0.0
18:47 gram_schmidt: Removing vector 69 of norm 0.0
18:47 gram_schmidt: Removing vector 70 of norm 0.0
18:47 gram_schmidt: Removing vector 71 of norm 0.0
18:47 gram_schmidt: Removing vector 72 of norm 0.0
18:47 gram_schmidt: Removing vector 73 of norm 0.0
18:47 gram_schmidt: Removing vector 74 of norm 0.0
18:47 gram_schmidt: Removing vector 75 of norm 0.0
18:47 gram_schmidt: Removing vector 76 of norm 0.0
18:47 gram_schmidt: Removing vector 77 of norm 0.0
18:47 gram_schmidt: Removing vector 78 of norm 0.0
18:47 gram_schmidt: Removing vector 79 of norm 0.0
18:47 gram_schmidt: Removing vector 80 of norm 0.0
18:47 gram_schmidt: Removing vector 81 of norm 0.0
18:47 gram_schmidt: Removing vector 82 of norm 0.0
18:47 gram_schmidt: Removing vector 83 of norm 0.0
18:47 gram_schmidt: Removing vector 84 of norm 0.0
18:47 gram_schmidt: Removing vector 85 of norm 0.0
18:47 gram_schmidt: Removing vector 86 of norm 0.0
18:47 gram_schmidt: Removing vector 87 of norm 0.0
18:47 gram_schmidt: Removing vector 88 of norm 0.0
18:47 gram_schmidt: Removing vector 89 of norm 0.0
18:47 gram_schmidt: Removing vector 90 of norm 0.0
18:47 gram_schmidt: Removing vector 91 of norm 0.0
18:47 gram_schmidt: Removing vector 92 of norm 0.0
18:47 gram_schmidt: Removing vector 93 of norm 0.0
18:47 gram_schmidt: Removing vector 94 of norm 0.0
18:47 gram_schmidt: Removing vector 95 of norm 0.0
18:47 gram_schmidt: Removing vector 96 of norm 0.0
18:47 gram_schmidt: Removing vector 97 of norm 0.0
18:47 gram_schmidt: Removing vector 98 of norm 0.0
18:47 gram_schmidt: Removing vector 99 of norm 0.0
18:47 gram_schmidt: Removing vector 100 of norm 0.0
18:47 gram_schmidt: Removing vector 101 of norm 0.0
18:47 gram_schmidt: Removing vector 0 of norm 0.0
18:47 gram_schmidt: Removing vector 1 of norm 0.0
18:47 gram_schmidt: Removing vector 2 of norm 0.0
18:47 gram_schmidt: Removing vector 3 of norm 0.0
18:47 gram_schmidt: Removing vector 4 of norm 0.0
18:47 gram_schmidt: Removing vector 5 of norm 0.0
18:47 gram_schmidt: Removing vector 6 of norm 0.0
18:47 gram_schmidt: Removing vector 7 of norm 0.0
18:47 gram_schmidt: Removing vector 8 of norm 0.0
18:47 gram_schmidt: Removing vector 9 of norm 0.0
18:47 gram_schmidt: Removing vector 10 of norm 0.0
18:47 gram_schmidt: Removing vector 11 of norm 0.0
18:47 gram_schmidt: Removing vector 12 of norm 0.0
18:47 gram_schmidt: Removing vector 13 of norm 0.0
18:47 gram_schmidt: Removing vector 14 of norm 0.0
18:47 gram_schmidt: Removing vector 15 of norm 0.0
18:47 gram_schmidt: Removing vector 16 of norm 0.0
18:47 gram_schmidt: Removing vector 17 of norm 0.0
18:47 gram_schmidt: Removing vector 18 of norm 0.0
18:47 gram_schmidt: Removing vector 19 of norm 0.0
18:47 gram_schmidt: Removing vector 20 of norm 0.0
18:47 gram_schmidt: Removing vector 21 of norm 0.0
18:47 gram_schmidt: Removing vector 22 of norm 0.0
18:47 gram_schmidt: Removing vector 23 of norm 0.0
18:47 gram_schmidt: Removing vector 24 of norm 0.0
18:47 gram_schmidt: Removing vector 25 of norm 0.0
18:47 gram_schmidt: Removing vector 26 of norm 0.0
18:47 gram_schmidt: Removing vector 27 of norm 0.0
18:47 gram_schmidt: Removing vector 28 of norm 0.0
18:47 gram_schmidt: Removing vector 29 of norm 0.0
18:47 gram_schmidt: Removing vector 30 of norm 0.0
18:47 gram_schmidt: Removing vector 31 of norm 0.0
18:47 gram_schmidt: Removing vector 32 of norm 0.0
18:47 gram_schmidt: Removing vector 33 of norm 0.0
18:47 gram_schmidt: Removing vector 34 of norm 0.0
18:47 gram_schmidt: Removing vector 35 of norm 0.0
18:47 gram_schmidt: Removing vector 36 of norm 0.0
18:47 gram_schmidt: Removing vector 37 of norm 0.0
18:47 gram_schmidt: Removing vector 38 of norm 0.0
18:47 gram_schmidt: Removing vector 39 of norm 0.0
18:47 gram_schmidt: Removing vector 40 of norm 0.0
18:47 gram_schmidt: Removing vector 41 of norm 0.0
18:47 gram_schmidt: Removing vector 42 of norm 0.0
18:47 gram_schmidt: Removing vector 43 of norm 0.0
18:47 gram_schmidt: Removing vector 44 of norm 0.0
18:47 gram_schmidt: Removing vector 45 of norm 0.0
18:47 gram_schmidt: Removing vector 46 of norm 0.0
18:47 gram_schmidt: Removing vector 47 of norm 0.0
18:47 gram_schmidt: Removing vector 48 of norm 0.0
18:47 gram_schmidt: Removing vector 49 of norm 0.0
18:47 gram_schmidt: Removing vector 50 of norm 0.0
18:47 gram_schmidt: Removing vector 51 of norm 0.0
18:47 gram_schmidt: Removing vector 52 of norm 0.0
18:47 gram_schmidt: Removing vector 53 of norm 0.0
18:47 gram_schmidt: Removing vector 54 of norm 0.0
18:47 gram_schmidt: Removing vector 55 of norm 0.0
18:47 gram_schmidt: Removing vector 56 of norm 0.0
18:47 gram_schmidt: Removing vector 57 of norm 0.0
18:47 gram_schmidt: Removing vector 58 of norm 0.0
18:47 gram_schmidt: Removing vector 59 of norm 0.0
18:47 gram_schmidt: Removing vector 60 of norm 0.0
18:47 gram_schmidt: Removing vector 61 of norm 0.0
18:47 gram_schmidt: Removing vector 62 of norm 0.0
18:47 gram_schmidt: Removing vector 63 of norm 0.0
18:47 gram_schmidt: Removing vector 64 of norm 0.0
18:47 gram_schmidt: Removing vector 65 of norm 0.0
18:47 gram_schmidt: Removing vector 66 of norm 0.0
18:47 gram_schmidt: Removing vector 67 of norm 0.0
18:47 gram_schmidt: Removing vector 68 of norm 0.0
18:47 gram_schmidt: Removing vector 69 of norm 0.0
18:47 gram_schmidt: Removing vector 70 of norm 0.0
18:47 gram_schmidt: Removing vector 71 of norm 0.0
18:47 gram_schmidt: Removing vector 72 of norm 0.0
18:47 gram_schmidt: Removing vector 73 of norm 0.0
18:47 gram_schmidt: Removing vector 74 of norm 0.0
18:47 gram_schmidt: Removing vector 75 of norm 0.0
18:47 gram_schmidt: Removing vector 76 of norm 0.0
18:47 gram_schmidt: Removing vector 77 of norm 0.0
18:47 gram_schmidt: Removing vector 78 of norm 0.0
18:47 gram_schmidt: Removing vector 79 of norm 0.0
18:47 gram_schmidt: Removing vector 80 of norm 0.0
18:47 gram_schmidt: Removing vector 81 of norm 0.0
18:47 gram_schmidt: Removing vector 82 of norm 0.0
18:47 gram_schmidt: Removing vector 83 of norm 0.0
18:47 gram_schmidt: Removing vector 84 of norm 0.0
18:47 gram_schmidt: Removing vector 85 of norm 0.0
18:47 gram_schmidt: Removing vector 86 of norm 0.0
18:47 gram_schmidt: Removing vector 87 of norm 0.0
18:47 gram_schmidt: Removing vector 88 of norm 0.0
18:47 gram_schmidt: Removing vector 89 of norm 0.0
18:47 gram_schmidt: Removing vector 90 of norm 0.0
18:47 gram_schmidt: Removing vector 91 of norm 0.0
18:47 gram_schmidt: Removing vector 92 of norm 0.0
18:47 gram_schmidt: Removing vector 93 of norm 0.0
18:47 gram_schmidt: Removing vector 94 of norm 0.0
18:47 gram_schmidt: Removing vector 95 of norm 0.0
18:47 gram_schmidt: Removing vector 96 of norm 0.0
18:47 gram_schmidt: Removing vector 97 of norm 0.0
18:47 gram_schmidt: Removing vector 98 of norm 0.0
18:47 gram_schmidt: Removing vector 99 of norm 0.0
18:47 gram_schmidt: Removing vector 100 of norm 0.0
18:47 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;10]" time="0.0035505294799804688"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;11]" time="0.006975889205932617"><system-err>18:47 gram_schmidt: Removing linear dependent vector 3
18:47 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;12]" time="0.004118680953979492"><system-err>18:47 gram_schmidt: Removing vector 0 of norm 0.0
18:47 gram_schmidt: Removing vector 1 of norm 0.0
18:47 gram_schmidt: Removing vector 2 of norm 0.0
18:47 gram_schmidt: Removing vector 0 of norm 0.0
18:47 gram_schmidt: Removing vector 1 of norm 0.0
18:47 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;13]" time="0.002912282943725586"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;14]" time="0.005271196365356445"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;15]" time="0.39647722244262695"><system-err>18:47 gram_schmidt: Removing linear dependent vector 36
18:47 gram_schmidt: Removing linear dependent vector 37
18:47 gram_schmidt: Removing linear dependent vector 38
18:47 gram_schmidt: Removing linear dependent vector 39
18:47 gram_schmidt: Removing linear dependent vector 40
18:47 gram_schmidt: Removing linear dependent vector 41
18:47 gram_schmidt: Removing linear dependent vector 42
18:47 gram_schmidt: Removing linear dependent vector 36
18:47 gram_schmidt: Removing linear dependent vector 37
18:47 gram_schmidt: Removing linear dependent vector 38
18:47 gram_schmidt: Removing linear dependent vector 39
18:47 gram_schmidt: Removing linear dependent vector 40
18:47 gram_schmidt: Removing linear dependent vector 41
18:47 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;16]" time="0.2126293182373047"><system-err>18:47 gram_schmidt: Removing linear dependent vector 3
18:47 gram_schmidt: Removing linear dependent vector 4
18:47 gram_schmidt: Removing linear dependent vector 5
18:47 gram_schmidt: Removing linear dependent vector 6
18:47 gram_schmidt: Removing linear dependent vector 7
18:47 gram_schmidt: Removing linear dependent vector 8
18:47 gram_schmidt: Removing linear dependent vector 9
18:47 gram_schmidt: Removing linear dependent vector 10
18:47 gram_schmidt: Removing linear dependent vector 11
18:47 gram_schmidt: Removing linear dependent vector 12
18:47 gram_schmidt: Removing linear dependent vector 13
18:47 gram_schmidt: Removing linear dependent vector 14
18:47 gram_schmidt: Removing linear dependent vector 15
18:47 gram_schmidt: Removing linear dependent vector 16
18:47 gram_schmidt: Removing linear dependent vector 17
18:47 gram_schmidt: Removing linear dependent vector 18
18:47 gram_schmidt: Removing linear dependent vector 19
18:47 gram_schmidt: Removing linear dependent vector 20
18:47 gram_schmidt: Removing linear dependent vector 21
18:47 gram_schmidt: Removing linear dependent vector 22
18:47 gram_schmidt: Removing linear dependent vector 23
18:47 gram_schmidt: Removing linear dependent vector 24
18:47 gram_schmidt: Removing linear dependent vector 25
18:47 gram_schmidt: Removing linear dependent vector 26
18:47 gram_schmidt: Removing linear dependent vector 27
18:47 gram_schmidt: Removing linear dependent vector 28
18:47 gram_schmidt: Removing linear dependent vector 29
18:47 gram_schmidt: Removing linear dependent vector 30
18:47 gram_schmidt: Removing linear dependent vector 31
18:47 gram_schmidt: Removing linear dependent vector 32
18:47 gram_schmidt: Removing linear dependent vector 33
18:47 gram_schmidt: Removing linear dependent vector 34
18:47 gram_schmidt: Removing linear dependent vector 35
18:47 gram_schmidt: Removing linear dependent vector 36
18:47 gram_schmidt: Removing linear dependent vector 37
18:47 gram_schmidt: Removing linear dependent vector 38
18:47 gram_schmidt: Removing linear dependent vector 39
18:47 gram_schmidt: Removing linear dependent vector 40
18:47 gram_schmidt: Removing linear dependent vector 41
18:47 gram_schmidt: Removing linear dependent vector 42
18:47 gram_schmidt: Removing linear dependent vector 43
18:47 gram_schmidt: Removing linear dependent vector 44
18:47 gram_schmidt: Removing linear dependent vector 45
18:47 gram_schmidt: Removing linear dependent vector 46
18:47 gram_schmidt: Removing linear dependent vector 47
18:47 gram_schmidt: Removing linear dependent vector 48
18:47 gram_schmidt: Removing linear dependent vector 49
18:47 gram_schmidt: Removing linear dependent vector 50
18:47 gram_schmidt: Removing linear dependent vector 51
18:47 gram_schmidt: Removing linear dependent vector 52
18:47 gram_schmidt: Removing linear dependent vector 53
18:47 gram_schmidt: Removing linear dependent vector 54
18:47 gram_schmidt: Removing linear dependent vector 55
18:47 gram_schmidt: Removing linear dependent vector 56
18:47 gram_schmidt: Removing linear dependent vector 57
18:47 gram_schmidt: Removing linear dependent vector 58
18:47 gram_schmidt: Removing linear dependent vector 59
18:47 gram_schmidt: Removing linear dependent vector 60
18:47 gram_schmidt: Removing linear dependent vector 61
18:47 gram_schmidt: Removing linear dependent vector 62
18:47 gram_schmidt: Removing linear dependent vector 63
18:47 gram_schmidt: Removing linear dependent vector 64
18:47 gram_schmidt: Removing linear dependent vector 65
18:47 gram_schmidt: Removing linear dependent vector 66
18:47 gram_schmidt: Removing linear dependent vector 67
18:47 gram_schmidt: Removing linear dependent vector 68
18:47 gram_schmidt: Removing linear dependent vector 69
18:47 gram_schmidt: Removing linear dependent vector 70
18:47 gram_schmidt: Removing linear dependent vector 71
18:47 gram_schmidt: Removing linear dependent vector 72
18:47 gram_schmidt: Removing linear dependent vector 73
18:47 gram_schmidt: Removing linear dependent vector 74
18:47 gram_schmidt: Removing linear dependent vector 75
18:47 gram_schmidt: Removing linear dependent vector 76
18:47 gram_schmidt: Removing linear dependent vector 77
18:47 gram_schmidt: Removing linear dependent vector 78
18:47 gram_schmidt: Removing linear dependent vector 79
18:47 gram_schmidt: Removing linear dependent vector 80
18:47 gram_schmidt: Removing linear dependent vector 81
18:47 gram_schmidt: Removing linear dependent vector 82
18:47 gram_schmidt: Removing linear dependent vector 83
18:47 gram_schmidt: Removing linear dependent vector 84
18:47 gram_schmidt: Removing linear dependent vector 85
18:47 gram_schmidt: Removing linear dependent vector 86
18:47 gram_schmidt: Removing linear dependent vector 87
18:47 gram_schmidt: Removing linear dependent vector 88
18:47 gram_schmidt: Removing linear dependent vector 89
18:47 gram_schmidt: Removing linear dependent vector 90
18:47 gram_schmidt: Removing linear dependent vector 91
18:47 gram_schmidt: Removing linear dependent vector 92
18:47 gram_schmidt: Removing linear dependent vector 93
18:47 gram_schmidt: Removing linear dependent vector 94
18:47 gram_schmidt: Removing linear dependent vector 95
18:47 gram_schmidt: Removing linear dependent vector 96
18:47 gram_schmidt: Removing linear dependent vector 97
18:47 gram_schmidt: Removing linear dependent vector 98
18:47 gram_schmidt: Removing linear dependent vector 99
18:47 gram_schmidt: Removing linear dependent vector 100
18:47 gram_schmidt: Removing linear dependent vector 101
18:47 gram_schmidt: Removing linear dependent vector 3
18:47 gram_schmidt: Removing linear dependent vector 4
18:47 gram_schmidt: Removing linear dependent vector 5
18:47 gram_schmidt: Removing linear dependent vector 6
18:47 gram_schmidt: Removing linear dependent vector 7
18:47 gram_schmidt: Removing linear dependent vector 8
18:47 gram_schmidt: Removing linear dependent vector 9
18:47 gram_schmidt: Removing linear dependent vector 10
18:47 gram_schmidt: Removing linear dependent vector 11
18:47 gram_schmidt: Removing linear dependent vector 12
18:47 gram_schmidt: Removing linear dependent vector 13
18:47 gram_schmidt: Removing linear dependent vector 14
18:47 gram_schmidt: Removing linear dependent vector 15
18:47 gram_schmidt: Removing linear dependent vector 16
18:47 gram_schmidt: Removing linear dependent vector 17
18:47 gram_schmidt: Removing linear dependent vector 18
18:47 gram_schmidt: Removing linear dependent vector 19
18:47 gram_schmidt: Removing linear dependent vector 20
18:47 gram_schmidt: Removing linear dependent vector 21
18:47 gram_schmidt: Removing linear dependent vector 22
18:47 gram_schmidt: Removing linear dependent vector 23
18:47 gram_schmidt: Removing linear dependent vector 24
18:47 gram_schmidt: Removing linear dependent vector 25
18:47 gram_schmidt: Removing linear dependent vector 26
18:47 gram_schmidt: Removing linear dependent vector 27
18:47 gram_schmidt: Removing linear dependent vector 28
18:47 gram_schmidt: Removing linear dependent vector 29
18:47 gram_schmidt: Removing linear dependent vector 30
18:47 gram_schmidt: Removing linear dependent vector 31
18:47 gram_schmidt: Removing linear dependent vector 32
18:47 gram_schmidt: Removing linear dependent vector 33
18:47 gram_schmidt: Removing linear dependent vector 34
18:47 gram_schmidt: Removing linear dependent vector 35
18:47 gram_schmidt: Removing linear dependent vector 36
18:47 gram_schmidt: Removing linear dependent vector 37
18:47 gram_schmidt: Removing linear dependent vector 38
18:47 gram_schmidt: Removing linear dependent vector 39
18:47 gram_schmidt: Removing linear dependent vector 40
18:47 gram_schmidt: Removing linear dependent vector 41
18:47 gram_schmidt: Removing linear dependent vector 42
18:47 gram_schmidt: Removing linear dependent vector 43
18:47 gram_schmidt: Removing linear dependent vector 44
18:47 gram_schmidt: Removing linear dependent vector 45
18:47 gram_schmidt: Removing linear dependent vector 46
18:47 gram_schmidt: Removing linear dependent vector 47
18:47 gram_schmidt: Removing linear dependent vector 48
18:47 gram_schmidt: Removing linear dependent vector 49
18:47 gram_schmidt: Removing linear dependent vector 50
18:47 gram_schmidt: Removing linear dependent vector 51
18:47 gram_schmidt: Removing linear dependent vector 52
18:47 gram_schmidt: Removing linear dependent vector 53
18:47 gram_schmidt: Removing linear dependent vector 54
18:47 gram_schmidt: Removing linear dependent vector 55
18:47 gram_schmidt: Removing linear dependent vector 56
18:47 gram_schmidt: Removing linear dependent vector 57
18:47 gram_schmidt: Removing linear dependent vector 58
18:47 gram_schmidt: Removing linear dependent vector 59
18:47 gram_schmidt: Removing linear dependent vector 60
18:47 gram_schmidt: Removing linear dependent vector 61
18:47 gram_schmidt: Removing linear dependent vector 62
18:47 gram_schmidt: Removing linear dependent vector 63
18:47 gram_schmidt: Removing linear dependent vector 64
18:47 gram_schmidt: Removing linear dependent vector 65
18:47 gram_schmidt: Removing linear dependent vector 66
18:47 gram_schmidt: Removing linear dependent vector 67
18:47 gram_schmidt: Removing linear dependent vector 68
18:47 gram_schmidt: Removing linear dependent vector 69
18:47 gram_schmidt: Removing linear dependent vector 70
18:47 gram_schmidt: Removing linear dependent vector 71
18:47 gram_schmidt: Removing linear dependent vector 72
18:47 gram_schmidt: Removing linear dependent vector 73
18:47 gram_schmidt: Removing linear dependent vector 74
18:47 gram_schmidt: Removing linear dependent vector 75
18:47 gram_schmidt: Removing linear dependent vector 76
18:47 gram_schmidt: Removing linear dependent vector 77
18:47 gram_schmidt: Removing linear dependent vector 78
18:47 gram_schmidt: Removing linear dependent vector 79
18:47 gram_schmidt: Removing linear dependent vector 80
18:47 gram_schmidt: Removing linear dependent vector 81
18:47 gram_schmidt: Removing linear dependent vector 82
18:47 gram_schmidt: Removing linear dependent vector 83
18:47 gram_schmidt: Removing linear dependent vector 84
18:47 gram_schmidt: Removing linear dependent vector 85
18:47 gram_schmidt: Removing linear dependent vector 86
18:47 gram_schmidt: Removing linear dependent vector 87
18:47 gram_schmidt: Removing linear dependent vector 88
18:47 gram_schmidt: Removing linear dependent vector 89
18:47 gram_schmidt: Removing linear dependent vector 90
18:47 gram_schmidt: Removing linear dependent vector 91
18:47 gram_schmidt: Removing linear dependent vector 92
18:47 gram_schmidt: Removing linear dependent vector 93
18:47 gram_schmidt: Removing linear dependent vector 94
18:47 gram_schmidt: Removing linear dependent vector 95
18:47 gram_schmidt: Removing linear dependent vector 96
18:47 gram_schmidt: Removing linear dependent vector 97
18:47 gram_schmidt: Removing linear dependent vector 98
18:47 gram_schmidt: Removing linear dependent vector 99
18:47 gram_schmidt: Removing linear dependent vector 100
18:47 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;17]" time="0.0039861202239990234"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;18]" time="0.0027494430541992188"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;19]" time="0.005517482757568359"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;20]" time="0.2862727642059326"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;21]" time="1.5247094631195068"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;22]" time="0.002753019332885742"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;23]" time="0.0021524429321289062"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;24]" time="0.009067296981811523"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;25]" time="0.42603158950805664"><system-err>18:49 gram_schmidt: Orthonormalizing vector 31 again
18:49 gram_schmidt: Removing linear dependent vector 32
18:49 gram_schmidt: Removing linear dependent vector 33
18:49 gram_schmidt: Removing linear dependent vector 34
18:49 gram_schmidt: Removing linear dependent vector 35
18:49 gram_schmidt: Removing linear dependent vector 36
18:49 gram_schmidt: Removing linear dependent vector 37
18:49 gram_schmidt: Removing linear dependent vector 38
18:49 gram_schmidt: Removing linear dependent vector 39
18:49 gram_schmidt: Removing linear dependent vector 40
18:49 gram_schmidt: Removing linear dependent vector 41
18:49 gram_schmidt: Removing linear dependent vector 42
18:49 gram_schmidt: Orthonormalizing vector 31 again
18:49 gram_schmidt: Removing linear dependent vector 32
18:49 gram_schmidt: Removing linear dependent vector 33
18:49 gram_schmidt: Removing linear dependent vector 34
18:49 gram_schmidt: Removing linear dependent vector 35
18:49 gram_schmidt: Removing linear dependent vector 36
18:49 gram_schmidt: Removing linear dependent vector 37
18:49 gram_schmidt: Removing linear dependent vector 38
18:49 gram_schmidt: Removing linear dependent vector 39
18:49 gram_schmidt: Removing linear dependent vector 40
18:49 gram_schmidt: Removing linear dependent vector 41
18:49 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;26]" time="0.2576868534088135"><system-err>18:50 gram_schmidt: Removing vector 0 of norm 0.0
18:50 gram_schmidt: Removing vector 1 of norm 0.0
18:50 gram_schmidt: Removing vector 2 of norm 0.0
18:50 gram_schmidt: Removing vector 3 of norm 0.0
18:50 gram_schmidt: Removing vector 4 of norm 0.0
18:50 gram_schmidt: Removing vector 5 of norm 0.0
18:50 gram_schmidt: Removing vector 6 of norm 0.0
18:50 gram_schmidt: Removing vector 7 of norm 0.0
18:50 gram_schmidt: Removing vector 8 of norm 0.0
18:50 gram_schmidt: Removing vector 9 of norm 0.0
18:50 gram_schmidt: Removing vector 10 of norm 0.0
18:50 gram_schmidt: Removing vector 11 of norm 0.0
18:50 gram_schmidt: Removing vector 12 of norm 0.0
18:50 gram_schmidt: Removing vector 13 of norm 0.0
18:50 gram_schmidt: Removing vector 14 of norm 0.0
18:50 gram_schmidt: Removing vector 15 of norm 0.0
18:50 gram_schmidt: Removing vector 16 of norm 0.0
18:50 gram_schmidt: Removing vector 17 of norm 0.0
18:50 gram_schmidt: Removing vector 18 of norm 0.0
18:50 gram_schmidt: Removing vector 19 of norm 0.0
18:50 gram_schmidt: Removing vector 20 of norm 0.0
18:50 gram_schmidt: Removing vector 21 of norm 0.0
18:50 gram_schmidt: Removing vector 22 of norm 0.0
18:50 gram_schmidt: Removing vector 23 of norm 0.0
18:50 gram_schmidt: Removing vector 24 of norm 0.0
18:50 gram_schmidt: Removing vector 25 of norm 0.0
18:50 gram_schmidt: Removing vector 26 of norm 0.0
18:50 gram_schmidt: Removing vector 27 of norm 0.0
18:50 gram_schmidt: Removing vector 28 of norm 0.0
18:50 gram_schmidt: Removing vector 29 of norm 0.0
18:50 gram_schmidt: Removing vector 30 of norm 0.0
18:50 gram_schmidt: Removing vector 31 of norm 0.0
18:50 gram_schmidt: Removing vector 32 of norm 0.0
18:50 gram_schmidt: Removing vector 33 of norm 0.0
18:50 gram_schmidt: Removing vector 34 of norm 0.0
18:50 gram_schmidt: Removing vector 35 of norm 0.0
18:50 gram_schmidt: Removing vector 36 of norm 0.0
18:50 gram_schmidt: Removing vector 37 of norm 0.0
18:50 gram_schmidt: Removing vector 38 of norm 0.0
18:50 gram_schmidt: Removing vector 39 of norm 0.0
18:50 gram_schmidt: Removing vector 40 of norm 0.0
18:50 gram_schmidt: Removing vector 41 of norm 0.0
18:50 gram_schmidt: Removing vector 42 of norm 0.0
18:50 gram_schmidt: Removing vector 43 of norm 0.0
18:50 gram_schmidt: Removing vector 44 of norm 0.0
18:50 gram_schmidt: Removing vector 45 of norm 0.0
18:50 gram_schmidt: Removing vector 46 of norm 0.0
18:50 gram_schmidt: Removing vector 47 of norm 0.0
18:50 gram_schmidt: Removing vector 48 of norm 0.0
18:50 gram_schmidt: Removing vector 49 of norm 0.0
18:50 gram_schmidt: Removing vector 50 of norm 0.0
18:50 gram_schmidt: Removing vector 51 of norm 0.0
18:50 gram_schmidt: Removing vector 52 of norm 0.0
18:50 gram_schmidt: Removing vector 53 of norm 0.0
18:50 gram_schmidt: Removing vector 54 of norm 0.0
18:50 gram_schmidt: Removing vector 55 of norm 0.0
18:50 gram_schmidt: Removing vector 56 of norm 0.0
18:50 gram_schmidt: Removing vector 57 of norm 0.0
18:50 gram_schmidt: Removing vector 58 of norm 0.0
18:50 gram_schmidt: Removing vector 59 of norm 0.0
18:50 gram_schmidt: Removing vector 60 of norm 0.0
18:50 gram_schmidt: Removing vector 61 of norm 0.0
18:50 gram_schmidt: Removing vector 62 of norm 0.0
18:50 gram_schmidt: Removing vector 63 of norm 0.0
18:50 gram_schmidt: Removing vector 64 of norm 0.0
18:50 gram_schmidt: Removing vector 65 of norm 0.0
18:50 gram_schmidt: Removing vector 66 of norm 0.0
18:50 gram_schmidt: Removing vector 67 of norm 0.0
18:50 gram_schmidt: Removing vector 68 of norm 0.0
18:50 gram_schmidt: Removing vector 69 of norm 0.0
18:50 gram_schmidt: Removing vector 70 of norm 0.0
18:50 gram_schmidt: Removing vector 71 of norm 0.0
18:50 gram_schmidt: Removing vector 72 of norm 0.0
18:50 gram_schmidt: Removing vector 73 of norm 0.0
18:50 gram_schmidt: Removing vector 74 of norm 0.0
18:50 gram_schmidt: Removing vector 75 of norm 0.0
18:50 gram_schmidt: Removing vector 76 of norm 0.0
18:50 gram_schmidt: Removing vector 77 of norm 0.0
18:50 gram_schmidt: Removing vector 78 of norm 0.0
18:50 gram_schmidt: Removing vector 79 of norm 0.0
18:50 gram_schmidt: Removing vector 80 of norm 0.0
18:50 gram_schmidt: Removing vector 81 of norm 0.0
18:50 gram_schmidt: Removing vector 82 of norm 0.0
18:50 gram_schmidt: Removing vector 83 of norm 0.0
18:50 gram_schmidt: Removing vector 84 of norm 0.0
18:50 gram_schmidt: Removing vector 85 of norm 0.0
18:50 gram_schmidt: Removing vector 86 of norm 0.0
18:50 gram_schmidt: Removing vector 87 of norm 0.0
18:50 gram_schmidt: Removing vector 88 of norm 0.0
18:50 gram_schmidt: Removing vector 89 of norm 0.0
18:50 gram_schmidt: Removing vector 90 of norm 0.0
18:50 gram_schmidt: Removing vector 91 of norm 0.0
18:50 gram_schmidt: Removing vector 92 of norm 0.0
18:50 gram_schmidt: Removing vector 93 of norm 0.0
18:50 gram_schmidt: Removing vector 94 of norm 0.0
18:50 gram_schmidt: Removing vector 95 of norm 0.0
18:50 gram_schmidt: Removing vector 96 of norm 0.0
18:50 gram_schmidt: Removing vector 97 of norm 0.0
18:50 gram_schmidt: Removing vector 98 of norm 0.0
18:50 gram_schmidt: Removing vector 99 of norm 0.0
18:50 gram_schmidt: Removing vector 100 of norm 0.0
18:50 gram_schmidt: Removing vector 101 of norm 0.0
18:50 gram_schmidt: Removing vector 0 of norm 0.0
18:50 gram_schmidt: Removing vector 1 of norm 0.0
18:50 gram_schmidt: Removing vector 2 of norm 0.0
18:50 gram_schmidt: Removing vector 3 of norm 0.0
18:50 gram_schmidt: Removing vector 4 of norm 0.0
18:50 gram_schmidt: Removing vector 5 of norm 0.0
18:50 gram_schmidt: Removing vector 6 of norm 0.0
18:50 gram_schmidt: Removing vector 7 of norm 0.0
18:50 gram_schmidt: Removing vector 8 of norm 0.0
18:50 gram_schmidt: Removing vector 9 of norm 0.0
18:50 gram_schmidt: Removing vector 10 of norm 0.0
18:50 gram_schmidt: Removing vector 11 of norm 0.0
18:50 gram_schmidt: Removing vector 12 of norm 0.0
18:50 gram_schmidt: Removing vector 13 of norm 0.0
18:50 gram_schmidt: Removing vector 14 of norm 0.0
18:50 gram_schmidt: Removing vector 15 of norm 0.0
18:50 gram_schmidt: Removing vector 16 of norm 0.0
18:50 gram_schmidt: Removing vector 17 of norm 0.0
18:50 gram_schmidt: Removing vector 18 of norm 0.0
18:50 gram_schmidt: Removing vector 19 of norm 0.0
18:50 gram_schmidt: Removing vector 20 of norm 0.0
18:50 gram_schmidt: Removing vector 21 of norm 0.0
18:50 gram_schmidt: Removing vector 22 of norm 0.0
18:50 gram_schmidt: Removing vector 23 of norm 0.0
18:50 gram_schmidt: Removing vector 24 of norm 0.0
18:50 gram_schmidt: Removing vector 25 of norm 0.0
18:50 gram_schmidt: Removing vector 26 of norm 0.0
18:50 gram_schmidt: Removing vector 27 of norm 0.0
18:50 gram_schmidt: Removing vector 28 of norm 0.0
18:50 gram_schmidt: Removing vector 29 of norm 0.0
18:50 gram_schmidt: Removing vector 30 of norm 0.0
18:50 gram_schmidt: Removing vector 31 of norm 0.0
18:50 gram_schmidt: Removing vector 32 of norm 0.0
18:50 gram_schmidt: Removing vector 33 of norm 0.0
18:50 gram_schmidt: Removing vector 34 of norm 0.0
18:50 gram_schmidt: Removing vector 35 of norm 0.0
18:50 gram_schmidt: Removing vector 36 of norm 0.0
18:50 gram_schmidt: Removing vector 37 of norm 0.0
18:50 gram_schmidt: Removing vector 38 of norm 0.0
18:50 gram_schmidt: Removing vector 39 of norm 0.0
18:50 gram_schmidt: Removing vector 40 of norm 0.0
18:50 gram_schmidt: Removing vector 41 of norm 0.0
18:50 gram_schmidt: Removing vector 42 of norm 0.0
18:50 gram_schmidt: Removing vector 43 of norm 0.0
18:50 gram_schmidt: Removing vector 44 of norm 0.0
18:50 gram_schmidt: Removing vector 45 of norm 0.0
18:50 gram_schmidt: Removing vector 46 of norm 0.0
18:50 gram_schmidt: Removing vector 47 of norm 0.0
18:50 gram_schmidt: Removing vector 48 of norm 0.0
18:50 gram_schmidt: Removing vector 49 of norm 0.0
18:50 gram_schmidt: Removing vector 50 of norm 0.0
18:50 gram_schmidt: Removing vector 51 of norm 0.0
18:50 gram_schmidt: Removing vector 52 of norm 0.0
18:50 gram_schmidt: Removing vector 53 of norm 0.0
18:50 gram_schmidt: Removing vector 54 of norm 0.0
18:50 gram_schmidt: Removing vector 55 of norm 0.0
18:50 gram_schmidt: Removing vector 56 of norm 0.0
18:50 gram_schmidt: Removing vector 57 of norm 0.0
18:50 gram_schmidt: Removing vector 58 of norm 0.0
18:50 gram_schmidt: Removing vector 59 of norm 0.0
18:50 gram_schmidt: Removing vector 60 of norm 0.0
18:50 gram_schmidt: Removing vector 61 of norm 0.0
18:50 gram_schmidt: Removing vector 62 of norm 0.0
18:50 gram_schmidt: Removing vector 63 of norm 0.0
18:50 gram_schmidt: Removing vector 64 of norm 0.0
18:50 gram_schmidt: Removing vector 65 of norm 0.0
18:50 gram_schmidt: Removing vector 66 of norm 0.0
18:50 gram_schmidt: Removing vector 67 of norm 0.0
18:50 gram_schmidt: Removing vector 68 of norm 0.0
18:50 gram_schmidt: Removing vector 69 of norm 0.0
18:50 gram_schmidt: Removing vector 70 of norm 0.0
18:50 gram_schmidt: Removing vector 71 of norm 0.0
18:50 gram_schmidt: Removing vector 72 of norm 0.0
18:50 gram_schmidt: Removing vector 73 of norm 0.0
18:50 gram_schmidt: Removing vector 74 of norm 0.0
18:50 gram_schmidt: Removing vector 75 of norm 0.0
18:50 gram_schmidt: Removing vector 76 of norm 0.0
18:50 gram_schmidt: Removing vector 77 of norm 0.0
18:50 gram_schmidt: Removing vector 78 of norm 0.0
18:50 gram_schmidt: Removing vector 79 of norm 0.0
18:50 gram_schmidt: Removing vector 80 of norm 0.0
18:50 gram_schmidt: Removing vector 81 of norm 0.0
18:50 gram_schmidt: Removing vector 82 of norm 0.0
18:50 gram_schmidt: Removing vector 83 of norm 0.0
18:50 gram_schmidt: Removing vector 84 of norm 0.0
18:50 gram_schmidt: Removing vector 85 of norm 0.0
18:50 gram_schmidt: Removing vector 86 of norm 0.0
18:50 gram_schmidt: Removing vector 87 of norm 0.0
18:50 gram_schmidt: Removing vector 88 of norm 0.0
18:50 gram_schmidt: Removing vector 89 of norm 0.0
18:50 gram_schmidt: Removing vector 90 of norm 0.0
18:50 gram_schmidt: Removing vector 91 of norm 0.0
18:50 gram_schmidt: Removing vector 92 of norm 0.0
18:50 gram_schmidt: Removing vector 93 of norm 0.0
18:50 gram_schmidt: Removing vector 94 of norm 0.0
18:50 gram_schmidt: Removing vector 95 of norm 0.0
18:50 gram_schmidt: Removing vector 96 of norm 0.0
18:50 gram_schmidt: Removing vector 97 of norm 0.0
18:50 gram_schmidt: Removing vector 98 of norm 0.0
18:50 gram_schmidt: Removing vector 99 of norm 0.0
18:50 gram_schmidt: Removing vector 100 of norm 0.0
18:50 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;0]" time="0.03927159309387207"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;1]" time="0.036231279373168945"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;2]" time="0.04045724868774414"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;3]" time="0.03670859336853027"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;4]" time="0.03905224800109863"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;5]" time="0.0357968807220459"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;6]" time="0.04037833213806152"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;7]" time="0.03715968132019043"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;8]" time="0.038754940032958984"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;9]" time="0.03556418418884277"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;10]" time="0.038301706314086914"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;11]" time="0.03580021858215332"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;12]" time="0.03842663764953613"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Removing linear dependent vector 5
18:50 gram_schmidt: Removing linear dependent vector 6
18:50 gram_schmidt: Removing linear dependent vector 5
18:50 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;13]" time="0.0354769229888916"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Removing linear dependent vector 5
18:50 gram_schmidt: Removing linear dependent vector 6
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Removing linear dependent vector 5
18:50 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;14]" time="0.04207181930541992"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Removing linear dependent vector 5
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;15]" time="0.03804922103881836"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 5 again
18:50 gram_schmidt: Orthonormalizing vector 1 again
18:50 gram_schmidt: Orthonormalizing vector 2 again
18:50 gram_schmidt: Orthonormalizing vector 3 again
18:50 gram_schmidt: Orthonormalizing vector 4 again
18:50 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;16]" time="0.037905216217041016"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Removing linear dependent vector 1
18:50 gram_schmidt: Removing linear dependent vector 2
18:50 gram_schmidt: Removing linear dependent vector 3
18:50 gram_schmidt: Removing linear dependent vector 4
18:50 gram_schmidt: Removing linear dependent vector 5
18:50 gram_schmidt: Removing linear dependent vector 6
18:50 gram_schmidt: Removing linear dependent vector 1
18:50 gram_schmidt: Removing linear dependent vector 2
18:50 gram_schmidt: Removing linear dependent vector 3
18:50 gram_schmidt: Removing linear dependent vector 4
18:50 gram_schmidt: Removing linear dependent vector 5
18:50 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;17]" time="0.03320503234863281"><system-err>18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 L2ProductP1: Integrate the products of the shape functions on each element
18:50 L2ProductP1: Determine global dofs ...
18:50 L2ProductP1: Boundary treatment ...
18:50 L2ProductP1: Assemble system matrix ...
18:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:50 DiffusionOperatorP1: Determine global dofs ...
18:50 DiffusionOperatorP1: Boundary treatment ...
18:50 DiffusionOperatorP1: Assemble system matrix ...
18:50 gram_schmidt: Removing linear dependent vector 1
18:50 gram_schmidt: Removing linear dependent vector 2
18:50 gram_schmidt: Removing linear dependent vector 3
18:50 gram_schmidt: Removing linear dependent vector 4
18:50 gram_schmidt: Removing linear dependent vector 5
18:50 gram_schmidt: Removing linear dependent vector 6
18:50 gram_schmidt: Removing linear dependent vector 1
18:50 gram_schmidt: Removing linear dependent vector 2
18:50 gram_schmidt: Removing linear dependent vector 3
18:50 gram_schmidt: Removing linear dependent vector 4
18:50 gram_schmidt: Removing linear dependent vector 5
18:50 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;18]" time="0.042192935943603516"><system-err>18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
18:51 gram_schmidt: Removing linear dependent vector 5
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
18:51 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;19]" time="0.03935503959655762"><system-err>18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
18:51 gram_schmidt: Orthonormalizing vector 5 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
18:51 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;20]" time="0.04256248474121094"><system-err>18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
18:51 gram_schmidt: Removing linear dependent vector 5
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
18:51 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;21]" time="0.03955721855163574"><system-err>18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
18:51 gram_schmidt: Orthonormalizing vector 5 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
18:51 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;22]" time="0.0394587516784668"><system-err>18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;23]" time="0.039833784103393555"><system-err>18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 L2ProductP1: Integrate the products of the shape functions on each element
18:51 L2ProductP1: Determine global dofs ...
18:51 L2ProductP1: Boundary treatment ...
18:51 L2ProductP1: Assemble system matrix ...
18:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:51 DiffusionOperatorP1: Determine global dofs ...
18:51 DiffusionOperatorP1: Boundary treatment ...
18:51 DiffusionOperatorP1: Assemble system matrix ...
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;24]" time="0.012384176254272461"><system-err>18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;25]" time="0.011684894561767578"><system-err>18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;26]" time="0.013431072235107422"><system-err>18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;27]" time="0.007572174072265625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;28]" time="0.010858297348022461"><system-err>18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;29]" time="0.0072023868560791016"><system-err>18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;30]" time="0.0071201324462890625"><system-err>18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;31]" time="0.007411479949951172"><system-err>18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;32]" time="0.022700071334838867"><system-err>18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;33]" time="0.01849198341369629"><system-err>18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;34]" time="0.012070178985595703"><system-err>18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;35]" time="0.021838903427124023"><system-err>18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;36]" time="0.01213979721069336"><system-err>18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
18:51 gram_schmidt: Orthonormalizing vector 1 again
18:51 gram_schmidt: Orthonormalizing vector 2 again
18:51 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;0]" time="0.0019664764404296875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;1]" time="0.0015633106231689453"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;2]" time="0.001495361328125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;3]" time="0.05513882637023926"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;4]" time="0.0018553733825683594"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;5]" time="0.0014460086822509766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;6]" time="0.0013155937194824219"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;7]" time="0.0014464855194091797"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;8]" time="0.1080787181854248"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;9]" time="0.0023560523986816406"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;10]" time="0.0017650127410888672"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;11]" time="0.0068645477294921875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;12]" time="0.001552581787109375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;13]" time="0.0014002323150634766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;14]" time="0.004991054534912109"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;15]" time="0.20553064346313477"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;16]" time="0.008902549743652344"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;17]" time="0.0030918121337890625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;18]" time="0.002315044403076172"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;19]" time="0.0035741329193115234"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;20]" time="0.1455233097076416"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;21]" time="0.7577552795410156"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;22]" time="0.002197265625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;23]" time="0.0016765594482421875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;24]" time="0.002734661102294922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;25]" time="0.320237398147583"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;26]" time="0.05792355537414551"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;0]" time="0.0018503665924072266"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;1]" time="0.0014276504516601562"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;2]" time="0.0013692378997802734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;3]" time="0.05348682403564453"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;4]" time="0.001760244369506836"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;5]" time="0.0016131401062011719"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;6]" time="0.0013272762298583984"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;7]" time="0.0011701583862304688"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;8]" time="0.10690164566040039"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;9]" time="0.0028581619262695312"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;10]" time="0.0016293525695800781"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;11]" time="0.0064351558685302734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;12]" time="0.0014955997467041016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;13]" time="0.0014085769653320312"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;14]" time="0.004706382751464844"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;15]" time="0.20084881782531738"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;16]" time="0.009203195571899414"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;17]" time="0.0033659934997558594"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;18]" time="0.0023169517517089844"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;19]" time="0.0038635730743408203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;20]" time="0.14733529090881348"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;21]" time="0.7476317882537842"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;22]" time="0.0020596981048583984"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;23]" time="0.0014481544494628906"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;24]" time="0.0025408267974853516"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;25]" time="0.32350707054138184"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;26]" time="0.05978083610534668"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;0]" time="0.002129793167114258"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;1]" time="0.0015125274658203125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;2]" time="0.0014185905456542969"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;3]" time="0.05445456504821777"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;4]" time="0.0018107891082763672"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;5]" time="0.0013854503631591797"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;6]" time="0.001348733901977539"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;7]" time="0.0013782978057861328"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;8]" time="0.10699915885925293"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;9]" time="0.0030977725982666016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;10]" time="0.0016896724700927734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;11]" time="0.00676727294921875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;12]" time="0.0017216205596923828"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;13]" time="0.001524209976196289"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;14]" time="0.004954099655151367"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;15]" time="0.2031564712524414"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;16]" time="0.009177684783935547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;17]" time="0.003292560577392578"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;18]" time="0.002385377883911133"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;19]" time="0.003770589828491211"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;20]" time="0.1483907699584961"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;21]" time="0.7383332252502441"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;22]" time="0.002071857452392578"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;23]" time="0.0013566017150878906"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;24]" time="0.0025217533111572266"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;25]" time="0.31473755836486816"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;26]" time="0.056763648986816406"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;0]" time="0.034548044204711914"><system-err>18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;1]" time="0.031190872192382812"><system-err>18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 gram_schmidt_biorth: Projecting vector V[1] again
18:56 gram_schmidt_biorth: Projecting vector W[1] again
18:56 gram_schmidt_biorth: Projecting vector V[1] again
18:56 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;2]" time="0.03538656234741211"><system-err>18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;3]" time="0.031416893005371094"><system-err>18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 gram_schmidt_biorth: Projecting vector V[1] again
18:56 gram_schmidt_biorth: Projecting vector W[1] again
18:56 gram_schmidt_biorth: Projecting vector V[1] again
18:56 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;4]" time="0.033431053161621094"><system-err>18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;5]" time="0.030921220779418945"><system-err>18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 gram_schmidt_biorth: Projecting vector V[1] again
18:56 gram_schmidt_biorth: Projecting vector W[1] again
18:56 gram_schmidt_biorth: Projecting vector V[1] again
18:56 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;6]" time="0.033674001693725586"><system-err>18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;7]" time="0.030618667602539062"><system-err>18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 gram_schmidt_biorth: Projecting vector V[1] again
18:56 gram_schmidt_biorth: Projecting vector W[1] again
18:56 gram_schmidt_biorth: Projecting vector V[1] again
18:56 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;8]" time="0.03348088264465332"><system-err>18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;9]" time="0.03068828582763672"><system-err>18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 L2ProductP1: Integrate the products of the shape functions on each element
18:56 L2ProductP1: Determine global dofs ...
18:56 L2ProductP1: Boundary treatment ...
18:56 L2ProductP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 gram_schmidt_biorth: Projecting vector V[1] again
18:56 gram_schmidt_biorth: Projecting vector W[1] again
18:56 gram_schmidt_biorth: Projecting vector V[1] again
18:56 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;10]" time="0.03320884704589844"><system-err>18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:56 DiffusionOperatorP1: Determine global dofs ...
18:56 DiffusionOperatorP1: Boundary treatment ...
18:56 DiffusionOperatorP1: Assemble system matrix ...
18:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;11]" time="0.030585289001464844"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;12]" time="0.03465867042541504"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;13]" time="0.02994060516357422"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;14]" time="0.037660837173461914"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;15]" time="0.03390169143676758"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;16]" time="0.02989792823791504"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;17]" time="0.028907060623168945"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;18]" time="0.038431644439697266"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;19]" time="0.03389549255371094"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;20]" time="0.036928415298461914"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;21]" time="0.032735586166381836"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[2] again
18:57 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;22]" time="0.03236222267150879"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;23]" time="0.02952432632446289"><system-err>18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 L2ProductP1: Integrate the products of the shape functions on each element
18:57 L2ProductP1: Determine global dofs ...
18:57 L2ProductP1: Boundary treatment ...
18:57 L2ProductP1: Assemble system matrix ...
18:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
18:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
18:57 DiffusionOperatorP1: Determine global dofs ...
18:57 DiffusionOperatorP1: Boundary treatment ...
18:57 DiffusionOperatorP1: Assemble system matrix ...
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;24]" time="0.009183168411254883"><system-err>18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;25]" time="0.009153127670288086"><system-err>18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;26]" time="0.009397745132446289"><system-err>18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;27]" time="0.006201982498168945"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;28]" time="0.005054473876953125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;29]" time="0.004358053207397461"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;30]" time="0.004247426986694336"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;31]" time="0.004209041595458984"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;32]" time="0.015791654586791992"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;33]" time="0.013212442398071289"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;34]" time="0.007745981216430664"><system-err>18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;35]" time="0.01182246208190918"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;36]" time="0.008998870849609375"><system-err>18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
18:57 gram_schmidt_biorth: Projecting vector V[1] again
18:57 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[1]" time="0.003152608871459961"><system-err>18:57 newton:       Initial Residual: 1.000000e+00
18:57 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
18:57 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[2]" time="0.002237081527709961"><system-err>18:57 newton:       Initial Residual: 1.000000e+00
18:57 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
18:57 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[3]" time="0.0020630359649658203"><system-err>18:57 newton:       Initial Residual: 1.000000e+00
18:57 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
18:57 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[4]" time="0.002032041549682617"><system-err>18:57 newton:       Initial Residual: 1.000000e+00
18:57 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
18:57 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[5]" time="0.002849102020263672"><system-err>18:57 newton:       Initial Residual: 1.000000e+00
18:57 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
18:57 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[6]" time="0.0019845962524414062"><system-err>18:57 newton:       Initial Residual: 1.000000e+00
18:57 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
18:57 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[7]" time="0.0019969940185546875"><system-err>18:57 newton:       Initial Residual: 1.000000e+00
18:57 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
18:57 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="26" name="test_newton_fail" time="0.004703521728515625"><system-err>18:57 newton:       Initial Residual: 1.000000e+00
18:57 newton: Iteration  1: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
18:57 newton: Iteration  2: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
18:57 newton: Iteration  3: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
18:57 newton: Iteration  4: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
18:57 newton: Iteration  5: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
18:57 newton: Iteration  6: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
18:57 newton: Iteration  7: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
18:57 newton: Iteration  8: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
18:57 newton: Iteration  9: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
18:57 newton: Iteration 10: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
</system-err></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="8" name="test_repr" time="0.025310754776000977"></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="12" name="test_entries" time="0.0011458396911621094"></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="19" name="test_dir" time="0.001069784164428711"></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="14" name="test_defaults" time="0.001245260238647461"></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="30" name="test_print_defaults" time="0.050685882568359375"><system-out>                                                       defaults affecting state id calcuation                                                       
                                                       ======================================                                                       

path (shortened)                                                       value                                                                  source
---------------------------------------------------------------------  ---------------------------------------------------------------------  ------
basic.almost_equal.atol                                                1e-14                                                                  code  
basic.almost_equal.rtol                                                1e-14                                                                  code  
genericsolvers.apply_inverse.check_finite                              True                                                                   code  
genericsolvers.apply_inverse.default_least_squares_solver              &apos;generic_least_squares_lsmr&apos;                                           code  
genericsolvers.apply_inverse.default_solver                            &apos;generic_lgmres&apos;                                                       code  
genericsolvers.solver_options.least_squares_lsmr_atol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsmr_btol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsmr_conlim                100000000.0                                                            code  
genericsolvers.solver_options.least_squares_lsmr_damp                  0.0                                                                    code  
genericsolvers.solver_options.least_squares_lsmr_maxiter               None                                                                   code  
genericsolvers.solver_options.least_squares_lsqr_atol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsqr_btol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsqr_conlim                100000000.0                                                            code  
genericsolvers.solver_options.least_squares_lsqr_iter_lim              None                                                                   code  
genericsolvers.solver_options.lgmres_inner_m                           39                                                                     code  
genericsolvers.solver_options.lgmres_maxiter                           1000                                                                   code  
genericsolvers.solver_options.lgmres_outer_k                           3                                                                      code  
genericsolvers.solver_options.lgmres_tol                               1e-05                                                                  code  
gram_schmidt.gram_schmidt.atol                                         1e-13                                                                  code  
gram_schmidt.gram_schmidt.check                                        True                                                                   code  
gram_schmidt.gram_schmidt.check_tol                                    0.001                                                                  code  
gram_schmidt.gram_schmidt.reiterate                                    True                                                                   code  
gram_schmidt.gram_schmidt.reiteration_threshold                        0.1                                                                    code  
gram_schmidt.gram_schmidt.rtol                                         1e-13                                                                  code  
lradi.lyap_lrcf_solver_options.lradi_maxiter                           500                                                                    code  
lradi.lyap_lrcf_solver_options.lradi_shifts                            &apos;projection_shifts&apos;                                                    code  
lradi.lyap_lrcf_solver_options.lradi_tol                               1e-10                                                                  code  
lradi.lyap_lrcf_solver_options.projection_shifts_implicit_subspace     True                                                                   code  
lradi.lyap_lrcf_solver_options.projection_shifts_init_maxiter          20                                                                     code  
lradi.lyap_lrcf_solver_options.projection_shifts_init_seed             None                                                                   code  
lradi.lyap_lrcf_solver_options.projection_shifts_z_columns             1                                                                      code  
lyapunov.mat_eqn_sparse_min_size.value                                 1000                                                                   code  
lyapunov.solve_lyap_dense.default_solver_backend                       &apos;pymess&apos;                                                               code  
lyapunov.solve_lyap_lrcf.default_dense_solver_backend                  &apos;pymess&apos;                                                               code  
lyapunov.solve_lyap_lrcf.default_sparse_solver_backend                 &apos;pymess&apos;                                                               code  
newton.newton.atol                                                     -1.0                                                                   code  
newton.newton.maxiter                                                  100                                                                    code  
newton.newton.miniter                                                  0                                                                      code  
newton.newton.rtol                                                     -1.0                                                                   code  
newton.newton.stagnation_threshold                                     0.9                                                                    code  
newton.newton.stagnation_window                                        3                                                                      code  
pod.pod.atol                                                           0.0                                                                    code  
pod.pod.check                                                          True                                                                   code  
pod.pod.check_tol                                                      1e-10                                                                  code  
pod.pod.l2_err                                                         0.0                                                                    code  
pod.pod.orthonormalize                                                 True                                                                   code  
pod.pod.rtol                                                           4e-08                                                                  code  
pod.pod.symmetrize                                                     False                                                                  code  
riccati.solve_pos_ricc_lrcf.default_dense_solver_backend               &apos;pymess&apos;                                                               code  
riccati.solve_ricc_lrcf.default_dense_solver_backend                   &apos;pymess&apos;                                                               code  
riccati.solve_ricc_lrcf.default_sparse_solver_backend                  &apos;pymess&apos;                                                               code  
text.text_problem.font_name                                            None                                                                   code  
fenics._solver_options.preconditioner                                  &apos;amg&apos;                                                                  code  
fenics._solver_options.solver                                          &apos;bicgstab&apos;                                                             code  
ngsolve.NGSolveMatrixOperator.apply_inverse.default_solver             &apos;&apos;                                                                     code  
pyamg.apply_inverse.check_finite                                       True                                                                   code  
pyamg.apply_inverse.default_solver                                     &apos;pyamg_solve&apos;                                                          code  
pyamg.solver_options.maxiter                                           400                                                                    code  
pyamg.solver_options.rs_CF                                             &apos;RS&apos;                                                                   code  
pyamg.solver_options.rs_accel                                          None                                                                   code  
pyamg.solver_options.rs_coarse_solver                                  &apos;pinv2&apos;                                                                code  
pyamg.solver_options.rs_cycle                                          &apos;V&apos;                                                                    code  
pyamg.solver_options.rs_max_coarse                                     500                                                                    code  
pyamg.solver_options.rs_max_levels                                     10                                                                     code  
pyamg.solver_options.rs_maxiter                                        100                                                                    code  
pyamg.solver_options.rs_postsmoother                                   (&apos;gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                               code  
pyamg.solver_options.rs_strength                                       (&apos;classical&apos;, {&apos;theta&apos;: 0.25})                                         code  
pyamg.solver_options.rs_tol                                            1e-05                                                                  code  
pyamg.solver_options.sa_accel                                          None                                                                   code  
pyamg.solver_options.sa_aggregate                                      &apos;standard&apos;                                                             code  
pyamg.solver_options.sa_coarse_solver                                  &apos;pinv2&apos;                                                                code  
pyamg.solver_options.sa_cycle                                          &apos;V&apos;                                                                    code  
pyamg.solver_options.sa_diagonal_dominance                             False                                                                  code  
pyamg.solver_options.sa_improve_candidates                             ((&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;, &apos;iterations&apos;: 4}),      code  
                                                                       None)                                                                        
pyamg.solver_options.sa_max_coarse                                     500                                                                    code  
pyamg.solver_options.sa_max_levels                                     10                                                                     code  
pyamg.solver_options.sa_maxiter                                        100                                                                    code  
pyamg.solver_options.sa_postsmoother                                   (&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                         code  
pyamg.solver_options.sa_presmoother                                    (&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                         code  
pyamg.solver_options.sa_smooth                                         (&apos;jacobi&apos;, {&apos;omega&apos;: 1.3333333333333333})                              code  
pyamg.solver_options.sa_strength                                       &apos;symmetric&apos;                                                            code  
pyamg.solver_options.sa_symmetry                                       &apos;hermitian&apos;                                                            code  
pyamg.solver_options.sa_tol                                            1e-05                                                                  code  
pyamg.solver_options.tol                                               1e-05                                                                  code  
pymess.lradi_solver_options.adi_maxit                                  500                                                                    code  
pymess.lradi_solver_options.adi_memory_usage                           1                                                                      code  
pymess.lradi_solver_options.adi_output                                 1                                                                      code  
pymess.lradi_solver_options.adi_rel_change_tol                         1e-10                                                                  code  
pymess.lradi_solver_options.adi_res2_tol                               1e-10                                                                  code  
pymess.lradi_solver_options.adi_res2c_tol                              1e-11                                                                  code  
pymess.lradi_solver_options.adi_shifts_arp_m                           32                                                                     code  
pymess.lradi_solver_options.adi_shifts_arp_p                           48                                                                     code  
pymess.lradi_solver_options.adi_shifts_l0                              16                                                                     code  
pymess.pos_ricc_lrcf_solver_options.dense_nm_gmpcare_absres_tol        1e-11                                                                  code  
pymess.pos_ricc_lrcf_solver_options.dense_nm_gmpcare_linesearch        False                                                                  code  
pymess.pos_ricc_lrcf_solver_options.dense_nm_gmpcare_maxit             50                                                                     code  
pymess.pos_ricc_lrcf_solver_options.dense_nm_gmpcare_nrm               0                                                                      code  
pymess.pos_ricc_lrcf_solver_options.dense_nm_gmpcare_relres_tol        1e-12                                                                  code  
pymess.ricc_lrcf_solver_options.dense_nm_gmpcare_absres_tol            1e-11                                                                  code  
pymess.ricc_lrcf_solver_options.dense_nm_gmpcare_linesearch            False                                                                  code  
pymess.ricc_lrcf_solver_options.dense_nm_gmpcare_maxit                 50                                                                     code  
pymess.ricc_lrcf_solver_options.dense_nm_gmpcare_nrm                   0                                                                      code  
pymess.ricc_lrcf_solver_options.dense_nm_gmpcare_relres_tol            1e-12                                                                  code  
pymess.solve_lyap_lrcf.default_solver                                  None                                                                   code  
pymess.solve_ricc_lrcf.default_solver                                  None                                                                   code  
scipy.apply_inverse.check_finite                                       True                                                                   code  
scipy.apply_inverse.default_least_squares_solver                       &apos;scipy_least_squares_lsmr&apos;                                             code  
scipy.apply_inverse.default_solver                                     &apos;scipy_spsolve&apos;                                                        code  
scipy.solver_options.bicgstab_maxiter                                  None                                                                   code  
scipy.solver_options.bicgstab_tol                                      1e-15                                                                  code  
scipy.solver_options.least_squares_lsmr_atol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsmr_btol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsmr_conlim                         100000000.0                                                            code  
scipy.solver_options.least_squares_lsmr_damp                           0.0                                                                    code  
scipy.solver_options.least_squares_lsmr_maxiter                        None                                                                   code  
scipy.solver_options.least_squares_lsqr_atol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsqr_btol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsqr_conlim                         100000000.0                                                            code  
scipy.solver_options.least_squares_lsqr_iter_lim                       None                                                                   code  
scipy.solver_options.lgmres_inner_m                                    39                                                                     code  
scipy.solver_options.lgmres_maxiter                                    1000                                                                   code  
scipy.solver_options.lgmres_outer_k                                    3                                                                      code  
scipy.solver_options.lgmres_tol                                        1e-05                                                                  code  
scipy.solver_options.spilu_drop_rule                                   None                                                                   code  
scipy.solver_options.spilu_drop_tol                                    0.0001                                                                 code  
scipy.solver_options.spilu_fill_factor                                 10                                                                     code  
scipy.solver_options.spilu_permc_spec                                  &apos;COLAMD&apos;                                                               code  
scipy.solver_options.spsolve_keep_factorization                        True                                                                   code  
scipy.solver_options.spsolve_permc_spec                                &apos;COLAMD&apos;                                                               code  
constructions.induced_norm.raise_negative                              True                                                                   code  
constructions.induced_norm.tol                                         1e-10                                                                  code  
fv.jacobian_options.delta                                              1e-07                                                                  code  
numpy.NumpyMatrixOperator.apply_inverse.check_finite                   True                                                                   code  
numpy.NumpyMatrixOperator.apply_inverse.default_sparse_solver_backend  &apos;scipy&apos;                                                                code  
default.new_parallel_pool.allow_mpi                                    True                                                                   code  
default.new_parallel_pool.ipython_num_engines                          None                                                                   code  
default.new_parallel_pool.ipython_profile                              None                                                                   code  
floatcmp.float_cmp.atol                                                1e-14                                                                  code  
floatcmp.float_cmp.rtol                                                1e-14                                                                  code  
mpi.event_loop_settings.auto_launch                                    True                                                                   code  
random.new_random_state.seed                                           42                                                                     code  
defaults.func.c                                                        43                                                                     user  
defaults.func.d                                                        3                                                                      code  



                  defaults not affecting state id calculation                   
                  ===========================================                   

path (shortened)                     value                                source
-----------------------------------  -----------------------------------  ------
genericsolvers.solver_options.least  False                                code  
_squares_lsmr_show                                                              
genericsolvers.solver_options.least  False                                code  
_squares_lsqr_show                                                              
pyamg.solver_options.verb            False                                code  
scipy.solver_options.least_squares_  False                                code  
lsmr_show                                                                       
scipy.solver_options.least_squares_  False                                code  
lsqr_show                                                                       
cache.default_regions.disk_max_size  1073741824                           code  
cache.default_regions.disk_path      &apos;/tmp/pymor.cache.pymor&apos;             code  
cache.default_regions.memory_max_ke  1000                                 code  
ys                                                                              
cache.default_regions.persistent_ma  1073741824                           code  
x_size                                                                          
cache.default_regions.persistent_pa  &apos;/tmp/pymor.persistent.cache.pymor&apos;  code  
th                                                                              
logger.getLogger.filename            &apos;&apos;                                   code  
logger.set_log_format.block_timings  False                                code  
logger.set_log_format.indent_blocks  True                                 code  
logger.set_log_format.max_hierarchy  1                                    code  
_level                                                                          
logger.set_log_levels.levels         None                                 code  
gl.colormap_texture.name             &apos;viridis&apos;                            code  
qt.visualize_patch.backend           &apos;gl&apos;                                 code  
pprint.format_array.compact_print    False                                code  

</system-out></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="34" name="test_write_defaults_to_file" time="0.013193130493164062"><system-out>Written defaults to file /tmp/tmp6r9byw29/defaults.py
</system-out></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="39" name="test_load_defaults_from_file" time="0.013624906539916992"><system-out>Written defaults to file /tmp/tmploi2ivf9/defaults.py
</system-out></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="18" name="testImplementorlist" time="0.0012352466583251953"></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="24" name="testAbstractMethods" time="0.002440929412841797"></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="56" name="testVersion" time="0.00077056884765625"></testcase><testcase classname="src.pymortests.core.interface" file="src/pymortests/core/interface.py" line="78" name="test_withcopy_implementors" time="0.007680177688598633"></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[RuleTable]" time="0.0024175643920898438"><system-err>18:57 |WARNING|RuleTable: warning -- logger &lt;Logger pymor.algorithms.rules.RuleTable (INFO)&gt;
18:57 |ERROR|RuleTable: error -- logger &lt;Logger pymor.algorithms.rules.RuleTable (INFO)&gt;
18:57 RuleTable: info -- logger &lt;Logger pymor.algorithms.rules.RuleTable (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[PatchVisualizer]" time="0.0017995834350585938"><system-err>18:57 |WARNING|PatchVisualizer: warning -- logger &lt;Logger pymor.gui.visualizers.PatchVisualizer (INFO)&gt;
18:57 |ERROR|PatchVisualizer: error -- logger &lt;Logger pymor.gui.visualizers.PatchVisualizer (INFO)&gt;
18:57 PatchVisualizer: info -- logger &lt;Logger pymor.gui.visualizers.PatchVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[OnedVisualizer]" time="0.001756429672241211"><system-err>18:57 |WARNING|OnedVisualizer: warning -- logger &lt;Logger pymor.gui.visualizers.OnedVisualizer (INFO)&gt;
18:57 |ERROR|OnedVisualizer: error -- logger &lt;Logger pymor.gui.visualizers.OnedVisualizer (INFO)&gt;
18:57 OnedVisualizer: info -- logger &lt;Logger pymor.gui.visualizers.OnedVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[FenicsVisualizer]" time="0.0016417503356933594"><system-err>18:57 |WARNING|FenicsVisualizer: warning -- logger &lt;Logger pymor.bindings.fenics.FenicsVisualizer (INFO)&gt;
18:57 |ERROR|FenicsVisualizer: error -- logger &lt;Logger pymor.bindings.fenics.FenicsVisualizer (INFO)&gt;
18:57 FenicsVisualizer: info -- logger &lt;Logger pymor.bindings.fenics.FenicsVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BoringTestClass]" time="0.0016908645629882812"><system-err>18:57 |WARNING|BoringTestClass: warning -- logger &lt;Logger pymortests.core.dummies.BoringTestClass (INFO)&gt;
18:57 |ERROR|BoringTestClass: error -- logger &lt;Logger pymortests.core.dummies.BoringTestClass (INFO)&gt;
18:57 BoringTestClass: info -- logger &lt;Logger pymortests.core.dummies.BoringTestClass (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[RemoteObjectManager]" time="0.0018079280853271484"><system-err>18:57 |WARNING|RemoteObjectManager: warning -- logger &lt;Logger pymor.parallel.manager.RemoteObjectManager (INFO)&gt;
18:57 |ERROR|RemoteObjectManager: error -- logger &lt;Logger pymor.parallel.manager.RemoteObjectManager (INFO)&gt;
18:57 RemoteObjectManager: info -- logger &lt;Logger pymor.parallel.manager.RemoteObjectManager (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AdaptiveSampleSet]" time="0.001772165298461914"><system-err>18:57 |WARNING|AdaptiveSampleSet: warning -- logger &lt;Logger pymor.algorithms.adaptivegreedy.AdaptiveSampleSet (INFO)&gt;
18:57 |ERROR|AdaptiveSampleSet: error -- logger &lt;Logger pymor.algorithms.adaptivegreedy.AdaptiveSampleSet (INFO)&gt;
18:57 AdaptiveSampleSet: info -- logger &lt;Logger pymor.algorithms.adaptivegreedy.AdaptiveSampleSet (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[Tree]" time="0.0017161369323730469"><system-err>18:57 |WARNING|Tree: warning -- logger &lt;Logger pymor.algorithms.hapod.Tree (INFO)&gt;
18:57 |ERROR|Tree: error -- logger &lt;Logger pymor.algorithms.hapod.Tree (INFO)&gt;
18:57 Tree: info -- logger &lt;Logger pymor.algorithms.hapod.Tree (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericRBReductor]" time="0.0016601085662841797"><system-err>18:57 |WARNING|GenericRBReductor: warning -- logger &lt;Logger pymor.reductors.basic.GenericRBReductor (INFO)&gt;
18:57 |ERROR|GenericRBReductor: error -- logger &lt;Logger pymor.reductors.basic.GenericRBReductor (INFO)&gt;
18:57 GenericRBReductor: info -- logger &lt;Logger pymor.reductors.basic.GenericRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericPGReductor]" time="0.001748800277709961"><system-err>18:57 |WARNING|GenericPGReductor: warning -- logger &lt;Logger pymor.reductors.basic.GenericPGReductor (INFO)&gt;
18:57 |ERROR|GenericPGReductor: error -- logger &lt;Logger pymor.reductors.basic.GenericPGReductor (INFO)&gt;
18:57 GenericPGReductor: info -- logger &lt;Logger pymor.reductors.basic.GenericPGReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericBTReductor]" time="0.0017120838165283203"><system-err>18:57 |WARNING|GenericBTReductor: warning -- logger &lt;Logger pymor.reductors.bt.GenericBTReductor (INFO)&gt;
18:57 |ERROR|GenericBTReductor: error -- logger &lt;Logger pymor.reductors.bt.GenericBTReductor (INFO)&gt;
18:57 GenericBTReductor: info -- logger &lt;Logger pymor.reductors.bt.GenericBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ResidualReductor]" time="0.0017321109771728516"><system-err>18:57 |WARNING|ResidualReductor: warning -- logger &lt;Logger pymor.reductors.residual.ResidualReductor (INFO)&gt;
18:57 |ERROR|ResidualReductor: error -- logger &lt;Logger pymor.reductors.residual.ResidualReductor (INFO)&gt;
18:57 ResidualReductor: info -- logger &lt;Logger pymor.reductors.residual.ResidualReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ImplicitEulerResidualReductor]" time="0.0016925334930419922"><system-err>18:57 |WARNING|ImplicitEulerResidualReductor: warning -- logger &lt;Logger pymor.reductors.residual.ImplicitEulerResidualReductor (INFO)&gt;
18:57 |ERROR|ImplicitEulerResidualReductor: error -- logger &lt;Logger pymor.reductors.residual.ImplicitEulerResidualReductor (INFO)&gt;
18:57 ImplicitEulerResidualReductor: info -- logger &lt;Logger pymor.reductors.residual.ImplicitEulerResidualReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericBHIReductor]" time="0.0017714500427246094"><system-err>18:57 |WARNING|GenericBHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.GenericBHIReductor (INFO)&gt;
18:57 |ERROR|GenericBHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.GenericBHIReductor (INFO)&gt;
18:57 GenericBHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.GenericBHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TFInterpReductor]" time="0.001760244369506836"><system-err>18:57 |WARNING|TFInterpReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.TFInterpReductor (INFO)&gt;
18:57 |ERROR|TFInterpReductor: error -- logger &lt;Logger pymor.reductors.interpolation.TFInterpReductor (INFO)&gt;
18:57 TFInterpReductor: info -- logger &lt;Logger pymor.reductors.interpolation.TFInterpReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[IRKAReductor]" time="0.0017004013061523438"><system-err>18:57 |WARNING|IRKAReductor: warning -- logger &lt;Logger pymor.reductors.h2.IRKAReductor (INFO)&gt;
18:57 |ERROR|IRKAReductor: error -- logger &lt;Logger pymor.reductors.h2.IRKAReductor (INFO)&gt;
18:57 IRKAReductor: info -- logger &lt;Logger pymor.reductors.h2.IRKAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TSIAReductor]" time="0.0017082691192626953"><system-err>18:57 |WARNING|TSIAReductor: warning -- logger &lt;Logger pymor.reductors.h2.TSIAReductor (INFO)&gt;
18:57 |ERROR|TSIAReductor: error -- logger &lt;Logger pymor.reductors.h2.TSIAReductor (INFO)&gt;
18:57 TSIAReductor: info -- logger &lt;Logger pymor.reductors.h2.TSIAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TF_IRKAReductor]" time="0.001741170883178711"><system-err>18:57 |WARNING|TF_IRKAReductor: warning -- logger &lt;Logger pymor.reductors.h2.TF_IRKAReductor (INFO)&gt;
18:57 |ERROR|TF_IRKAReductor: error -- logger &lt;Logger pymor.reductors.h2.TF_IRKAReductor (INFO)&gt;
18:57 TF_IRKAReductor: info -- logger &lt;Logger pymor.reductors.h2.TF_IRKAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericSOBTpvReductor]" time="0.001867532730102539"><system-err>18:57 |WARNING|GenericSOBTpvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.GenericSOBTpvReductor (INFO)&gt;
18:57 |ERROR|GenericSOBTpvReductor: error -- logger &lt;Logger pymor.reductors.sobt.GenericSOBTpvReductor (INFO)&gt;
18:57 GenericSOBTpvReductor: info -- logger &lt;Logger pymor.reductors.sobt.GenericSOBTpvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTfvReductor]" time="0.0017096996307373047"><system-err>18:57 |WARNING|SOBTfvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTfvReductor (INFO)&gt;
18:57 |ERROR|SOBTfvReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTfvReductor (INFO)&gt;
18:57 SOBTfvReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTfvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTReductor]" time="0.0017497539520263672"><system-err>18:57 |WARNING|SOBTReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTReductor (INFO)&gt;
18:57 |ERROR|SOBTReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTReductor (INFO)&gt;
18:57 SOBTReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOR_IRKAReductor]" time="0.0017085075378417969"><system-err>18:57 |WARNING|SOR_IRKAReductor: warning -- logger &lt;Logger pymor.reductors.sor_irka.SOR_IRKAReductor (INFO)&gt;
18:57 |ERROR|SOR_IRKAReductor: error -- logger &lt;Logger pymor.reductors.sor_irka.SOR_IRKAReductor (INFO)&gt;
18:57 SOR_IRKAReductor: info -- logger &lt;Logger pymor.reductors.sor_irka.SOR_IRKAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[new_ipcluster_pool]" time="0.0017459392547607422"><system-err>18:57 |WARNING|new_ipcluster_pool: warning -- logger &lt;Logger pymor.parallel.ipython.new_ipcluster_pool (INFO)&gt;
18:57 |ERROR|new_ipcluster_pool: error -- logger &lt;Logger pymor.parallel.ipython.new_ipcluster_pool (INFO)&gt;
18:57 new_ipcluster_pool: info -- logger &lt;Logger pymor.parallel.ipython.new_ipcluster_pool (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[StationaryProblem]" time="0.0017158985137939453"><system-err>18:57 |WARNING|StationaryProblem: warning -- logger &lt;Logger pymor.analyticalproblems.elliptic.StationaryProblem (INFO)&gt;
18:57 |ERROR|StationaryProblem: error -- logger &lt;Logger pymor.analyticalproblems.elliptic.StationaryProblem (INFO)&gt;
18:57 StationaryProblem: info -- logger &lt;Logger pymor.analyticalproblems.elliptic.StationaryProblem (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[InstationaryProblem]" time="0.002000093460083008"><system-err>18:57 |WARNING|InstationaryProblem: warning -- logger &lt;Logger pymor.analyticalproblems.instationary.InstationaryProblem (INFO)&gt;
18:57 |ERROR|InstationaryProblem: error -- logger &lt;Logger pymor.analyticalproblems.instationary.InstationaryProblem (INFO)&gt;
18:57 InstationaryProblem: info -- logger &lt;Logger pymor.analyticalproblems.instationary.InstationaryProblem (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[InducedNorm]" time="0.0017237663269042969"><system-err>18:57 |WARNING|InducedNorm: warning -- logger &lt;Logger pymor.operators.constructions.InducedNorm (INFO)&gt;
18:57 |ERROR|InducedNorm: error -- logger &lt;Logger pymor.operators.constructions.InducedNorm (INFO)&gt;
18:57 InducedNorm: info -- logger &lt;Logger pymor.operators.constructions.InducedNorm (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[NGSolveVisualizer]" time="0.0017008781433105469"><system-err>18:57 |WARNING|NGSolveVisualizer: warning -- logger &lt;Logger pymor.bindings.ngsolve.NGSolveVisualizer (INFO)&gt;
18:57 |ERROR|NGSolveVisualizer: error -- logger &lt;Logger pymor.bindings.ngsolve.NGSolveVisualizer (INFO)&gt;
18:57 NGSolveVisualizer: info -- logger &lt;Logger pymor.bindings.ngsolve.NGSolveVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CoerciveRBEstimator]" time="0.001743316650390625"><system-err>18:57 |WARNING|CoerciveRBEstimator: warning -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBEstimator (INFO)&gt;
18:57 |ERROR|CoerciveRBEstimator: error -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBEstimator (INFO)&gt;
18:57 CoerciveRBEstimator: info -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBEstimator (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SimpleCoerciveRBEstimator]" time="0.0018379688262939453"><system-err>18:57 |WARNING|SimpleCoerciveRBEstimator: warning -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBEstimator (INFO)&gt;
18:57 |ERROR|SimpleCoerciveRBEstimator: error -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBEstimator (INFO)&gt;
18:57 SimpleCoerciveRBEstimator: info -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBEstimator (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ParabolicRBEstimator]" time="0.0016732215881347656"><system-err>18:57 |WARNING|ParabolicRBEstimator: warning -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBEstimator (INFO)&gt;
18:57 |ERROR|ParabolicRBEstimator: error -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBEstimator (INFO)&gt;
18:57 ParabolicRBEstimator: info -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBEstimator (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[MPIVisualizer]" time="0.0016934871673583984"><system-err>18:57 |WARNING|MPIVisualizer: warning -- logger &lt;Logger pymor.discretizations.mpi.MPIVisualizer (INFO)&gt;
18:57 |ERROR|MPIVisualizer: error -- logger &lt;Logger pymor.discretizations.mpi.MPIVisualizer (INFO)&gt;
18:57 MPIVisualizer: info -- logger &lt;Logger pymor.discretizations.mpi.MPIVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[NumpyVectorArray]" time="0.0016932487487792969"><system-err>18:57 |WARNING|NumpyVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.numpy.NumpyVectorArray (INFO)&gt;
18:57 |ERROR|NumpyVectorArray: error -- logger &lt;Logger pymor.vectorarrays.numpy.NumpyVectorArray (INFO)&gt;
18:57 NumpyVectorArray: info -- logger &lt;Logger pymor.vectorarrays.numpy.NumpyVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BlockVectorArray]" time="0.0017032623291015625"><system-err>18:57 |WARNING|BlockVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.block.BlockVectorArray (INFO)&gt;
18:57 |ERROR|BlockVectorArray: error -- logger &lt;Logger pymor.vectorarrays.block.BlockVectorArray (INFO)&gt;
18:57 BlockVectorArray: info -- logger &lt;Logger pymor.vectorarrays.block.BlockVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ListVectorArray]" time="0.0017025470733642578"><system-err>18:57 |WARNING|ListVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.list.ListVectorArray (INFO)&gt;
18:57 |ERROR|ListVectorArray: error -- logger &lt;Logger pymor.vectorarrays.list.ListVectorArray (INFO)&gt;
18:57 ListVectorArray: info -- logger &lt;Logger pymor.vectorarrays.list.ListVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[MPIVectorArray]" time="0.0017108917236328125"><system-err>18:57 |WARNING|MPIVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.mpi.MPIVectorArray (INFO)&gt;
18:57 |ERROR|MPIVectorArray: error -- logger &lt;Logger pymor.vectorarrays.mpi.MPIVectorArray (INFO)&gt;
18:57 MPIVectorArray: info -- logger &lt;Logger pymor.vectorarrays.mpi.MPIVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[PreAssembleRules]" time="0.0016977787017822266"><system-err>18:57 |WARNING|PreAssembleRules: warning -- logger &lt;Logger pymor.algorithms.preassemble.PreAssembleRules (INFO)&gt;
18:57 |ERROR|PreAssembleRules: error -- logger &lt;Logger pymor.algorithms.preassemble.PreAssembleRules (INFO)&gt;
18:57 PreAssembleRules: info -- logger &lt;Logger pymor.algorithms.preassemble.PreAssembleRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ProjectRules]" time="0.001678466796875"><system-err>18:57 |WARNING|ProjectRules: warning -- logger &lt;Logger pymor.algorithms.projection.ProjectRules (INFO)&gt;
18:57 |ERROR|ProjectRules: error -- logger &lt;Logger pymor.algorithms.projection.ProjectRules (INFO)&gt;
18:57 ProjectRules: info -- logger &lt;Logger pymor.algorithms.projection.ProjectRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ProjectToSubbasisRules]" time="0.0017368793487548828"><system-err>18:57 |WARNING|ProjectToSubbasisRules: warning -- logger &lt;Logger pymor.algorithms.projection.ProjectToSubbasisRules (INFO)&gt;
18:57 |ERROR|ProjectToSubbasisRules: error -- logger &lt;Logger pymor.algorithms.projection.ProjectToSubbasisRules (INFO)&gt;
18:57 ProjectToSubbasisRules: info -- logger &lt;Logger pymor.algorithms.projection.ProjectToSubbasisRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ToMatrixRules]" time="0.0016467571258544922"><system-err>18:57 |WARNING|ToMatrixRules: warning -- logger &lt;Logger pymor.algorithms.to_matrix.ToMatrixRules (INFO)&gt;
18:57 |ERROR|ToMatrixRules: error -- logger &lt;Logger pymor.algorithms.to_matrix.ToMatrixRules (INFO)&gt;
18:57 ToMatrixRules: info -- logger &lt;Logger pymor.algorithms.to_matrix.ToMatrixRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CollectOperatorRangeRules]" time="0.0017158985137939453"><system-err>18:57 |WARNING|CollectOperatorRangeRules: warning -- logger &lt;Logger pymor.algorithms.image.CollectOperatorRangeRules (INFO)&gt;
18:57 |ERROR|CollectOperatorRangeRules: error -- logger &lt;Logger pymor.algorithms.image.CollectOperatorRangeRules (INFO)&gt;
18:57 CollectOperatorRangeRules: info -- logger &lt;Logger pymor.algorithms.image.CollectOperatorRangeRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CollectVectorRangeRules]" time="0.0017108917236328125"><system-err>18:57 |WARNING|CollectVectorRangeRules: warning -- logger &lt;Logger pymor.algorithms.image.CollectVectorRangeRules (INFO)&gt;
18:57 |ERROR|CollectVectorRangeRules: error -- logger &lt;Logger pymor.algorithms.image.CollectVectorRangeRules (INFO)&gt;
18:57 CollectVectorRangeRules: info -- logger &lt;Logger pymor.algorithms.image.CollectVectorRangeRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CopyOnWriteVector]" time="0.0016303062438964844"><system-err>18:57 |WARNING|CopyOnWriteVector: warning -- logger &lt;Logger pymor.vectorarrays.list.CopyOnWriteVector (INFO)&gt;
18:57 |ERROR|CopyOnWriteVector: error -- logger &lt;Logger pymor.vectorarrays.list.CopyOnWriteVector (INFO)&gt;
18:57 CopyOnWriteVector: info -- logger &lt;Logger pymor.vectorarrays.list.CopyOnWriteVector (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AllDirichletBoundaryInfo]" time="0.0016856193542480469"><system-err>18:57 |WARNING|AllDirichletBoundaryInfo: warning -- logger &lt;Logger pymortests.core.dummies.AllDirichletBoundaryInfo (INFO)&gt;
18:57 |ERROR|AllDirichletBoundaryInfo: error -- logger &lt;Logger pymortests.core.dummies.AllDirichletBoundaryInfo (INFO)&gt;
18:57 AllDirichletBoundaryInfo: info -- logger &lt;Logger pymortests.core.dummies.AllDirichletBoundaryInfo (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[StupidImplementer]" time="0.0016732215881347656"><system-err>18:57 |WARNING|StupidImplementer: warning -- logger &lt;Logger pymortests.core.dummies.StupidImplementer (INFO)&gt;
18:57 |ERROR|StupidImplementer: error -- logger &lt;Logger pymortests.core.dummies.StupidImplementer (INFO)&gt;
18:57 StupidImplementer: info -- logger &lt;Logger pymortests.core.dummies.StupidImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AverageImplementer0]" time="0.0017278194427490234"><system-err>18:57 |WARNING|AverageImplementer: warning -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
18:57 |ERROR|AverageImplementer: error -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
18:57 AverageImplementer: info -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[FailImplementer]" time="0.00168609619140625"><system-err>18:57 |WARNING|FailImplementer: warning -- logger &lt;Logger pymortests.core.dummies.FailImplementer (INFO)&gt;
18:57 |ERROR|FailImplementer: error -- logger &lt;Logger pymortests.core.dummies.FailImplementer (INFO)&gt;
18:57 FailImplementer: info -- logger &lt;Logger pymortests.core.dummies.FailImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AverageImplementer1]" time="0.0017178058624267578"><system-err>18:57 |WARNING|AverageImplementer: warning -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
18:57 |ERROR|AverageImplementer: error -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
18:57 AverageImplementer: info -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DummyPool]" time="0.0016794204711914062"><system-err>18:57 |WARNING|DummyPool: warning -- logger &lt;Logger pymor.parallel.dummy.DummyPool (INFO)&gt;
18:57 |ERROR|DummyPool: error -- logger &lt;Logger pymor.parallel.dummy.DummyPool (INFO)&gt;
18:57 DummyPool: info -- logger &lt;Logger pymor.parallel.dummy.DummyPool (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[WorkerPoolBase]" time="0.0019140243530273438"><system-err>18:57 |WARNING|WorkerPoolBase: warning -- logger &lt;Logger pymor.parallel.basic.WorkerPoolBase (INFO)&gt;
18:57 |ERROR|WorkerPoolBase: error -- logger &lt;Logger pymor.parallel.basic.WorkerPoolBase (INFO)&gt;
18:57 WorkerPoolBase: info -- logger &lt;Logger pymor.parallel.basic.WorkerPoolBase (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[IncHAPODTree]" time="0.0016655921936035156"><system-err>18:57 |WARNING|IncHAPODTree: warning -- logger &lt;Logger pymor.algorithms.hapod.IncHAPODTree (INFO)&gt;
18:57 |ERROR|IncHAPODTree: error -- logger &lt;Logger pymor.algorithms.hapod.IncHAPODTree (INFO)&gt;
18:57 IncHAPODTree: info -- logger &lt;Logger pymor.algorithms.hapod.IncHAPODTree (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DistHAPODTree]" time="0.0016143321990966797"><system-err>18:57 |WARNING|DistHAPODTree: warning -- logger &lt;Logger pymor.algorithms.hapod.DistHAPODTree (INFO)&gt;
18:57 |ERROR|DistHAPODTree: error -- logger &lt;Logger pymor.algorithms.hapod.DistHAPODTree (INFO)&gt;
18:57 DistHAPODTree: info -- logger &lt;Logger pymor.algorithms.hapod.DistHAPODTree (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CoerciveRBReductor]" time="0.0017614364624023438"><system-err>18:57 |WARNING|CoerciveRBReductor: warning -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBReductor (INFO)&gt;
18:57 |ERROR|CoerciveRBReductor: error -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBReductor (INFO)&gt;
18:57 CoerciveRBReductor: info -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SimpleCoerciveRBReductor]" time="0.001667022705078125"><system-err>18:57 |WARNING|SimpleCoerciveRBReductor: warning -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBReductor (INFO)&gt;
18:57 |ERROR|SimpleCoerciveRBReductor: error -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBReductor (INFO)&gt;
18:57 SimpleCoerciveRBReductor: info -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ParabolicRBReductor]" time="0.0016613006591796875"><system-err>18:57 |WARNING|ParabolicRBReductor: warning -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBReductor (INFO)&gt;
18:57 |ERROR|ParabolicRBReductor: error -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBReductor (INFO)&gt;
18:57 ParabolicRBReductor: info -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BTReductor]" time="0.0016357898712158203"><system-err>18:57 |WARNING|BTReductor: warning -- logger &lt;Logger pymor.reductors.bt.BTReductor (INFO)&gt;
18:57 |ERROR|BTReductor: error -- logger &lt;Logger pymor.reductors.bt.BTReductor (INFO)&gt;
18:57 BTReductor: info -- logger &lt;Logger pymor.reductors.bt.BTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[LQGBTReductor]" time="0.0016562938690185547"><system-err>18:57 |WARNING|LQGBTReductor: warning -- logger &lt;Logger pymor.reductors.bt.LQGBTReductor (INFO)&gt;
18:57 |ERROR|LQGBTReductor: error -- logger &lt;Logger pymor.reductors.bt.LQGBTReductor (INFO)&gt;
18:57 LQGBTReductor: info -- logger &lt;Logger pymor.reductors.bt.LQGBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BRBTReductor]" time="0.0016026496887207031"><system-err>18:57 |WARNING|BRBTReductor: warning -- logger &lt;Logger pymor.reductors.bt.BRBTReductor (INFO)&gt;
18:57 |ERROR|BRBTReductor: error -- logger &lt;Logger pymor.reductors.bt.BRBTReductor (INFO)&gt;
18:57 BRBTReductor: info -- logger &lt;Logger pymor.reductors.bt.BRBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[LTI_BHIReductor]" time="0.0016627311706542969"><system-err>18:57 |WARNING|LTI_BHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.LTI_BHIReductor (INFO)&gt;
18:57 |ERROR|LTI_BHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.LTI_BHIReductor (INFO)&gt;
18:57 LTI_BHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.LTI_BHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SO_BHIReductor]" time="0.001657247543334961"><system-err>18:57 |WARNING|SO_BHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.SO_BHIReductor (INFO)&gt;
18:57 |ERROR|SO_BHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.SO_BHIReductor (INFO)&gt;
18:57 SO_BHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.SO_BHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DelayBHIReductor]" time="0.001649618148803711"><system-err>18:57 |WARNING|DelayBHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.DelayBHIReductor (INFO)&gt;
18:57 |ERROR|DelayBHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.DelayBHIReductor (INFO)&gt;
18:57 DelayBHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.DelayBHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTpReductor]" time="0.0016367435455322266"><system-err>18:57 |WARNING|SOBTpReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTpReductor (INFO)&gt;
18:57 |ERROR|SOBTpReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTpReductor (INFO)&gt;
18:57 SOBTpReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTpReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTvReductor]" time="0.0016415119171142578"><system-err>18:57 |WARNING|SOBTvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTvReductor (INFO)&gt;
18:57 |ERROR|SOBTvReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTvReductor (INFO)&gt;
18:57 SOBTvReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTpvReductor]" time="0.0016543865203857422"><system-err>18:57 |WARNING|SOBTpvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTpvReductor (INFO)&gt;
18:57 |ERROR|SOBTpvReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTpvReductor (INFO)&gt;
18:57 SOBTpvReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTpvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTvpReductor]" time="0.0016562938690185547"><system-err>18:57 |WARNING|SOBTvpReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTvpReductor (INFO)&gt;
18:57 |ERROR|SOBTvpReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTvpReductor (INFO)&gt;
18:57 SOBTvpReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTvpReductor (INFO)&gt;
</system-err></testcase></testsuite>