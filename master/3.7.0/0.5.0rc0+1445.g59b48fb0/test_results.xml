<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="6083" tests="12167" time="1054.599"><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;0]" time="0.001270294189453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18eefe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;1]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ea9320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;2]" time="0.0006079673767089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b7ea1be80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;3]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ee52e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;4]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ea97f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;5]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ea94e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;6]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e0c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;7]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e0c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;8]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e0c320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;9]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e0c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;10]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e0ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;11]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ea9c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;12]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ea9ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;13]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ea9eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;14]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18eefe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;15]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e17208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;16]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e176d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;17]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b5a2dde10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;18]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18eeff28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;19]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ea90f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;20]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ea9be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;21]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e0c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;22]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e0c668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;23]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e175c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;24]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e177b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;25]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e162b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;26]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e17ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;27]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e0c898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;28]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e0c278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;29]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ea9ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;30]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ea9080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;31]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b5a2dd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;32]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e16630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;33]" time="0.0007338523864746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e16b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;34]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b5a2f48d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;35]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18ea9240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;36]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e0c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;37]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e0c898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;38]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e17b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;39]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e16940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;40]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e16c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;41]" time="0.0007131099700927734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e351d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;42]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f1b18e16da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;0]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e171d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;1]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e0ca90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;2]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e0c550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;3]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18ea9860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;4]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18ea9cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;5]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e35048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;6]" time="0.0006844997406005859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e357f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;7]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b5a2f4780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;8]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18ea9b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;9]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e0c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;10]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e171d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;11]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e168d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;12]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e359b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;13]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e35048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;14]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e35978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;15]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e169e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;16]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e17e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;17]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e0c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;18]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b5d651828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;19]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b5a2f4e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;20]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e35b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;21]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e356d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;22]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18dc0358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;23]" time="0.0006349086761474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b5d651588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;24]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e35898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;25]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e35470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;26]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e16c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;27]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e16128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;28]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e17e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;29]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e0c438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;30]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e0ce10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;31]" time="0.0007169246673583984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e0c668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;32]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e17f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;33]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e160f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;34]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e16710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;35]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e354a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;36]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e16438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;37]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b5d651198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;38]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18ea9828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;39]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b5a2dd588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;40]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b5d651ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;41]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e35898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;42]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f1b18e16438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;0]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e166d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;1]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e173c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;2]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e0c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;3]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18ee5828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;4]" time="0.0007967948913574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc0160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;5]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e0c550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;6]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e17f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;7]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e160f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;8]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e17780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;9]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e35710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;10]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b5d651fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;11]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc0518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;12]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc0978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;13]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18ea9828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;14]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e35588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;15]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e35eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;16]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e173c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;17]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b5d660588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;18]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc0080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;19]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc05f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;20]" time="0.0006105899810791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc0a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;21]" time="0.0007877349853515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc0240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;22]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc0518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;23]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc0da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;24]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e17b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;25]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e160f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;26]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e35630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;27]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b5d6512e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;28]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dcc400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;29]" time="0.0007157325744628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18ea9240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;30]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e35978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;31]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b5d6602e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;32]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b5d678a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;33]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b5a311710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;34]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc0940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;35]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dcc240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;36]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dcccc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;37]" time="0.0008375644683837891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dd7240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;38]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dcce10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;39]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc0240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;40]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18ee59e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;41]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18dc0080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;42]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f1b18e16b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;0]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b5d6789b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;1]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dd7128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;2]" time="0.0007681846618652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dd7780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;3]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b5d660240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;4]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18e17fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;5]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b5a311470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;6]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dc08d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;7]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dcc048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;8]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dd7390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;9]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dd7160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;10]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dd77f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;11]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dcc048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;12]" time="0.0003993511199951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dcc278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;13]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b5a311470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;14]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dc06a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;15]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b5a321eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;16]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dd7a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;17]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dd7588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;18]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ddf2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;19]" time="0.000759124755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dd7898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;20]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b5d6604e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;21]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b5d678fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;22]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dc06a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;23]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b5a337588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;24]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dcc048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;25]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ddf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;26]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ddf828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;27]" time="0.0007522106170654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ee5f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;28]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b5a337cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;29]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dc0080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;30]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b5a337390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;31]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dd73c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;32]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ddf0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;33]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ddf438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;34]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18de6128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;35]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18e17b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;36]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b5a337588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;37]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ddfe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;38]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ddf048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;39]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dd72e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;40]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dd7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;41]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dccd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;42]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18dcc780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;0]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dc0c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;1]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dcc940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;2]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dccc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;3]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dd7ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;4]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18ddf9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;5]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18ddf668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;6]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18ddfbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;7]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b5a321128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;8]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dc0198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;9]" time="0.0007526874542236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dc0940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;10]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b5a337588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;11]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18ddf940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;12]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18ddfa90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;13]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dd70f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;14]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dcc860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;15]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dcca58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;16]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18e0c668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;17]" time="0.0007500648498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b5a2f4978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;18]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b5a311278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;19]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dcc9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;20]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dd7be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;21]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18ddf518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;22]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b5a337240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;23]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18ddf9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;24]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18de69b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;25]" time="0.0007946491241455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18de6048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;26]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b5a347630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;27]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18ddf748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;28]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dcc860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;29]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b5808cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;30]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b5a311128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;31]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18de6be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;32]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18de6898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;33]" time="0.00093841552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dfa470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;34]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18de66a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;35]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b5a311710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;36]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b5808c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;37]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dd79b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;38]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18ddf668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;39]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b5a337b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;40]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dfa2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;41]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18dfa080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;42]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f1b18ddf9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;0]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dd7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;1]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b5808c748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;2]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dcc7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;3]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18de66a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;4]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dfab70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;5]" time="0.0004031658172607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dfa588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;6]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dfa748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;7]" time="0.0007493495941162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dfa198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;8]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dfa4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;9]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18de66a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;10]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b5809edd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;11]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dcc940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;12]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18ddf748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;13]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b5a347390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;14]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d80518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;15]" time="0.0007355213165283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b580ad0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;16]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18ddf748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;17]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b5a311e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;18]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18de6b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;19]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b5809ef28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;20]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dfa7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;21]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d80358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;22]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d80dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;23]" time="0.0007197856903076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d8b358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;24]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d80f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;25]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dfa7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;26]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b58041518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;27]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18de6cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;28]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dcc668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;29]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18ddf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;30]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d8b208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;31]" time="0.0007498264312744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d8b898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;32]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dd7898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;33]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18de6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;34]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b580415c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;35]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18dfac88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;36]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d80320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;37]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d8b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;38]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d8b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;39]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d8b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;40]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d8bac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;41]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d8b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;42]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f1b18d80668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;0]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18dfa5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;1]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d80518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;2]" time="0.0004012584686279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b5809e208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;3]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b5a347240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;4]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d98400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;5]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18ddff60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;6]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d8b940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;7]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d8bda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;8]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d8b710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;9]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d80eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;10]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b58041710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;11]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18dfa390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;12]" time="0.0005781650543212891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b5809e160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;13]" time="0.0007395744323730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18dfa5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;14]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d80a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;15]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d80ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;16]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d8b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;17]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d8b518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;18]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b58064d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;19]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b58052710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;20]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18de6278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;21]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18ea9438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;22]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b580525c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;23]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b58064b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;24]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d8b1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;25]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d8b128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;26]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d80fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;27]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18dfa4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;28]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d982e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;29]" time="0.0007390975952148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d98358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;30]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d80940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;31]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b58076780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;32]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d8bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;33]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b58076630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;34]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18de6048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;35]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d987b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;36]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d98048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;37]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18da4080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;38]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d98c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;39]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d98208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;40]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18de6978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;41]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b18d8b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;42]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f1b58076d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;0]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18dfa2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;1]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b58041128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;2]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18da4588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;3]" time="0.0007612705230712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d80240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;4]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b58076e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;5]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d8bf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;6]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b58052278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;7]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d98f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;8]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d98e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;9]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18da4128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;10]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18da4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;11]" time="0.0008025169372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d98588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;12]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b580072e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;13]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d98c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;14]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d8b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;15]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b58076198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;16]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18da44a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;17]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18da4780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;18]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18daf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;19]" time="0.0007560253143310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18daf908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;20]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18da4160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;21]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b58076d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;22]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d8b400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;23]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b5800cb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;24]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d986a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;25]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18daf550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;26]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18daf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;27]" time="0.0007367134094238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18daf780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;28]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18dafa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;29]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18daff98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;30]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d98a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;31]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d8bf28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;32]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b5800c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;33]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18da4470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;34]" time="0.0005474090576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18da4978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;35]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18db64a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;36]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18da4b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;37]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b5800cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;38]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b58076240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;39]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18d98a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;40]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18daff98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;41]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18dafeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;42]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f1b18db6198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;0]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db69b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;1]" time="0.0007238388061523438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18daf2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;2]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b5802d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;3]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18d986a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;4]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b580766d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;5]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18da48d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;6]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db6be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;7]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db6198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;8]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db69b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;9]" time="0.00078582763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db6400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;10]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db6c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;11]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18da47b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;12]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18d8b748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;13]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18d98a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;14]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b5802d550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;15]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18daf1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;16]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18d407f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;17]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b5802db38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;18]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b57fbefd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;19]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db6be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;20]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db6710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;21]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18daff98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;22]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b5800cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;23]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18da4128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;24]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18d806a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;25]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18d98ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;26]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18d80828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;27]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18da4c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;28]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18daf160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;29]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db6240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;30]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db6cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;31]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b57fd2908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;32]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db66a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;33]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b57fd2470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;34]" time="0.000766754150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18d98b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;35]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b57fbea58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;36]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db6e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;37]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18db6e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;38]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18daf6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;39]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18da4c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;40]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18dc0c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;41]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18d404e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;42]" time="0.00075531005859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f1b18dc0198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;0]" time="0.0006031990051269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18da4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;1]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18dafa20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;2]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18db6d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;3]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b57fd25c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;4]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18db6c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;5]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d408d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;6]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d530b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;7]" time="0.0008394718170166016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d535f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;8]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d40d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;9]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b58076390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;10]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d40588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;11]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b5800cd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;12]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18db6da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;13]" time="0.0005667209625244141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18dafe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;14]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d530f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;15]" time="0.0008640289306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d53550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;16]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18dafb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;17]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18db6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;18]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b57ff7588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;19]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b57fbe860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;20]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d40e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;21]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d53898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;22]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d53470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;23]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d5b198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;24]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d53d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;25]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d530f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;26]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d408d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;27]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b57ff7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;28]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b5800cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;29]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18daf6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;30]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d5b278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;31]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d5b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;32]" time="0.0008203983306884766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18dafb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;33]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b57ff7b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;34]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b57fd2da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;35]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d40630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;36]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d538d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;37]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d53ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;38]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d5b470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;39]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d5b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;40]" time="0.0007936954498291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d5b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;41]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d5bd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;42]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f1b18d539b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;0]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b57f878d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;1]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d408d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;2]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b57ff7a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;3]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18dafbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;4]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d644e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;5]" time="0.0009071826934814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d640f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;6]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18db6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;7]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d40e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;8]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b57f878d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;9]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d53518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;10]" time="0.0009119510650634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d5ba90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;11]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d64668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;12]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d64390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;13]" time="0.0008215904235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d64898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;14]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d64b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;15]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d64ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;16]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d5b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;17]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d53ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;18]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d40f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;19]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18db6240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;20]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d6e080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;21]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d6e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;22]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b57fd2da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;23]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b57ff7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;24]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d53d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;25]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d5b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;26]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d641d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;27]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d64dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;28]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d6e400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;29]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d6e710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;30]" time="0.000640869140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b57ff7978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;31]" time="0.0005440711975097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b57f97fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;32]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d5bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;33]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18dafbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;34]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d64780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;35]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18da4eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;36]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d53c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;37]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d40160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;38]" time="0.0009045600891113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d40828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;39]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b57fe23c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;40]" time="0.0005581378936767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d641d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;41]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18daf908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;42]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f1b18d5ba58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;0]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d5bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;1]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b57fab400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;2]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d6e240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;3]" time="0.0005586147308349609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b57f511d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;4]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b57fabe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;5]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b57f97b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;6]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d5bef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;7]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d648d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;8]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b57fbc358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;9]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d64eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;10]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d6e208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;11]" time="0.0008184909820556641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18cfe208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;12]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18da4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;13]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d644a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;14]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d5b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;15]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d98080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;16]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d6ee80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;17]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d6e940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;18]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18cfe278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;19]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18cfe748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;20]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d6e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;21]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b57fabdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;22]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b57fd2320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;23]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d5bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;24]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d64898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;25]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b57fbc780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;26]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18cfe588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;27]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18cfe0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;28]" time="0.0009245872497558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d53518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;29]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d641d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;30]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d64cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;31]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d6e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;32]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b57f51e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;33]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18cfecf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;34]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18cfe7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;35]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d081d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;36]" time="0.0008161067962646484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18cfe400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;37]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18cfe828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;38]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18cfe780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;39]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b57fab0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;40]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d5b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;41]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d64048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;42]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f1b18d081d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;0]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d08a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;1]" time="0.0008175373077392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d086a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;2]" time="0.0006077289581298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d08be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;3]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d08048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;4]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d64cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;5]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d5b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;6]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d6ee80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;7]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18cfed68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;8]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18cfe470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;9]" time="0.0008566379547119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d10550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;10]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18cfeb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;11]" time="0.0005724430084228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d6ee80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;12]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d5be48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;13]" time="0.0007903575897216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b57f60518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;14]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d08ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;15]" time="0.0008552074432373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d08dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;16]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d10438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;17]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d10160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;18]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d08d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;19]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b57f60518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;20]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d08ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;21]" time="0.0006196498870849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d6e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;22]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18cfe400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;23]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d10b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;24]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d105f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;25]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d1b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;26]" time="0.0008592605590820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d10240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;27]" time="0.0006089210510253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d100f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;28]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18cfe668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;29]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d10c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;30]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b57f06588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;31]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d08cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;32]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d08b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;33]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d1b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;34]" time="0.0008778572082519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d08b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;35]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b57f60c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;36]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b57f06ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;37]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d5bef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;38]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d64a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;39]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d101d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;40]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d1b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;41]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d1b710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;42]" time="0.0005443096160888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f1b18d64a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;0]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f06ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;1]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d1bef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;2]" time="0.0005404949188232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d1b748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;3]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d1bb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;4]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d10a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;5]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d08278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;6]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d085c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;7]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18cfe438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;8]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d08cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;9]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d10518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;10]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f297f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;11]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d1b320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;12]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d1bd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;13]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f060f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;14]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18cfe240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;15]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f06f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;16]" time="0.0008480548858642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18cfea58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;17]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f162e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;18]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d1bc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;19]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d1b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;20]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d10240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;21]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f60278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;22]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d08630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;23]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b5809ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;24]" time="0.0008020401000976562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f3c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;25]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d08518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;26]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d10940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;27]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f29358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;28]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d1b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;29]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f292b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;30]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18cfe438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;31]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d26780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;32]" time="0.0007612705230712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d26390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;33]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f71f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;34]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d1b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;35]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d10048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;36]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f29e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;37]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d6e860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;38]" time="0.0005745887756347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d269b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;39]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d26668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;40]" time="0.00080108642578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d37240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;41]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b18d26e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;42]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f1b57f3c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;0]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d08cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;1]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d10240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;2]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d1b748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;3]" time="0.0020639896392822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b57f06780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;4]" time="0.0008640289306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d370b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;5]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d37860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;6]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d1bd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;7]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b57f29f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;8]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d10d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;9]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b57ecac50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;10]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d268d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;11]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d37470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;12]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d37160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;13]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d37940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;14]" time="0.0007650852203369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d372e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;15]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d37eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;16]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d267b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;17]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b57f3c550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;18]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d100f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;19]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b57f29f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;20]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18cfe208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;21]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18cc52e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;22]" time="0.0008351802825927734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b57f06978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;23]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b57ecada0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;24]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d6e860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;25]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b57ede908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;26]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d267b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;27]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d374e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;28]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18cc5128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;29]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18cc5ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;30]" time="0.0008337497711181641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18ccc128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;31]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18cc5cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;32]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d37ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;33]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d26fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;34]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b57edea58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;35]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d6ed30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;36]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b57eca0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;37]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18ccc080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;38]" time="0.0008149147033691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18ccc668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;39]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d1b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;40]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b57f3cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;41]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d26668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;42]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f1b18d37828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;0]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cc5438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;1]" time="0.00077056884765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cc5ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;2]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18ccc1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;3]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18ccc748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;4]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cc5c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;5]" time="0.0008223056793212891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18d37470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;6]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b57ede908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;7]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b57eee668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;8]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18d10d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;9]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18ccc518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;10]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18ccc2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;11]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cd61d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;12]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b57eee5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;13]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18d1bb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;14]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18ccc2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;15]" time="0.0007460117340087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18ccc4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;16]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cc5a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;17]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cc5470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;18]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18d37f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;19]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b57f3c400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;20]" time="0.0008351802825927734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18d37f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;21]" time="0.0005505084991455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cc56d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;22]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cc5be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;23]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18ccc438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;24]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18ccc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;25]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b57e83978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;26]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b57f296a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;27]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18d26550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;28]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b57f06780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;29]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b57ede668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;30]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b57e83f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;31]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cccb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;32]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cc5e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;33]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b57e96780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;34]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18d37eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;35]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cd60b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;36]" time="0.0009253025054931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cd68d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;37]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b57e96198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;38]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cc54e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;39]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cccd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;40]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18d1bb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;41]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18d26668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;42]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f1b18cd69e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;0]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cd6358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;1]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cd6518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;2]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cd6a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;3]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cd6f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;4]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18d26898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;5]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cd6780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;6]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ccc1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;7]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cc59b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;8]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b57e96b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;9]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ce9358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;10]" time="0.0008034706115722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b57e962e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;11]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ccc940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;12]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18d1bd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;13]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b57ea3f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;14]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cd67b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;15]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cd6c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;16]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ce9358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;17]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ce9898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;18]" time="0.0008227825164794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18d40e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;19]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cd6eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;20]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b57e83b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;21]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ccc9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;22]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cc5438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;23]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ce9940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;24]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ce9470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;25]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cf2198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;26]" time="0.0011038780212402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cf26d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;27]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ce9470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;28]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cc5f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;29]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b57eb82b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;30]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ccc1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;31]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cd6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;32]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18d40278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;33]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cf2080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;34]" time="0.0007581710815429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cf2400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;35]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cd6c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;36]" time="0.0005393028259277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ccc1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;37]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b57eb8b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;38]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ce96a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;39]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18ce9e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;40]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cf2908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;41]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cf2358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;42]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f1b18cfc278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;0]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cf2e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;1]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cf2550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;2]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18ce9898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;3]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b57eb82b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;4]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cc5438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;5]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cd60b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;6]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cfc240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;7]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cfc780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;8]" time="0.0008094310760498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b57edea58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;9]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18ccc668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;10]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cc5ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;11]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b57eb8d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;12]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cf29b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;13]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cf2160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;14]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cfc5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;15]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cfc080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;16]" time="0.0007700920104980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cfc438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;17]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cfce10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;18]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cf2e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;19]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b57e5de48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;20]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18ce99e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;21]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cc5438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;22]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b57ea3c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;23]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18c865c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;24]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18d1bb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;25]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b57e5dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;26]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cfce10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;27]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cfc6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;28]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cf2470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;29]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b57eb84a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;30]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18ce9198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;31]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18ce9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;32]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18d26390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;33]" time="0.0008547306060791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18ce9128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;34]" time="0.0007746219635009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b57eb8748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;35]" time="0.0006783008575439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cf2c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;36]" time="0.0005643367767333984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cfcfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;37]" time="0.0006284713745117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cfc828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;38]" time="0.0009069442749023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cfca90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;39]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cf2cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;40]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b57eb89e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;41]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b18cf2c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;42]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f1b57e6dda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;0]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cd6c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;1]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18d26160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;2]" time="0.0007834434509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18de64a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;3]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18d1bb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;4]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cc5438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;5]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b57e96780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;6]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18ce9b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;7]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cf2400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;8]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cfc0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;9]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cf24e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;10]" time="0.0008335113525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b57f3c550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;11]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b212770f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;12]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cfcfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;13]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cf2400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;14]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18ce9b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;15]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cd6550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;16]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b57e5d668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;17]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18d6e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;18]" time="0.0007872581481933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18c868d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;19]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18ddf860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;20]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cc5438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;21]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cd6898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;22]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cf2dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;23]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b57e140f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;24]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b209761d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;25]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18c867b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;26]" time="0.0005924701690673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18c86048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;27]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cfc7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;28]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b57e14780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;29]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18ce9a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;30]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b57e6d278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;31]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18de6390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;32]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18c86470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;33]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18c86828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;34]" time="0.0005855560302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18c86080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;35]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18c86a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;36]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18c86f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;37]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18c86518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;38]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cd6c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;39]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cf24e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;40]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b57e14e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;41]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18cf26a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;42]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f1b18c9f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;0]" time="0.0008213520050048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18d40978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;1]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18cf2e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;2]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18d26358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;3]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b57e7dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;4]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c860b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;5]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c86da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;6]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c9f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;7]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c9f908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;8]" time="0.0008027553558349609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c86b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;9]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c86208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;10]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c86f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;11]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b57e24630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;12]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18d26240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;13]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c9f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;14]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c9f080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;15]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18ca4208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;16]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c9fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;17]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c9ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;18]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b57e6d128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;19]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18d261d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;20]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18cf2a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;21]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c86390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;22]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18ca4208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;23]" time="0.0007836818695068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18ca4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;24]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18ca46d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;25]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18ca4c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;26]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c86d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;27]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b57e379e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;28]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18d26da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;29]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b57dc8550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;30]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c9f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;31]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18caf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;32]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18caf908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;33]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c9f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;34]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b57dc8550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;35]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b57e144e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;36]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18c86cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;37]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18ca4a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;38]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18caf048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;39]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18cafc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;40]" time="0.0015175342559814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b18cb8208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;41]" time="0.0008759498596191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b57e146d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;42]" time="0.0005502700805664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f1b57dc80b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;0]" time="0.0006520748138427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18caff60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;1]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18caf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;2]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cafcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;3]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18ca46a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;4]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18ca4978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;5]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18c9f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;6]" time="0.0008249282836914062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18ca45c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;7]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b57ddafd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;8]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18caf320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;9]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18caf9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;10]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b57dc8748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;11]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b57e37748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;12]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18c9ff28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;13]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b57f51710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;14]" time="0.0008449554443359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18ccc1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;15]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18c9f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;16]" time="0.0009441375732421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b57dc8d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;17]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18caf2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;18]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18caf9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;19]" time="0.001386880874633789"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b57ded470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;20]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18ca4a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;21]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cfcb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;22]" time="0.0008766651153564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cb82b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;23]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b57e5d668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;24]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cfcef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;25]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18d26da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;26]" time="0.0006632804870605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18caf940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;27]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cd6898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;28]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18c9f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;29]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cb8048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;30]" time="0.00080108642578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cb87f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;31]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18c9fb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;32]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18caf668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;33]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cafc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;34]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b57ded3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;35]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18c86908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;36]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b57ddae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;37]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cb8470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;38]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cb8390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;39]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cb8a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;40]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18cb8f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;41]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b18ca4908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;42]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f1b57dedc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;0]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18caf4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;1]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b57df8668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;2]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c9fe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;3]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c47358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;4]" time="0.0008654594421386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c9fc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;5]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18cafb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;6]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b57ddae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;7]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18ca4e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;8]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18cb8f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;9]" time="0.0006165504455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18cb8d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;10]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c47358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;11]" time="0.0005631446838378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c47898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;12]" time="0.0008990764617919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18cb8b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;13]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18cfc8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;14]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b57ded470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;15]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18caf668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;16]" time="0.0005712509155273438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b57dedc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;17]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c47940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;18]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c47470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;19]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c51198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;20]" time="0.0008511543273925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c516d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;21]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c47f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;22]" time="0.0006861686706542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c47898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;23]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b57ddaf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;24]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b57dedf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;25]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18cfc358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;26]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18cb8a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;27]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c51048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;28]" time="0.0007612705230712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c51390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;29]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18cb89e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;30]" time="0.0005588531494140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18caf4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;31]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b57d8fc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;32]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c471d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;33]" time="0.0007517337799072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c47f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;34]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c51908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;35]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c51240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;36]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c5b278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;37]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c51e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;38]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c51518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;39]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18c47978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;40]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b57da2198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;41]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b18cafb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;42]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f1b57ddae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;0]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;1]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5b780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;2]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57dede48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;3]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57d8ff60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;4]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57da2ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;5]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c47748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;6]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c51cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;7]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;8]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;9]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5b978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;10]" time="0.0012664794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57da2588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;11]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c517f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;12]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c518d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;13]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c47710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;14]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c47be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;15]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57dc8550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;16]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18cb8128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;17]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57dedc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;18]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57dedf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;19]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18cb8cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;20]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57d8f780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;21]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c477f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;22]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c51470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;23]" time="0.0005524158477783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57d469e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;24]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57da2f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;25]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5ba90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;26]" time="0.0008053779602050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5be10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;27]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57d465f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;28]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c51b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;29]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c475c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;30]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57d8ff60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;31]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18cb8b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;32]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;33]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5b978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;34]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c6c400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;35]" time="0.0005533695220947266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5bb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;36]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5bef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;37]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c5b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;38]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c47b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;39]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c51780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;40]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b57d469e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;41]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c6c128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;42]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f1b18c6c908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;0]" time="0.0009129047393798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b57f3c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;1]" time="0.0005524158477783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c47fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;2]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b57d58748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;3]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18cb8b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;4]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c5bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;5]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c6c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;6]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c6c400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;7]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c6c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;8]" time="0.0008628368377685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c6c518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;9]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c6cf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;10]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c5b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;11]" time="0.0005724430084228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c6c780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;12]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b57d6a860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;13]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c47978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;14]" time="0.0011904239654541016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b57db4198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;15]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c73748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;16]" time="0.0008351802825927734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c73358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;17]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b57d589e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;18]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c516a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;19]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c5ba20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;20]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b57d6aa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;21]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c6c828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;22]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c73a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;23]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c73668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;24]" time="0.0008294582366943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c7c208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;25]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c73dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;26]" time="0.0005664825439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c6c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;27]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c73828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;28]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b57d6aa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;29]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c47fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;30]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b57d58160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;31]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c7c080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;32]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c7c828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;33]" time="0.00067138671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b57d7a278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;34]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c47fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;35]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c5b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;36]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c6cf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;37]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c736a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;38]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c7c978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;39]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c7c748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;40]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c7ca20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;41]" time="0.0008194446563720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c73e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;42]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f1b18c6c320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;0]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c5b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;1]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c47ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;2]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57d7acf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;3]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c7ca20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;4]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c7c550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;5]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c082b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;6]" time="0.0007877349853515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c7c630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;7]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c7c550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;8]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c7c860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;9]" time="0.0008063316345214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57d6acf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;10]" time="0.0009951591491699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57d7a668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;11]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c6cc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;12]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c080f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;13]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c08b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;14]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c08780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;15]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c08cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;16]" time="0.0005848407745361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c6c710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;17]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c73470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;18]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57d0b550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;19]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c7c080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;20]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c7c438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;21]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c11470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;22]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c51cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;23]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57d8f630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;24]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57d0f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;25]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c08400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;26]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c082e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;27]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c7ca20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;28]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c6c240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;29]" time="0.0008599758148193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c736a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;30]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c73198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;31]" time="0.0007948875427246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c73f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;32]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57d312e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;33]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c7cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;34]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c08550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;35]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c08cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;36]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57d0fc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;37]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57d6ae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;38]" time="0.0008399486541748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57da2c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;39]" time="0.0008485317230224609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57da2c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;40]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b57d7ab00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;41]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c089e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;42]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f1b18c080f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;0]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c7cc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;1]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b57d314e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;2]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c73e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;3]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c110f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;4]" time="0.0008785724639892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c11cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;5]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c6cf60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;6]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c7c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;7]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c08518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;8]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c7ca20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;9]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c08cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;10]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c11a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;11]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c11438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;12]" time="0.0008711814880371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c20278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;13]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c11438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;14]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b57d46fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;15]" time="0.0031261444091796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c08a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;16]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c08f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;17]" time="0.0005404949188232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b57d312e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;18]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c6c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;19]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c200f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;20]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c20898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;21]" time="0.0005390644073486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b57cc2b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;22]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c7c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;23]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c08780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;24]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b57d7ac50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;25]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c11a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;26]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c20438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;27]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c20518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;28]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c20940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;29]" time="0.0008931159973144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c20358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;30]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c20ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;31]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c11f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;32]" time="0.00077056884765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b57d0feb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;33]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c086d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;34]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c7c550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;35]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c6cf60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;36]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c2a320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;37]" time="0.0010752677917480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b57cc29e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;38]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c08e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;39]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b57cd44a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;40]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c08828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;41]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c11ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;42]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f1b18c20198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;0]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c2a160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;1]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c2abe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;2]" time="0.0008404254913330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c32160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;3]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c2ad30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;4]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c2ad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;5]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c2aa90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;6]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c20400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;7]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b57cd4400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;8]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b57d0f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;9]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c321d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;10]" time="0.0019948482513427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c326a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;11]" time="0.0005574226379394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c087f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;12]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b57cd4e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;13]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c114a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;14]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b57cf9860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;15]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c2a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;16]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c2abe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;17]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c32208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;18]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c32780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;19]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c2a208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;20]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b57cf97b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;21]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c11fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;22]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b57ce52b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;23]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c08828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;24]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c32550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;25]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c322e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;26]" time="0.0005483627319335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18bbf208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;27]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c32518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;28]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c32860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;29]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b57cd4e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;30]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c11f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;31]" time="0.0006396770477294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b57cf9da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;32]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c2aa90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;33]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18bbf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;34]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18bbf748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;35]" time="0.0012371540069580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b57d0feb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;36]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b57c8a3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;37]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c32a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;38]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c32668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;39]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c2a208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;40]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c2a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;41]" time="0.0005495548248291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c20fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;42]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f1b18c11cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;0]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c11978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;1]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c20668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;2]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c2add8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;3]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c2aef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;4]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c32f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;5]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c6cb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;6]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b57ce5208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;7]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bbf8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;8]" time="0.0008270740509033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bbf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;9]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b57c8a7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;10]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c32860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;11]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b57cc2a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;12]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c2a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;13]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c205c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;14]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c11438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;15]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bbf128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;16]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bbf320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;17]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bbfa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;18]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c11d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;19]" time="0.0006029605865478516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b57caf2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;20]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c2add8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;21]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c08ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;22]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c32898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;23]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c32ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;24]" time="0.0020291805267333984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bcf390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;25]" time="0.000926971435546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b57c8a278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;26]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c080f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;27]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c2aa20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;28]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b57caf0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;29]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bbf7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;30]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bbfda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;31]" time="0.0005781650543212891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bcf390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;32]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bcf8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;33]" time="0.0008144378662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bbfb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;34]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c110b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;35]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b57caf588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;36]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c2af28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;37]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18c323c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;38]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bcf978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;39]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bcf4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;40]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bd91d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;41]" time="0.0008041858673095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bd9710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;42]" time="0.0005426406860351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f1b18bcfd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;0]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18c321d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;1]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bcf748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;2]" time="0.0007786750793457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18c20668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;3]" time="0.0006015300750732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18c11dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;4]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b57caff60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;5]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bd90b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;6]" time="0.0008809566497802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bd9470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;7]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b57caf0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;8]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18c20668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;9]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b57c9bb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;10]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bcf748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;11]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bcfe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;12]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bd99e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;13]" time="0.0005390644073486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bd9208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;14]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18be22b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;15]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bd9e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;16]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bcf080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;17]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b57c3f390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;18]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18c2a860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;19]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b57c53550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;20]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b57caf6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;21]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18be2278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;22]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18be27b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;23]" time="0.0008208751678466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18c11dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;24]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b57c539e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;25]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18c321d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;26]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bcf710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;27]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bd9860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;28]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bd97b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;29]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18be2668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;30]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18be2940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;31]" time="0.0008015632629394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18be22e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;32]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18be2e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;33]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bd9eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;34]" time="0.0005562305450439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b57c3f390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;35]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b57c655f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;36]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18c32668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;37]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b57caf8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;38]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18beb5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;39]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b57cafd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;40]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18c32ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;41]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bcf978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;42]" time="0.0009791851043701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f1b18bd9da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;0]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18be21d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;1]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18be2048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;2]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18beb400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;3]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bebeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;4]" time="0.0005767345428466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b57cd49e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;5]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18c2a710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;6]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18be2940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;7]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18be2518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;8]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bebb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;9]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18beb5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;10]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bebd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;11]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bd90f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;12]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bcf9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;13]" time="0.0008416175842285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bd9da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;14]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18beb978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;15]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18beb710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;16]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18be2710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;17]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b57c53c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;18]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b57c75fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;19]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bcf828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;20]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b57ce5358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;21]" time="0.0007419586181640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bcfa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;22]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b57c650b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;23]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b57c53400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;24]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18be2be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;25]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bebc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;26]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bebdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;27]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bd9f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;28]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18c73550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;29]" time="0.000812530517578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bf8780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;30]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bd9f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;31]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bebf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;32]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b57c0a860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;33]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18be2860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;34]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b57c9beb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;35]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bcf710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;36]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bf8668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;37]" time="0.0008151531219482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18bf8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;38]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b57c75f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;39]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18be2630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;40]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b57c0a710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;41]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18beb6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;42]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f1b18ca4978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;0]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18bf8978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;1]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18bf8470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;2]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b88320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;3]" time="0.0005660057067871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18bf8ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;4]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18bf8940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;5]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18beb240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;6]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b57c0a710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;7]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18be2ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;8]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18bcf828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;9]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b88320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;10]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b88828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;11]" time="0.0008189678192138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b57c759b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;12]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18be2fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;13]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18beb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;14]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b57c30828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;15]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18bf86a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;16]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b88978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;17]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b88748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;18]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b88a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;19]" time="0.000812530517578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b88470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;20]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b88eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;21]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18bf8e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;22]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b57c30cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;23]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18beb240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;24]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b57c0ab00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;25]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b57c1a518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;26]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b8f668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;27]" time="0.0008358955383300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b8f278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;28]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b57bbf198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;29]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18beb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;30]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b57c30cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;31]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18bd95c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;32]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b88c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;33]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b8f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;34]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b8f518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;35]" time="0.0008327960968017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b9b128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;36]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b8fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;37]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b884a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;38]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18c73160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;39]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b57c30cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;40]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b57c0aa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;41]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b57bbf240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;42]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f1b18b9b278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;0]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9b748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;1]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b57bbf0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;2]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18beb240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;3]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18bf8940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;4]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b88c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;5]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b8f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;6]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b8f518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;7]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;8]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;9]" time="0.0005533695220947266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b8f748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;10]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b885c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;11]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18bf8eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;12]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b88978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;13]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b57bbf780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;14]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;15]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9b748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;16]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18ba51d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;17]" time="0.00115203857421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18be2ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;18]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b57c306d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;19]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9b7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;20]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9b198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;21]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b88c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;22]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b8f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;23]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b8f048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;24]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18bf88d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;25]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b57c655f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;26]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b8f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;27]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b88a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;28]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;29]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;30]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b57bd1f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;31]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18beb908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;32]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18bd95c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;33]" time="0.0008022785186767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18ba5048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;34]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18be2ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;35]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b57be42b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;36]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9bef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;37]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9b550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;38]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b9b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;39]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b8f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;40]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18ba5358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;41]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18ba58d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;42]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f1b18b8fef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;0]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b88f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;1]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b9bb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;2]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57be4358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;3]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57bf4400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;4]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57be4160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;5]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18ba57b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;6]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18ba5828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;7]" time="0.0007503032684326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18ba5358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;8]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18ba5f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;9]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57bf4550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;10]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57b87668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;11]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b9bac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;12]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b88a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;13]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b8f278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;14]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18bb4358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;15]" time="0.0007436275482177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18bf8eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;16]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b884a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;17]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b9bef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;18]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57be45f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;19]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18bbfef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;20]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18ba58d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;21]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18bb4198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;22]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18bb4c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;23]" time="0.0007429122924804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b3e198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;24]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18bb4d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;25]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18bb4eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;26]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18bb4a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;27]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57be47f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;28]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57c30cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;29]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b8f390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;30]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b3e080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;31]" time="0.0008189678192138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b3e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;32]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b9b400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;33]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57b87908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;34]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b9b550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;35]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57b98860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;36]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18bb4b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;37]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18bb4c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;38]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b3e358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;39]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18b3e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;40]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b18bb4a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;41]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57b987b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;42]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f1b57bf44a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;0]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b57b87908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;1]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18bbfa20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;2]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18b3ed30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;3]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18b3e860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;4]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18b4b240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;5]" time="0.0009784698486328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18b3e518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;6]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18b3eba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;7]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18b3e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;8]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18bbfa20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;9]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18ba5c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;10]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18bb4b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;11]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18b4b438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;12]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18b4b780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;13]" time="0.00075531005859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18bb4908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;14]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b57b98da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;15]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18bb4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;16]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b57ba9ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;17]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f1b18b3eb70&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem0]" time="0.000606536865234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b18b4b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem1]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b18b4b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem2]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b18b530b8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem3]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b18b4bc88&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem4]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b18b4bef0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem5]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b18b3e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem6]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b57b879b0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem7]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b57be4748&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem8]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b57b98128&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem9]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b18b53550&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem10]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b18b53978&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem11]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b57b98a58&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem12]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b57be45f8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem13]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b5046e748&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem14]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b18b4b438&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem15]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f1b18b4bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem0]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b18b3e518&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem1]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b18bb49b0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem2]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b18bb46d8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem3]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b18ba5e10&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem4]" time="0.0008478164672851562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b18ba5630&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem5]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b18bb4b38&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem6]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b18b3e080&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem7]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b18b4bc50&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem8]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b18b4bf28&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem9]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b57b87470&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem10]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b57ba9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem11]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f1b57c0aa58&gt;</skipped></testcase><testcase classname="src.pymortests.basic" file="src/pymortests/basic.py" line="6" name="test_importable" time="0.0008654594421386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/basic.py:6: &lt;py._xmlgen.raw object at 0x7f1b57b98da0&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="13" name="test_apply" time="0.00055694580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:13: &lt;py._xmlgen.raw object at 0x7f1b502a7be0&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="39" name="test_apply_adjoint" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:39: &lt;py._xmlgen.raw object at 0x7f1b5046ec18&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="65" name="test_block_diagonal" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:65: &lt;py._xmlgen.raw object at 0x7f1b18b4b630&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="76" name="test_blk_diag_apply_inverse" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:76: &lt;py._xmlgen.raw object at 0x7f1b18b3e908&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="98" name="test_blk_diag_apply_inverse_adjoint" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:98: &lt;py._xmlgen.raw object at 0x7f1b18bb4588&gt;</skipped></testcase><testcase classname="src.pymortests.cache.TestCache" file="src/pymortests/cache.py" line="57" name="test_runtime" time="0.0005559921264648438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/cache.py:57: &lt;py._xmlgen.raw object at 0x7f1b18b536d8&gt;</skipped></testcase><testcase classname="src.pymortests.cache.TestCache" file="src/pymortests/cache.py" line="83" name="test_region_api" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/cache.py:83: &lt;py._xmlgen.raw object at 0x7f1b18b53470&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="11" name="test_complex" time="0.0006043910980224609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:11: &lt;py._xmlgen.raw object at 0x7f1b18b63320&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="65" name="test_real_imag" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:65: &lt;py._xmlgen.raw object at 0x7f1b18ba5fd0&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="82" name="test_scal" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:82: &lt;py._xmlgen.raw object at 0x7f1b18b53080&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="95" name="test_axpy" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:95: &lt;py._xmlgen.raw object at 0x7f1b18b3e908&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="107" name="test_dot" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:107: &lt;py._xmlgen.raw object at 0x7f1b18b4bef0&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="114" name="test_pairwise_dot" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:114: &lt;py._xmlgen.raw object at 0x7f1b18b4bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;0 0 0 0&apos;]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b57be4748&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;1 2 0 3&apos;]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b636d8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--rect 1 2 0 3&apos;]" time="0.0008208751678466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b63358&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;0 0 2 1&apos;]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b57be4748&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 0 0 0 0&apos;]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b4b470&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 1 2 0 3&apos;]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b3e518&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv --rect 1 2 0 3&apos;]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b4bb70&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 0 0 2 1&apos;]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b53160&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic2:&apos;1 20&apos;]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b63860&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic2:&apos;--fv 1 20&apos;]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b635c0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_oned:&apos;1 20&apos;]" time="0.0005564689636230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b6a278&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_oned:&apos;--fv 1 20&apos;]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b63e48&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=lax_friedrichs 0.1&apos;]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b53828&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=engquist_osher 0.1&apos;]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b88e48&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=simplified_engquist_osher 0.1&apos;]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b57b87470&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat 1&apos;]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b4b668&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --rect 1&apos;]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b429da940&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --fv 1&apos;]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b6a438&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --rect --fv 1&apos;]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b6a780&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;dar 1&apos;]" time="0.0007719993591308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b5046ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;dar --rect 1&apos;]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b4bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_unstructured:&apos;6.0 16 0.1&apos;]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b3e898&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b53160&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b63860&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b635c0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b6a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b6a898&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.0007736682891845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b6a320&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_adaptive:&apos;10&apos;]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b6ae10&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_adaptive:&apos;--visualize-refinement 10&apos;]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b63a20&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;pymor naive 2 10 10&apos;]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b535c0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;fenics greedy 2 10 10&apos;]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b3ef28&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;ngsolve greedy 2 10 10&apos;]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b502f8cf8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;pymor-text adaptive_greedy -1 3 3&apos;]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b429da748&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_gui:&apos;--testing 2 2 3 5&apos;]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b745c0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers_ei:&apos;1 2 2 5 2 5 --plot-ei-err&apos;]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b429dabe0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers_ei:&apos;1 2 2 5 2 5 --ei-alg=deim&apos;]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b429eba90&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;pymor greedy 2 3 1&apos;]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18bb47b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;pymor pod 2 3 1&apos;]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b63240&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;fenics adaptive_greedy 2 3 1&apos;]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b63710&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[heat:&apos;&apos;]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b6a278&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[delay:&apos;&apos;]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b74358&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[string_equation:&apos;&apos;]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b74e80&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 0.01 10 100&apos;]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b74f98&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 --threads=2 0.01 10 100&apos;]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b74c18&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 --procs=2 0.01 10 100&apos;]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f1b18b6a7b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="171" name="test_analyze_pickle1" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:171: &lt;py._xmlgen.raw object at 0x7f1b18b634e0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="181" name="test_analyze_pickle2" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:181: &lt;py._xmlgen.raw object at 0x7f1b18b6aac8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="192" name="test_analyze_pickle3" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:192: &lt;py._xmlgen.raw object at 0x7f1b18b4b470&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="203" name="test_analyze_pickle4" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:203: &lt;py._xmlgen.raw object at 0x7f1b429dad30&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;0 0 0 0&apos;]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18afe780&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;1 2 0 3&apos;]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18afe0b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--rect 1 2 0 3&apos;]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b429eb7f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;0 0 2 1&apos;]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b535c0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 0 0 0 0&apos;]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b429fad30&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 1 2 0 3&apos;]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b6a550&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv --rect 1 2 0 3&apos;]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b74c88&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 0 0 2 1&apos;]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18afe470&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic2:&apos;1 20&apos;]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b0a080&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic2:&apos;--fv 1 20&apos;]" time="0.0008115768432617188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b0a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_oned:&apos;1 20&apos;]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18afedd8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_oned:&apos;--fv 1 20&apos;]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b74c18&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=lax_friedrichs 0.1&apos;]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b429fa438&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=engquist_osher 0.1&apos;]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b635f8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=simplified_engquist_osher 0.1&apos;]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18ba5d30&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat 1&apos;]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b429dad30&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --rect 1&apos;]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b0a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --fv 1&apos;]" time="0.001191854476928711"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b0a630&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --rect --fv 1&apos;]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b42a0afd0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;dar 1&apos;]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18afeef0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;dar --rect 1&apos;]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18afe9b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_unstructured:&apos;6.0 16 0.1&apos;]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b6a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b6af60&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b74eb8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b74ba8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b74fd0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0008091926574707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b74fd0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b74860&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_adaptive:&apos;10&apos;]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b6ab38&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_adaptive:&apos;--visualize-refinement 10&apos;]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b429dab38&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;pymor naive 2 10 10&apos;]" time="0.0006139278411865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18afe908&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;fenics greedy 2 10 10&apos;]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18afe588&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;ngsolve greedy 2 10 10&apos;]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b429fa400&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;pymor-text adaptive_greedy -1 3 3&apos;]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b63160&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_gui:&apos;--testing 2 2 3 5&apos;]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b635c0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers_ei:&apos;1 2 2 5 2 5 --plot-ei-err&apos;]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b429fa978&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers_ei:&apos;1 2 2 5 2 5 --ei-alg=deim&apos;]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18afecc0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;pymor greedy 2 3 1&apos;]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18afe2b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;pymor pod 2 3 1&apos;]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b6a828&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;fenics adaptive_greedy 2 3 1&apos;]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b74e80&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[heat:&apos;&apos;]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b74e48&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[delay:&apos;&apos;]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b746a0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[string_equation:&apos;&apos;]" time="0.0007455348968505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b0ad68&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 0.01 10 100&apos;]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b53ac8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 --threads=2 0.01 10 100&apos;]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b74828&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 --procs=2 0.01 10 100&apos;]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f1b18b6aac8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f1b429da9e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f1b18afe1d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f1b18afe208&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f1b18b0ac88&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f1b18b0a3c8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f1b429fa630&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="240" name="test_burgers_ei_results" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:240: &lt;py._xmlgen.raw object at 0x7f1b18afe748&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="249" name="test_parabolic_mor_results" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:249: &lt;py._xmlgen.raw object at 0x7f1b4299e588&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;0]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b74f98&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;1]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b429af748&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;2]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18ba5390&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;3]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b0a668&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;4]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b1e048&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;5]" time="0.0007479190826416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b0a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;6]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b53eb8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;7]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b429af550&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;8]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18ba5390&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;9]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b4299e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;10]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18afe358&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;11]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b4b588&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;12]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b1e588&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;13]" time="0.0007202625274658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b635c0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;14]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18afe588&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;15]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b4299e390&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;16]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b74dd8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;17]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18ba5ef0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;18]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b0a128&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;19]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b1e438&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;20]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b1e6a0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;21]" time="0.0010869503021240234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b263c8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;22]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b1ef98&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;23]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f1b18b0a908&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b1e668&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b6a550&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b4299efd0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18afe5c0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b26278&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.0007693767547607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b26908&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b4299e630&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b42a0a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b429af748&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b0a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b1ef98&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b26978&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b26048&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b265f8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b26b38&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b26780&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b1e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b0a748&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b1e320&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b42943a20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;20]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b42954a20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;21]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f1b18b30470&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;0]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b42943630&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;1]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b42954f60&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;2]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b4292ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;3]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b1e668&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;4]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b26198&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;5]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b26f28&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;6]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b300f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;7]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b309b0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;8]" time="0.0007863044738769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b260f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;9]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b1ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;10]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b6a550&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;11]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b42954588&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;12]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b427a3a58&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;13]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b30be0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;14]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b300f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;15]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b309b0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;16]" time="0.0011360645294189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18afe3c8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;17]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b427a3e48&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;18]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b303c8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;19]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b30160&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;20]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b30358&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;21]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b26b70&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;22]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b1e320&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;23]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f1b18b26320&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function0]" time="0.0008757114410400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b18b0ac50&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function1]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b18b1ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function2]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b18b26320&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function3]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b18b26b38&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function4]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b18b308d0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function5]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b18b305f8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function6]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b427b55c0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function7]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b18afeeb8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function8]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b18b74dd8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function9]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b18b740b8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function10]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b18b635c0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function11]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f1b18b303c8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="35" name="test_lincomb_function" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:35: &lt;py._xmlgen.raw object at 0x7f1b18b30ba8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function0]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b18b26c88&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function1]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b18b1ea90&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function2]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b18b0aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function3]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b18b38048&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function4]" time="0.0008218288421630859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b18b0a588&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function5]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b18b1eba8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function6]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b18b26c88&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function7]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b18b30cf8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function8]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b18b260b8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function9]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b427a3e48&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function10]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b18b745f8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function11]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f1b18b388d0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function0]" time="0.0007627010345458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f1b18bcf710&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function1]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f1b427a3f98&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function2]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f1b18b304a8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function3]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f1b18b26f28&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function4]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f1b18b1e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function5]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f1b427c9128&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function6]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f1b18b38780&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function7]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f1b18ac61d0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function0]" time="0.0007951259613037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b18ac6710&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function1]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b18b38f28&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function2]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b18b38dd8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function3]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b18b26390&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function4]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b18b1e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function5]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b427a3a58&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function6]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b18b300b8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function7]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b18ac60b8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function8]" time="0.0007736682891845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b18ac6470&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function9]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b18b30ac8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function10]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b427c3c18&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function11]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f1b18b26c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;0]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b427c9da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;1]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18b38978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;2]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ac6a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;3]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ac6668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;4]" time="0.0007469654083251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ace358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;5]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ac6eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;6]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ac6f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;7]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b427c9e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;8]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18b38e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;9]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b427c3ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;10]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b42943198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;11]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ace1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;12]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ace978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;13]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18bcf710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;14]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18b26b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;15]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18b38978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;16]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b427efe48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;17]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ac6630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;18]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18acea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;19]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ace240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;20]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ace908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;21]" time="0.0007379055023193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ace438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;22]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18acef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;23]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ac6b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;24]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18b38668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;25]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b427c9da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;26]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18b26048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;27]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18b6aef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;28]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ad9400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;29]" time="0.0007436275482177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18b30e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;30]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b427c3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;31]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18b1e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;32]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b427efbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;33]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ac60f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;34]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ace6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;35]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ad9240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;36]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ad9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;37]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ae3240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;38]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ad9da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;39]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ace9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;40]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b18ac6518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;41]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b427efcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;42]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f1b427c3358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;0]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b428012e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;1]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ae35c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;2]" time="0.0011227130889892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ae3b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;3]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b42801f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;4]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b42562208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;5]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ad9898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;6]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ad9f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;7]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ace240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;8]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ace908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;9]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ac6b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;10]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18b38828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;11]" time="0.0007953643798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ac6d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;12]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ace080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;13]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ad9710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;14]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ad9a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;15]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ad9f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;16]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b4284f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;17]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18b38b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;18]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b429eb400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;19]" time="0.0007641315460205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b429eb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;20]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b42801828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;21]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b4284f940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;22]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b42801048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;23]" time="0.000400543212890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ad9780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;24]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18aceb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;25]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ac6208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;26]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ae33c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;27]" time="0.0007371902465820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ae3828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;28]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b4283ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;29]" time="0.0004017353057861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ad99e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;30]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18b1e6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;31]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b4284f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;32]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b42801320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;33]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ae3ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;34]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ae3e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;35]" time="0.0007157325744628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18af63c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;36]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ae3f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;37]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18b38978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;38]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b4284ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;39]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18ad9da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;40]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b4283f128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;41]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18acecc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;42]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f1b18af6240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;0]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18af69e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;1]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b4283f908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;2]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ad9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;3]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b4283f978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;4]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18b38978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;5]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ae3f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;6]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18af6a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;7]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18af6438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;8]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18af65c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;9]" time="0.0007679462432861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18af64e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;10]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18af64a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;11]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ae33c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;12]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b4284ff98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;13]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ae3198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;14]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b428d1198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;15]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b4283fb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;16]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a7d470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;17]" time="0.0007526874542236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b4283f908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;18]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ad9588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;19]" time="0.0003991127014160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18b1e6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;20]" time="0.0003981590270996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ae3d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;21]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b427cf390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;22]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18af6780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;23]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a7d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;24]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a7dd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;25]" time="0.0007505416870117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a882b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;26]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a7de10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;27]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18af67b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;28]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b427cf588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;29]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b428be9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;30]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ae3978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;31]" time="0.0007989406585693359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b428d1198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;32]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a88160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;33]" time="0.0007445812225341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a887f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;34]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ad9da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;35]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b428bea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;36]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18ae3f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;37]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18af6438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;38]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a7d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;39]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a88860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;40]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a88198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;41]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a887b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;42]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f1b18a7d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;0]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18af6cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;1]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a7d048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;2]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18af66a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;3]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18ad9780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;4]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a88978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;5]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a88630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;6]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a91358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;7]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a883c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;8]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18ad9f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;9]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b42832d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;10]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b428bec18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;11]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18af6710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;12]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a7dc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;13]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a91080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;14]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a91898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;15]" time="0.0010802745819091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b428bec18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;16]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b428d11d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;17]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a88cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;18]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a88630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;19]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a7da90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;20]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a7d780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;21]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18af6320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;22]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18ae3400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;23]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b429eb550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;24]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18af60f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;25]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a7db70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;26]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18ad9f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;27]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a88f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;28]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b4281e748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;29]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b428be780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;30]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a91828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;31]" time="0.0007815361022949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a91470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;32]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b428be780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;33]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a88c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;34]" time="0.0005838871002197266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a88470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;35]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a7d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;36]" time="0.0006825923919677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18ad9eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;37]" time="0.0006699562072753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a91390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;38]" time="0.0075185298919677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a91160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;39]" time="0.0006265640258789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a910f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;40]" time="0.0005476474761962891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18a91b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;41]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b18b0ae80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;42]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f1b42553208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;0]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a7db70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;1]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a88da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;2]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b4281e940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;3]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a88240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;4]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a9f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;5]" time="0.0007913112640380859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b428bec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;6]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a88c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;7]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a7de48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;8]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b42553208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;9]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a916a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;10]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a91e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;11]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a9f048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;12]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a9fa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;13]" time="0.0007879734039306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a91cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;14]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18af6d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;15]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a911d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;16]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a88c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;17]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b42570a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;18]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a9f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;19]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a9f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;20]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18aaa320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;21]" time="0.0008397102355957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18aaa860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;22]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a9ff98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;23]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b42570978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;24]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a88e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;25]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a7d048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;26]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a910f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;27]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18aaa518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;28]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18aaa828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;29]" time="0.0007719993591308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18aaa5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;30]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a916a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;31]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a7d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;32]" time="0.0005764961242675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b4254b588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;33]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b4281efd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;34]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a9f390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;35]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18aaabe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;36]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18aaac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;37]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18ab4400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;38]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18aaaf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;39]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a9f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;40]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b42570710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;41]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a9f780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;42]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f1b18a7de48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;0]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a916a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;1]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab40f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;2]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab4908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;3]" time="0.0007739067077636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18af6a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;4]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a7d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;5]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b4254b780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;6]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a9f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;7]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18aaaa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;8]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab4a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;9]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab4400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;10]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab4978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;11]" time="0.000751495361328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab44a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;12]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab4f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;13]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18aaae10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;14]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18aaad68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;15]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b42570e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;16]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b4289ce80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;17]" time="0.00039839744567871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b4254b828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;18]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a3d748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;19]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a88e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;20]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b4254bac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;21]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a9f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;22]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18aaa6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;23]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab46d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;24]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab40f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;25]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a3d550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;26]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a3df98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;27]" time="0.0005605220794677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b42570f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;28]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a88c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;29]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab4a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;30]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab46d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;31]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a3deb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;32]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a3d978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;33]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b4289cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;34]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18aaa080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;35]" time="0.0004019737243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a9f390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;36]" time="0.0007770061492919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18aaabe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;37]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a3d048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;38]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a3d400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;39]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab47f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;40]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b428ade80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;41]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18ab46d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;42]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f1b18a9f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;0]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b4254bb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;1]" time="0.0007152557373046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a9fc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;2]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b4281ee80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;3]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b428ad2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;4]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18ab4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;5]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a3df60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;6]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a3dc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;7]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18aaae10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;8]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18ac6a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;9]" time="0.0008234977722167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a4a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;10]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18ae3ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;11]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a3d588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;12]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b4289cc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;13]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b428967b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;14]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b428add30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;15]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a9fac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;16]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a4a898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;17]" time="0.0007510185241699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a4ae10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;18]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b4254bd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;19]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b428969b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;20]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b4289cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;21]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a3d080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;22]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18ae3828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;23]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a4a940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;24]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a4a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;25]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a5a470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;26]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a4ab38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;27]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b428871d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;28]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a3dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;29]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18ab4b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;30]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b42896c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;31]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a9f390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;32]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a5a160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;33]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a5a978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;34]" time="0.0007598400115966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b428ad0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;35]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18ab47b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;36]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a3d080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;37]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b42887278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;38]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a4a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;39]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a5aba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;40]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a5a160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;41]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a5a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;42]" time="0.0008206367492675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f1b18a5a048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;0]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a5af98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;1]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a4aa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;2]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a5a780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;3]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18ae3ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;4]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b42887c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;5]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b428ad5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;6]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a657b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;7]" time="0.0008080005645751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a65358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;8]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a3db00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;9]" time="0.00040078163146972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b42887710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;10]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a4ae48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;11]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b4287cc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;12]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a5ad30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;13]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a65a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;14]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a653c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;15]" time="0.00078582763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a6c278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;16]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a65dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;17]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a5a080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;18]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18aaa8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;19]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a4abe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;20]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b42861198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;21]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18ab4438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;22]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a6c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;23]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a6c898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;24]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a3d630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;25]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b42861828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;26]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a4a160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;27]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a5a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;28]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a65550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;29]" time="0.0004017353057861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a6c860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;30]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a6c080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;31]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a6c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;32]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a656a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;33]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a5ac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;34]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a4abe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;35]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b42861390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;36]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18ab4080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;37]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a6ca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;38]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a6c630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;39]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a75320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;40]" time="0.0011107921600341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b42887cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;41]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b428df240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;42]" time="0.0004000663757324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f1b18a6c128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;0]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a6c550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;1]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a5a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;2]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a65d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;3]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a652e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;4]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a4a828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;5]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b4254b780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;6]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a65278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;7]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a65f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;8]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a5ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;9]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a6c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;10]" time="0.0005576610565185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a5a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;11]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b428618d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;12]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18aaa7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;13]" time="0.0007388591766357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a75198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;14]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b428df6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;15]" time="0.0003993511199951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a6c160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;16]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a6c470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;17]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a5a278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;18]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a652b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;19]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a4a588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;20]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a752b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;21]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a75a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;22]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b428f2f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;23]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a65080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;24]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a5a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;25]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a6cf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;26]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b428df630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;27]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a75ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;28]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a75470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;29]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a75a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;30]" time="0.00072479248046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a75518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;31]" time="0.0003981590270996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a75470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;32]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b42861fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;33]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a6cf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;34]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a65c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;35]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b429034a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;36]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b428f2550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;37]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a064a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;38]" time="0.00079345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b428f2940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;39]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b429039e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;40]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a5a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;41]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b18a6c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;42]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f1b428df390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;0]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a75828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;1]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a062e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;2]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a06d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;3]" time="0.0008018016815185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;4]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a06e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;5]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a06f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;6]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a06c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;7]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a6cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;8]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a65860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;9]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b429034a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;10]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;11]" time="0.0007827281951904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0e828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;12]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b42903f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;13]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a5aba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;14]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b42861828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;15]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a75d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;16]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a06400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;17]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;18]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0e048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;19]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0e940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;20]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;21]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0ef28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;22]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a06c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;23]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a752b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;24]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a6c588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;25]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a5a080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;26]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b429032b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;27]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a19390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;28]" time="0.0008046627044677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a4aa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;29]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b424d8278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;30]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a5a278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;31]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a06f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;32]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0e4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;33]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;34]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a19048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;35]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a198d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;36]" time="0.0007359981536865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0e438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;37]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a0ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;38]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a06320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;39]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a06e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;40]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b424d8cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;41]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a19828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;42]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f1b18a19400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;0]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a231d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;1]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a19d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;2]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a194a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;3]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a6c668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;4]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a75d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;5]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a06f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;6]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a0e908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;7]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a23160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;8]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a23a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;9]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b424ea7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;10]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a5ab38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;11]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a19198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;12]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a19550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;13]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b429032b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;14]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a0ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;15]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a06e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;16]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a06860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;17]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a751d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;18]" time="0.000766754150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a75cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;19]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a06710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;20]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a0e630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;21]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a06f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;22]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a19ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;23]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a194a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;24]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b424d8fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;25]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a9fc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;26]" time="0.0008187294006347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b424ea278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;27]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b424d8c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;28]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a19630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;29]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a19828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;30]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a0e6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;31]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a06cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;32]" time="0.0005440711975097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a75cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;33]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a23438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;34]" time="0.000823974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a36358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;35]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a23518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;36]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a06f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;37]" time="0.0004019737243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b4248bac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;38]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b424faac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;39]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a196d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;40]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b42861828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;41]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a36320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;42]" time="0.0007550716400146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f1b18a36898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;0]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a19cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;1]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b424fa978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;2]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b4248b240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;3]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a652b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;4]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a236d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;5]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a36978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;6]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a360b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;7]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a36518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;8]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a36a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;9]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a36f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;10]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a233c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;11]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a0e780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;12]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b4248be10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;13]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a199e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;14]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a4afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;15]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c1400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;16]" time="0.0007669925689697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b424ea860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;17]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b4248b588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;18]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b424fa6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;19]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a23908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;20]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a36908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;21]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a36f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;22]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c1048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;23]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c1940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;24]" time="0.0007393360137939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a36a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;25]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b424aebe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;26]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a23b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;27]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b424ae0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;28]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a19940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;29]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c18d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;30]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c1630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;31]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c9240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;32]" time="0.0007920265197753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c9780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;33]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c1518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;34]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c1a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;35]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c1128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;36]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a23940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;37]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b424aec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;38]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b424aef28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;39]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c90f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;40]" time="0.0007655620574951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b189c9400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;41]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b424ae5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;42]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f1b18a23828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;0]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b18a19978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;1]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c19b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;2]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c1e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;3]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c9a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;4]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;5]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189d2320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;6]" time="0.00040149688720703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c9e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;7]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b42451908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;8]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c1f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;9]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c1dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;10]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b18a236a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;11]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b424ae940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;12]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189d2080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;13]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189d2828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;14]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b424ae2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;15]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b18a23828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;16]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c1400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;17]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b42451860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;18]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c9da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;19]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189d2438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;20]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189d22b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;21]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189d2898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;22]" time="0.0011749267578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b42451f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;23]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b424ae2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;24]" time="0.000583648681640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;25]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c96d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;26]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c1b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;27]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b4249b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;28]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b4248bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;29]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b18a23a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;30]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b424ea128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;31]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b18a36a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;32]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c1c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;33]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c1fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;34]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;35]" time="0.0005815029144287109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b42460860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;36]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b424be358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;37]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189d2b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;38]" time="0.0007796287536621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189d2e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;39]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b424ae208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;40]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c97f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;41]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b189c1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;42]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f1b18a4ae10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;0]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b4248bb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;1]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189d2be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;2]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189d2390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;3]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189e34a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;4]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189d2ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;5]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b18a362e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;6]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b4246f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;7]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b4248b390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;8]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189c1ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;9]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b424be4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;10]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189e3198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;11]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189e39b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;12]" time="0.0010383129119873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b424be5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;13]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189c9780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;14]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b4248b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;15]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b18a239e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;16]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189d2f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;17]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189e3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;18]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189e3048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;19]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189e3940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;20]" time="0.0007684230804443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189e3550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;21]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189e3c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;22]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189d2898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;23]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b424852e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;24]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b18a362e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;25]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189c1d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;26]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b424be5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;27]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189ec7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;28]" time="0.0007367134094238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189ec390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;29]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189c1d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;30]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b4246f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;31]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b42485b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;32]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189d2b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;33]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189e3630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;34]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189ecb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;35]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189eccf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;36]" time="0.0007686614990234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189f72b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;37]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189ece10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;38]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189e3588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;39]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189d2b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;40]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b42485e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;41]" time="0.0006284713745117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189c10f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;42]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f1b189c99b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;0]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189f7128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;1]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189f78d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;2]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b42414588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;3]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b18a23908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;4]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189d25c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;5]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189e3860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;6]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189ecb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;7]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189f7518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;8]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189f7080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;9]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189f7940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;10]" time="0.0007662773132324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189f72e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;11]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189f7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;12]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189eca90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;13]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189e37b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;14]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b42485f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;15]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b42424e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;16]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b42485ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;17]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b18982358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;18]" time="0.0007271766662597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b42414630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;19]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b42460e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;20]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189d2f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;21]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189e32b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;22]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189ecdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;23]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189f77b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;24]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b18982198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;25]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b18982c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;26]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189827b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;27]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b18982cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;28]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189f7160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;29]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189e3c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;30]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189c19b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;31]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b42424940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;32]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b42414978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;33]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b1898a518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;34]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b42424898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;35]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b42436b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;36]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b18982940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;37]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b18982d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;38]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b18982a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;39]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189f7588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;40]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189f76d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;41]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189ecb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;42]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f1b189ec2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;0]" time="0.0008215904235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189ecfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;1]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189e3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;2]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189f7208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;3]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b42414978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;4]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b18982e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;5]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189829e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;6]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b42485198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;7]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189d2ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;8]" time="0.0008175373077392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189d2ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;9]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b42436208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;10]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b18982a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;11]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b18982ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;12]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189f7b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;13]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b42446208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;14]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189ec0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;15]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1898a278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;16]" time="0.0007598400115966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1898ada0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;17]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b424460b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;18]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189f77b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;19]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b423cb1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;20]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b18982e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;21]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b18a19668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;22]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1898aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;23]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1898ad68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;24]" time="0.0007641315460205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1899c320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;25]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1898ab38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;26]" time="0.0005552768707275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b18a19cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;27]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b18982b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;28]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b423cb1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;29]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189f7860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;30]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189e3c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;31]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1899c198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;32]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1899c940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;33]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b189f7e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;34]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b423cb668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;35]" time="0.0007596015930175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b18982898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;36]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b42436b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;37]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1898a128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;38]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1899c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;39]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1899c198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;40]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1899c898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;41]" time="0.0008642673492431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1899c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;42]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f1b1899cf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;0]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b1898ac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;1]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b18982b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;2]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b423cbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;3]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b423e8278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;4]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b423cbda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;5]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189a63c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;6]" time="0.0008296966552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189e3dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;7]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b423e8908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;8]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b423cbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;9]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b42436f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;10]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b1898aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;11]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b1899c470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;12]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189a6208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;13]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189a6c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;14]" time="0.0007777214050292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189b0208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;15]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189a6d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;16]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b1899cc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;17]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b42424898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;18]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b42436f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;19]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b423faa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;20]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189f7b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;21]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189b00b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;22]" time="0.0008554458618164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189b0748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;23]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189f7b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;24]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b18982b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;25]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b1898abe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;26]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b4238d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;27]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189a6400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;28]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189a6908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;29]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189b0048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;30]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189b07f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;31]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189a6a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;32]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b4238d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;33]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b1898aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;34]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b423faeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;35]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b423e87b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;36]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189b09e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;37]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189b04a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;38]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189ba2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;39]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189b0588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;40]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b189b0898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;41]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b18982a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;42]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f1b1898aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;0]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b4238d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;1]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189a6a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;2]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189ba240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;3]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189ba7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;4]" time="0.001093149185180664"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b423fa978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;5]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b18982c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;6]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189b03c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;7]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189b06a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;8]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189a6b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;9]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189a6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;10]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b1899ce80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;11]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b1898ada0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;12]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b1898acf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;13]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b1899ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;14]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189a63c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;15]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b1899c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;16]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189b0f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;17]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b423a25f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;18]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b423fa8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;19]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189ba860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;20]" time="0.0007984638214111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189ba358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;21]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189ec908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;22]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189b0588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;23]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189b07f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;24]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189a6e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;25]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b1899c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;26]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b1898acf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;27]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189ba860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;28]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189ba9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;29]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189baa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;30]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b423c00b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;31]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b1899c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;32]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189a6b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;33]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189b0a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;34]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b423a22b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;35]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189ec080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;36]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b18948438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;37]" time="0.0007836818695068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189f7a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;38]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189b0908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;39]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189a66a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;40]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b1899c320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;41]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189a6da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;42]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f1b189baef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;0]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18948080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;1]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18948978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;2]" time="0.0007922649383544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189baba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;3]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b423c0b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;4]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b1899c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;5]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189a66d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;6]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189b0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;7]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18948908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;8]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18948668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;9]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18953278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;10]" time="0.0008080005645751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189537b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;11]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18948668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;12]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189b0160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;13]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189a6cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;14]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b423c0748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;15]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189a6da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;16]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18953400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;17]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18953780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;18]" time="0.0007786750793457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189532e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;19]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b42350cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;20]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b1899c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;21]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189a6cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;22]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18948828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;23]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18948f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;24]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18953ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;25]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189536a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;26]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b1895e358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;27]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18953eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;28]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18953b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;29]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189533c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;30]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189a6cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;31]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b423635c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;32]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b42350f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;33]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b1895e048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;34]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b1895e860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;35]" time="0.0008027553558349609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b423c0400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;36]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b423635c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;37]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b189b0160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;38]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18948080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;39]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18953048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;40]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b18948da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;41]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b1895e080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;42]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f1b1895ea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;0]" time="0.0007808208465576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b1895e048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;1]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b1895ee80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;2]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18953f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;3]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b423753c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;4]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18948f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;5]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b1899c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;6]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b189a6da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;7]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b189676a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;8]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b42363c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;9]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b189b0748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;10]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18948550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;11]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18953400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;12]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b1895e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;13]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b1895e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;14]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b189674a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;15]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18967f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;16]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b42388978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;17]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b189b04a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;18]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b1895e198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;19]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b1895eeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;20]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18967dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;21]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18967ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;22]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b423c00b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;23]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18953cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;24]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18948860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;25]" time="0.0007760524749755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18953748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;26]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18967198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;27]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18967d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;28]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b42363a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;29]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b1895ee80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;30]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b189b0ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;31]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18948a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;32]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b423fa978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;33]" time="0.0007274150848388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18948860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;34]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b42388780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;35]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18948630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;36]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b1895e748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;37]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18967eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;38]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b189675f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;39]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18953390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;40]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18a75b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;41]" time="0.0007967948913574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18971828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;42]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f1b18953390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;0]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18967e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;1]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b42318630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;2]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b1895ee80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;3]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b42375470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;4]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18948b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;5]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b189717f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;6]" time="0.0008146762847900391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18971d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;7]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b42375470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;8]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b1895e518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;9]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b423188d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;10]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18967e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;11]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18a75390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;12]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18971a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;13]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18971588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;14]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b189003c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;15]" time="0.0005621910095214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18971f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;16]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18971860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;17]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18967fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;18]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18a75390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;19]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18967dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;20]" time="0.0005717277526855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b42388f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;21]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18900048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;22]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b189008d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;23]" time="0.0007355213165283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b42388978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;24]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b42318ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;25]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18967b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;26]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b4233a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;27]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b189716a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;28]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18900a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;29]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b189003c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;30]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18900940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;31]" time="0.0007476806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18900470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;32]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18900ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;33]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18971a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;34]" time="0.0005655288696289062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b4233ab38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;35]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18967fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;36]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b42327dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;37]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b42388780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;38]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b1890b710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;39]" time="0.0007753372192382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b1890b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;40]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b42363cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;41]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b18967898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;42]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f1b4233af28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;0]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18953cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;1]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18900860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;2]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1890b978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;3]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1890b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;4]" time="0.0007698535919189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b189131d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;5]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1890bd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;6]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18900080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;7]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18900278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;8]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18971f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;9]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18967898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;10]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b423188d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;11]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18913048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;12]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b189137f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;13]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b189a6b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;14]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b4233a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;15]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18967a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;16]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1899ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;17]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1890bac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;18]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1890b518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;19]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18913080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;20]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18913898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;21]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1890b908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;22]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1890b550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;23]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1890be48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;24]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b4233aa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;25]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b423484a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;26]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b189130b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;27]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b189134a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;28]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18921278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;29]" time="0.0011157989501953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b42363cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;30]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b422dfcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;31]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b189134a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;32]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18913828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;33]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18900978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;34]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1890b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;35]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1890b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;36]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18971a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;37]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b189716a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;38]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b1890b518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;39]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b189486a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;40]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18913e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;41]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b18913320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;42]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f1b422df470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;0]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b422ef470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;1]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b189537b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;2]" time="0.0007865428924560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b189210f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;3]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18953c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;4]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b422dfcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;5]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b189137f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;6]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b4233a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;7]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18948160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;8]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b1890b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;9]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b189212b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;10]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18921978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;11]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b1890bb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;12]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18900c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;13]" time="0.000400543212890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18913b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;14]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b422dfda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;15]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b422fed68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;16]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18921b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;17]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18921588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;18]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18921a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;19]" time="0.0007281303405761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18921208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;20]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18921f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;21]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b422feeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;22]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b4233aa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;23]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18913a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;24]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b422936d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;25]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b1890beb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;26]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b1892e400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;27]" time="0.0007352828979492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b189716a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;28]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b42293828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;29]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18913f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;30]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b422df470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;31]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18913588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;32]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18921630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;33]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b1892e240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;34]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b1892ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;35]" time="0.0007357597351074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18934240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;36]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b1892eda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;37]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b1892ed68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;38]" time="0.00039505958557128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b1892eb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;39]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b422df470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;40]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18913f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;41]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b42293ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;42]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f1b18934208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;0]" time="0.0007746219635009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18934780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;1]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b42293cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;2]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18913320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;3]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18900fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;4]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b422dfe48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;5]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b1892e438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;6]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b422a3390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;7]" time="0.0004000663757324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b189340b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;8]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b189343c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;9]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b1892e240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;10]" time="0.0003972053527832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18921630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;11]" time="0.0003991127014160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b422efeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;12]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18913080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;13]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b42293438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;14]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18934978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;15]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b189344a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;16]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b188c12e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;17]" time="0.0008487701416015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18934588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;18]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18900828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;19]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b422b4a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;20]" time="0.00039839744567871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18913080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;21]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b422a3588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;22]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b1892e240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;23]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b188c1240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;24]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b188c1828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;25]" time="0.0007073879241943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18921f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;26]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b1892ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;27]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b189ba0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;28]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b42293eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;29]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18913320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;30]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b188c1080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;31]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b188c13c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;32]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b188cd128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;33]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b188c1c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;34]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b188c1f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;35]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b18900f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;36]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b189137f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;37]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b422b4d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;38]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b1892ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;39]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b188cd278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;40]" time="0.0005931854248046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b188cd9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;41]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b422dfda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;42]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f1b422b4550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;0]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b422c45f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;1]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188c1eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;2]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188c18d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;3]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b18934be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;4]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188c1b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;5]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b1892e748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;6]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b18921358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;7]" time="0.0007910728454589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b18921eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;8]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b189210f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;9]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b18934c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;10]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188c1a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;11]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188c15f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;12]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b422c4c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;13]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b422b47f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;14]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b18971d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;15]" time="0.0007452964782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b18971d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;16]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b422b4550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;17]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b422c4b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;18]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188c1c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;19]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188c14e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;20]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b18934438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;21]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b18921f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;22]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188cd390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;23]" time="0.000774383544921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188dd2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;24]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188cd470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;25]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b189341d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;26]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188c1eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;27]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b42253c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;28]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b18900a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;29]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b1890beb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;30]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188dd278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;31]" time="0.0007915496826171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188dd7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;32]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b422c47f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;33]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b42268128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;34]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188c1320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;35]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b18934710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;36]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b18921eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;37]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188dd860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;38]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188dd198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;39]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188dd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;40]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b1892e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;41]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b1892e0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;42]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f1b188c1da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;0]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b42268fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;1]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188c1e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;2]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188dda90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;3]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188dd5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;4]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188e7358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;5]" time="0.000743865966796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188dd6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;6]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188dd128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;7]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b42268da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;8]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188c1320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;9]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b42268128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;10]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188cdf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;11]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188e7358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;12]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188e7898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;13]" time="0.0007524490356445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188cd710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;14]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b42277710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;15]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b42253e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;16]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b422c4c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;17]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188dd128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;18]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188e78d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;19]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188e7400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;20]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188f1198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;21]" time="0.0007746219635009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188f16d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;22]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188e7e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;23]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b4220a978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;24]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188dde80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;25]" time="0.0011141300201416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b42268ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;26]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b422775c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;27]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188cd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;28]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188f1048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;29]" time="0.0007870197296142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188f1320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;30]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188c1320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;31]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b42268908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;32]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188ddc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;33]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b4221b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;34]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188e7f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;35]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188f1940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;36]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188f1588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;37]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188fc278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;38]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188f1dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;39]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b188e7358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;40]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b4221bb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;41]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b4220af60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;42]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f1b422685c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;0]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188cd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;1]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188fc208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;2]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188fc780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;3]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b189ba5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;4]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188ddb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;5]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b4221b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;6]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188e78d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;7]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188f1c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;8]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188f1588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;9]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188fc630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;10]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188fc828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;11]" time="0.0010924339294433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b4221b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;12]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b42268e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;13]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188f1f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;14]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188f1c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;15]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188e7518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;16]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b4220a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;17]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188dd390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;18]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188cdeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;19]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b18971cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;20]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188dd198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;21]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188e7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;22]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188e75f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;23]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188f1be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;24]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b4223d748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;25]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188c1b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;26]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188fca20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;27]" time="0.0007431507110595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188fc0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;28]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b4223dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;29]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188f17b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;30]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188e75f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;31]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b4220a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;32]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188dd860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;33]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188fc588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;34]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188fc828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;35]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b1888b400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;36]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188fcf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;37]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b421cb160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;38]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b4220a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;39]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b18934710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;40]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b188f1eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;41]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b42268ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;42]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f1b1888b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;0]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1888b908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;1]" time="0.0007503032684326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b4223dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;2]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188f1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;3]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188e7940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;4]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188ddb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;5]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188fcb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;6]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1888ba90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;7]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1888b400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;8]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1888b978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;9]" time="0.0007550716400146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1888b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;10]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1888bf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;11]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188fc9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;12]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b421cb160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;13]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b421dd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;14]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188dd518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;15]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b4223d358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;16]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b18893748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;17]" time="0.0007808208465576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188932e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;18]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188f1390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;19]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188dd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;20]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188fcb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;21]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188cd588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;22]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1888b898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;23]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188939e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;24]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b18893c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;25]" time="0.0008101463317871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1889e208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;26]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b18893d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;27]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1888b748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;28]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188cdf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;29]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b421f0518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;30]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188fce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;31]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188f1be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;32]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1889e080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;33]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1889e828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;34]" time="0.0006051063537597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188e7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;35]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188ddb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;36]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188fcf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;37]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1888ba90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;38]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b18893390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;39]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b188936a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;40]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1889e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;41]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b1889e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;42]" time="0.0007336139678955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f1b18893cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;0]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1888b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;1]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188934e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;2]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1888b080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;3]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b4223dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;4]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1889e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;5]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1889e828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;6]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188aa2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;7]" time="0.0007395744323730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1889e358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;8]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1889e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;9]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b421ddda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;10]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b421f03c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;11]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b421dd668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;12]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1888b898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;13]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188aa0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;14]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188aab70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;15]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188934e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;16]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188fce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;17]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b421f0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;18]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188fc208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;19]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1889e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;20]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188aabe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;21]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188aa438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;22]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188b5470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;23]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188f1fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;24]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b42192a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;25]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188aa860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;26]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188aadd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;27]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188aa908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;28]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1889ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;29]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1888b898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;30]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b18893390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;31]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b18893198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;32]" time="0.0007684230804443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b18893780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;33]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1888bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;34]" time="0.00039887428283691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b1889eef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;35]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b4223dc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;36]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188aa9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;37]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b42192e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;38]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b421f01d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;39]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b421922e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;40]" time="0.0007309913635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b18971828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;41]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b42192390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;42]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f1b188aa978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;0]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188aa6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;1]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b1889e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;2]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b4223dd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;3]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188937b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;4]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188b5198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;5]" time="0.0007588863372802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188b5cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;6]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b1888bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;7]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b421ddcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;8]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188aa828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;9]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188aaa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;10]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188aa6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;11]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188b5208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;12]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188b5cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;13]" time="0.0008115768432617188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b18843278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;14]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188b54a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;15]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188f1f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;16]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188aaa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;17]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b1889e160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;18]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188aa5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;19]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188935c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;20]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188430f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;21]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b18843898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;22]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b421b3b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;23]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b421a2828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;24]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b42192198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;25]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188aa320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;26]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188b5048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;27]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b18843a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;28]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188434a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;29]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188439b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;30]" time="0.0007836818695068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188b5908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;31]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188aa588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;32]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b1889e080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;33]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b421c60b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;34]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b1888ba90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;35]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188432b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;36]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188433c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;37]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b18851320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;38]" time="0.0007297992706298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188935c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;39]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b188435c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;40]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b421b36a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;41]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b421c69e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;42]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f1b421920f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;0]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b188b5f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;1]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18851160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;2]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18851be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;3]" time="0.0007612705230712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18854160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;4]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18851cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;5]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b188b5eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;6]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b188aa518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;7]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b42192f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;8]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b421b3a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;9]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18843b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;10]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b1888b860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;11]" time="0.0007452964782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b188546a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;12]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18843ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;13]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b421c6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;14]" time="0.0005393028259277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b42154160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;15]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b188b5eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;16]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18851400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;17]" time="0.0005826950073242188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18851be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;18]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b188542b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;19]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b188546d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;20]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b188514a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;21]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18851c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;22]" time="0.0004029273986816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b42154fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;23]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b421c6e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;24]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18843470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;25]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18854898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;26]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b188541d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;27]" time="0.00040030479431152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18860208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;28]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18854438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;29]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18854b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;30]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b421c69e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;31]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b42154fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;32]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b42169da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;33]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18851400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;34]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18860240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;35]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18860748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;36]" time="0.0011281967163085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b188aa710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;37]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b42154fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;38]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18854a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;39]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18854f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;40]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18851f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;41]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b188516a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;42]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f1b18843f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;0]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188e7c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;1]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b421a20f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;2]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18843048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;3]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188510f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;4]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b1888b630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;5]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188543c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;6]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b42178668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;7]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188aa588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;8]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188607f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;9]" time="0.0007288455963134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18860278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;10]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b421b3b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;11]" time="0.00039887428283691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18854d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;12]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18854ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;13]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18851f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;14]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b4210acc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;15]" time="0.0007801055908203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188b5e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;16]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188600b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;17]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188605c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;18]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188609e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;19]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18860f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;20]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18843278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;21]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188510f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;22]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b4210af60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;23]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18854f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;24]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18893e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;25]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18872390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;26]" time="0.0008218288421630859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188aa588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;27]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b421789b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;28]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b4210ab70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;29]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18843c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;30]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18860940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;31]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18860d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;32]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18872080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;33]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188728d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;34]" time="0.0007328987121582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b188605c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;35]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b4211ab70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;36]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18843048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;37]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b4211a978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;38]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18854eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;39]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18872828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;40]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b18872400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;41]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b1887b1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;42]" time="0.0007555484771728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f1b1887b710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;0]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18872e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;1]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18854320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;2]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18851550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;3]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18843470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;4]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4211ab70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;5]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b188605c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;6]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b1887b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;7]" time="0.0007836818695068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b1887b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;8]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4211aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;9]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4210aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;10]" time="0.0005750656127929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18851dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;11]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b42129198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;12]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18872f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;13]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b1887b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;14]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b1887b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;15]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b188052b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;16]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b1887be10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;17]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18872518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;18]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b42129240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;19]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18851f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;20]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4211ad68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;21]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4213f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;22]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18805208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;23]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b188057b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;24]" time="0.0007517337799072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4213f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;25]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4211ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;26]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4213f898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;27]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18872940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;28]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b1887bc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;29]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b1887b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;30]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b188055f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;31]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18805080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;32]" time="0.0007219314575195312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b188050f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;33]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b18805dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;34]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b1887b048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;35]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b1887bb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;36]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b1887b780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;37]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4211ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;38]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4213f358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;39]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b188105f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;40]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4213f550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;41]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4211ad68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;42]" time="0.00039839744567871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f1b4213f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;0]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b1887b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;1]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b1887bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;2]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18805588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;3]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18810400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;4]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18810eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;5]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b420e07b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;6]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b4211aa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;7]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b420cf550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;8]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18805978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;9]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18810470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;10]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b188105f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;11]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18810c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;12]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b1887b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;13]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18872978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;14]" time="0.0007665157318115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b1887b668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;15]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b188100b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;16]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b188109e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;17]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b188057f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;18]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18805a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;19]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b420cf748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;20]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b188729e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;21]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b188931d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;22]" time="0.0007605552673339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b188aa710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;23]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b188729e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;24]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b420cf898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;25]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18805748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;26]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b420f21d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;27]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b188105f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;28]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b1887bc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;29]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b188cd940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;30]" time="0.0007488727569580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18820780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;31]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b1887bc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;32]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18810d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;33]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b420f2668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;34]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18805668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;35]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b420cf9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;36]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b420e0cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;37]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18820748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;38]" time="0.0007839202880859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18820cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;39]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b420e0cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;40]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18805390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;41]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b420f27b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;42]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f1b18810d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;0]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b420f2a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;1]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18820978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;2]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b188204e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;3]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b1882c320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;4]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18820e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;5]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b188208d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;6]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18810438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;7]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b420f2da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;8]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18805fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;9]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b420f29b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;10]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b1882c320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;11]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b1882c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;12]" time="0.0007572174072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b420cf208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;13]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b4213f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;14]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b1887bc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;15]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b42106780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;16]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18820048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;17]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18820fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;18]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b1882c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;19]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b1882c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;20]" time="0.0009136199951171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b1882c278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;21]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b1882ce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;22]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18820518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;23]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b42106a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;24]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18810940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;25]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b420f2a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;26]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b420cfa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;27]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18835668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;28]" time="0.0007941722869873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18835208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;29]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18805748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;30]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18810ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;31]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b42106b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;32]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b188207f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;33]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b1882c898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;34]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b188358d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;35]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18835518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;36]" time="0.0007925033569335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b187be128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;37]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18835c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;38]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b1882c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;39]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b18835320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;40]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b42106b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;41]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b420f2fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;42]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f1b420a32e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;0]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187be0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;1]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187be748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;2]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b420a3390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;3]" time="0.00040149688720703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b18810710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;4]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b18820898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;5]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b1882c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;6]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b18835710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;7]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b18835470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;8]" time="0.0004031658172607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187be5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;9]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187be2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;10]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b18835da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;11]" time="0.000400543212890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b1882c128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;12]" time="0.0004000663757324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b18820a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;13]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b420a36d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;14]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b188053c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;15]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187be2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;16]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187be6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;17]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187cb1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;18]" time="0.0010805130004882812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b420b6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;19]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b420f2278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;20]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187bef28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;21]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187be4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;22]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b1882c320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;23]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b1882cf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;24]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b18835c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;25]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b18835e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;26]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b420e07b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;27]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b188352e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;28]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b1882c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;29]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187be550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;30]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187bef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;31]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b420c9a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;32]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187bef28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;33]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b420c97f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;34]" time="0.0007491111755371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187cb048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;35]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b1887bc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;36]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b420c9400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;37]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b420a3438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;38]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187bee48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;39]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b1882c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;40]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b18835a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;41]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187cb240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;42]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f1b187cb8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;0]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b18835f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;1]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b42057358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;2]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187bea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;3]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b420f2e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;4]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b420c97f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;5]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b1887b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;6]" time="0.0004000663757324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187cb748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;7]" time="0.0004000663757324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187cb518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;8]" time="0.0007588863372802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187cb2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;9]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187cbeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;10]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b18810588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;11]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b18860c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;12]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187be400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;13]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b1882cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;14]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b18835b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;15]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187d9358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;16]" time="0.0008101463317871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b18820780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;17]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b420572b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;18]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187be710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;19]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b4206e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;20]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187be6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;21]" time="0.0005729198455810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187cb470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;22]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187d9198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;23]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187d9c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;24]" time="0.0007956027984619141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187e2198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;25]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187d9cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;26]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187d9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;27]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187cb780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;28]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187cb860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;29]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b4206eef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;30]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b420570b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;31]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187e2160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;32]" time="0.0007758140563964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187e26d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;33]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b4206eba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;34]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187be9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;35]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b1887b208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;36]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b420f2a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;37]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187d9438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;38]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187d9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;39]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187e2080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;40]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187e2748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;41]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b187d94e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;42]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f1b4207c320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;0]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b420f2a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;1]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187be400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;2]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b4206e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;3]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187e2518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;4]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187e2208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;5]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187ee240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;6]" time="0.0008480548858642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187e2470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;7]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187e2b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;8]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b4206e320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;9]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187be400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;10]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187cb780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;11]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187d9438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;12]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187ee358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;13]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187ee780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;14]" time="0.0007846355438232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187d9cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;15]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b4207c278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;16]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187d9f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;17]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b4207cc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;18]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187bea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;19]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187e2470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;20]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187ee2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;21]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187ee7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;22]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187eebe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;23]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187eee48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;24]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187e2da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;25]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187e2400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;26]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187cbb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;27]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b4207c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;28]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187f94a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;29]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187f9940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;30]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b4207c908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;31]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b4206eba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;32]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b4201f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;33]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187ee780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;34]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187ee390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;35]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187e2080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;36]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187d9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;37]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187d9710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;38]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187cb358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;39]" time="0.0007817745208740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187cb588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;40]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187d9630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;41]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187e2a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;42]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f1b187ee390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;0]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187ee550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;1]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b4201fc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;2]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187eed68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;3]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b18820518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;4]" time="0.0007753372192382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b18820518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;5]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b18820eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;6]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b4201ff60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;7]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187ee668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;8]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187e2518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;9]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b4202e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;10]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187cbe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;11]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187f92e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;12]" time="0.0008478164672851562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b1878a208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;13]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187f93c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;14]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187d9d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;15]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187e2828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;16]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187eed68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;17]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b4201f828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;18]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b42042898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;19]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b1878a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;20]" time="0.0008022785186767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b1878a748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;21]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187be6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;22]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b4201f438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;23]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187eeb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;24]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187e2ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;25]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187d9710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;26]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187f91d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;27]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b1878a080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;28]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b1878a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;29]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b4202e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;30]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187e2438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;31]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187ee710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;32]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187e2470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;33]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b42042208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;34]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b1878a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;35]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b1878a438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;36]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187912b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;37]" time="0.0008149147033691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b1878a518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;38]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b1878ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;39]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b4201fd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;40]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b187eea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;41]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b41fcf748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;42]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f1b4202e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;0]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b18791400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;1]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187917f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;2]" time="0.0007808208465576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187f9278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;3]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b41fcf400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;4]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187e2438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;5]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b41fcf6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;6]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b1878a438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;7]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b42042940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;8]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b18791400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;9]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a00f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;10]" time="0.0007786750793457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a0630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;11]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b18791c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;12]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b1878ae48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;13]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b42042dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;14]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b1878a710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;15]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b41fcfd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;16]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187f9630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;17]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a00f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;18]" time="0.0007641315460205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a01d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;19]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b41fcf6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;20]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187ee710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;21]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b42042940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;22]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b41ff53c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;23]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b18791e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;24]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a06d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;25]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a0438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;26]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a71d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;27]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a0d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;28]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a00f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;29]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a0240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;30]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b1878ab00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;31]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b41ff5908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;32]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b41fcf400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;33]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a7208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;34]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a76d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;35]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187e28d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;36]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b18835c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;37]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b41ff5b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;38]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b18791588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;39]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a0748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;40]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;41]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a7518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;42]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f1b187a71d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;0]" time="0.0011327266693115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b41ff5f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;1]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b42004470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;2]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a06d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;3]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a0d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;4]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187910b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;5]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b18791b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;6]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b1878a160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;7]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187f9d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;8]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187cbc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;9]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b1878ab38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;10]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b18791550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;11]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b1878aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;12]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a00f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;13]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a0390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;14]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187e24a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;15]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a7908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;16]" time="0.0007634162902832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a7128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;17]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187d9c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;18]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a0a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;19]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b18791eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;20]" time="0.0006012916564941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b41fe0b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;21]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b1878ab00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;22]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a7588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;23]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a7c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;24]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187b9358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;25]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;26]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a7710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;27]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a7550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;28]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b41f98eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;29]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a03c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;30]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b41f98cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;31]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187b9048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;32]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187b9860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;33]" time="0.000835418701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a07f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;34]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b41f98630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;35]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b41fe0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;36]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b41fa86d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;37]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187a72e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;38]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b41fa8438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;39]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187b9080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;40]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187b9a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;41]" time="0.0008013248443603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187b9048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;42]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f1b187b9e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;0]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187a7d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;1]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b41fa8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;2]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b1878ab70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;3]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b41f98390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;4]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187a0d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;5]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187426a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;6]" time="0.0008008480072021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b18742240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;7]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187a0be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;8]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187f9898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;9]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b41fa8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;10]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187a7908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;11]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187b9898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;12]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b18742940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;13]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b18742ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;14]" time="0.0008401870727539062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b1874b160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;15]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b18742cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;16]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b41f4d128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;17]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187b9518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;18]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b41fb60f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;19]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b18820eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;20]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b41fb6ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;21]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b1874b128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;22]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b1874b780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;23]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187f9f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;24]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b41fa8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;25]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187b9160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;26]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b41fb6e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;27]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b18742940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;28]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b18742518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;29]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b1874b588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;30]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b1874b320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;31]" time="0.0011622905731201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b18742ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;32]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b41f4d908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;33]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187b9160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;34]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187b9518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;35]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b187a7978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;36]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b1874bc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;37]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b1874b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;38]" time="0.0005748271942138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b18755208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;39]" time="0.0007658004760742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b1874b710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;40]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b1874bf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;41]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b41f5d470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;42]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f1b18820c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;0]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b187b9438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;1]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b41f4dc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;2]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b18755048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;3]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b18755ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;4]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b18742630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;5]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b187a7908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;6]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b41fb6e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;7]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b41f5d518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;8]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b1874b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;9]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b187a0128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;10]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b18755198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;11]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b1874f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;12]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b41fa8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;13]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b41f4d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;14]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b18755080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;15]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b18755b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;16]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b18755748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;17]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b1874bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;18]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b1874b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;19]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b18742f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;20]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b187420b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;21]" time="0.0007920265197753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b18742630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;22]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b187b9d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;23]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b1874bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;24]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b41f6f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;25]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b18755dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;26]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b187558d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;27]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b41f4d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;28]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b187556d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;29]" time="0.0007920265197753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b41f5d320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;30]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f1b41f4dda0&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype0]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7f1b18755470&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype1]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7f1b41f6f470&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype2]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7f1b1874b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.la" file="src/pymortests/la.py" line="13" name="test_induced" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/la.py:13: &lt;py._xmlgen.raw object at 0x7f1b187a0128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-1-200]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b187426a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-1-300]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b1874f128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-2-200]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b1874fc88&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-2-300]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b18742ac8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-1-200]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b187426a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-1-300]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b18755be0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-2-200]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b187556d8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-2-300]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b18791ba8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-1-200]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b1874f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-1-300]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b1876f048&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-2-200]" time="0.0007593631744384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b1876f588&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-2-300]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b1874fd30&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-1-200]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b41f7d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-1-300]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b18755470&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-2-200]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b18755278&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-2-300]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b1874ba20&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-1-200]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b18742780&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-1-300]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b1876f080&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-2-200]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b1876f668&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-2-300]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f1b1874b7f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-1-200]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b1874b160&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-1-300]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b187554a8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-2-200]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b187910f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-2-300]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b1874fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-1-200]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b1876fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-1-300]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b1876f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-2-200]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b187780f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-2-300]" time="0.0007729530334472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b1876f400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-1-200]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b1876f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-1-300]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b1874fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-2-200]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b41f7d320&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-2-300]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b41f6fef0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-1-200]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b1874be48&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-1-300]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b41f6f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-2-200]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b18778630&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-2-300]" time="0.0007395744323730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f1b187b9470&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-1-200]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b3eada2b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-1-300]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b18755278&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-2-200]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b3ea68a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-2-300]" time="0.0005676746368408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b1874f358&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-1-200]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b1876fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-1-300]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b18778518&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-2-200]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b18778780&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-2-300]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b18778b00&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-1-200]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b18778c88&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-1-300]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b1876f748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-2-200]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b18778400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-2-300]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b3ea76c88&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-1-200]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b41f6fef0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-1-300]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b187b9f98&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-2-200]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b187037f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-2-300]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b3ea860b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-1-200]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b3eada2b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-1-300]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b3eada400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-2-200]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b1874f358&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-2-300]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f1b1876f978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-1-200]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b18778240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-1-300]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b187035c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-2-200]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b1870c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-2-300]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b1870c630&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-1-200]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b1876fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-1-300]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b18778550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-2-200]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b1876f860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-2-300]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b41f6f128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-1-200]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b18703c88&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-1-300]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b3ea86208&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-2-200]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b1870c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-2-300]" time="0.0008382797241210938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b1870c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-1-200]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b18703828&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-1-300]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b3eada2b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-2-200]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b3ea769e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-2-300]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f1b1874fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-1-200]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18778198&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-1-300]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b1870cd68&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-2-200]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18778da0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-2-300]" time="0.001329183578491211"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18719550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-1-200]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18b1ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-1-300]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b187b9f98&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-2-200]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b1870cd68&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-2-300]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b1870c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-1-200]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18703f60&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-1-300]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18703978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-2-200]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18778da0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-2-300]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18778898&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-1-200]" time="0.0008330345153808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18778cf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-1-300]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18703278&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-2-200]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18778d30&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-2-300]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b1870c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-1-200]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b1870c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-1-300]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b3eadad30&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-2-200]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b18755278&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-2-300]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f1b1876f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-1-200]" time="0.0005795955657958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b3ea68cf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-1-300]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b3ea29748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-2-200]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b3ea97278&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-2-300]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b1870c908&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-1-200]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b3ea860b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-1-300]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b187036a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-2-200]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b18778f60&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-2-300]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b18703278&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-1-200]" time="0.0007910728454589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b18742198&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-1-300]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b1874f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-2-200]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b18703668&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-2-300]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b3ea86ef0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-1-200]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b1870cf60&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-1-300]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b3ea369b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-2-200]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b3ea292b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-2-300]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f1b3ea68a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-1-200]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b18719198&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-1-300]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b1876fe10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-2-200]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b41fa82e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-2-300]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b1870c710&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-1-200]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b3ea867b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-1-300]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b18703c88&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-2-200]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b41f5d780&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-2-300]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b187192b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-1-200]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b18719940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-1-300]" time="0.0007953643798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b187cb588&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-2-200]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b187033c8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-2-300]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b1870c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-1-200]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b3ea86ef0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-1-300]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b3ea47940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-2-200]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b1876fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-2-300]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b187197f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-1-200]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b18719ac8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-1-300]" time="0.0007863044738769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b18719240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-2-200]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b18719c18&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-2-300]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f1b1876f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-1-200]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b3ea479e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-1-300]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b3ea97668&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-2-200]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b18703b00&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-2-300]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b187cb9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-1-200]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b18727780&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-1-300]" time="0.0007991790771484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b18727390&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-2-200]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b1870ce48&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-2-300]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b3ea36470&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-1-200]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b3ea479e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-1-300]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b3ea57cf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-2-200]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b18719400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-2-300]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b18727a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-1-200]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b187276a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-1-300]" time="0.0007832050323486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b18730240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-2-200]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b18727e10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-2-300]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f1b18719cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="21" name="test_selection_op" time="0.0006711483001708984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:21: &lt;py._xmlgen.raw object at 0x7f1b18742be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="53" name="test_lincomb_op" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:53: &lt;py._xmlgen.raw object at 0x7f1b18719240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;0]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b3ea975c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;1]" time="0.0005955696105957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b1870c748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;2]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b187300f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;3]" time="0.0007948875427246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18730898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;4]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18703748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;5]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b3ea296a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;6]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b3ea68a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;7]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18719390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;8]" time="0.0005667209625244141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18727550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;9]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b187309e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;10]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18730358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;11]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b187304e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;12]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18730ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;13]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18730358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;14]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b187274e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;15]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18719a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;16]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b187278d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;17]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b23ab5828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;18]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18703748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;19]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b1873a400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;20]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b3ea975c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;21]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b3ea36da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;22]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18719c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;23]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18727588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;24]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18730cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;25]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18730198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;26]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b1873a048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;27]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b1873a940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;28]" time="0.0013420581817626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b23ab5cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;29]" time="0.0005669593811035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b23ab58d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;30]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18730400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;31]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18730278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;32]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b187196a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;33]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18727588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;34]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18719fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;35]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b1874f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;36]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b1874fb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;37]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b187279e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;38]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18727f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;39]" time="0.0005660057067871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b3ea57fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;40]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f1b18730fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b23ac68d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b23ab5390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1873a320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.0008006095886230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1873a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1870cac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b18730b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b23ac64e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b18730588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b187276a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1873a630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1873aac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b186c9080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1873ac50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1873af28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b18727278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1873a630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b187303c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b23ad4f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b187306a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b186c9588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;20]" time="0.0008332729339599609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b23ad4da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;21]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b18730d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;22]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1870ce48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;23]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b18727278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;24]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1873a780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;25]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1873ae48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;26]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b186c9128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;27]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b186c9ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;28]" time="0.0008649826049804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1873ac50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;29]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b1873a128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;30]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b187276a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;31]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b187307f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;32]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b18727748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;33]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b186c94a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;34]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b186c9780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;35]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b186d63c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;36]" time="0.0008182525634765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b186d6908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;37]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b186c91d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;38]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b23ae9da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;39]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f1b18730d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;0]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b187274a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;1]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b1873a208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;2]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d6550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;3]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d62b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;4]" time="0.0007469654083251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d6780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;5]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d6a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;6]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d6f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;7]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d6390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;8]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b187197f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;9]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b23ae9710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;10]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186c92e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;11]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b23ae93c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;12]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186df4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;13]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186c9908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;14]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b23ae9ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;15]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b18727da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;16]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b1873a128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;17]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d6d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;18]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d6a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;19]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186df0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;20]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186df9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;21]" time="0.0007877349853515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d62b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;22]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b23a8c438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;23]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b23a7aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;24]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b23ae9860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;25]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b18719898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;26]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186dfbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;27]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186df0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;28]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186df9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;29]" time="0.0008254051208496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186df400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;30]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186dfcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;31]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186c9668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;32]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b18719898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;33]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b23a7a470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;34]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b23a8c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;35]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d6828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;36]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186e77f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;37]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d6828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;38]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186d6390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;39]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b23ae9860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;40]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f1b186c9550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;0]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186dfc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;1]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186df0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;2]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186e7668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;3]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186f30f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;4]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b187308d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;5]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b23ae9cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;6]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b23a9b588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;7]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186dfdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;8]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186e7e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;9]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186e7518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;10]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186e7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;11]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186d6f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;12]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186c9668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;13]" time="0.0008516311645507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186d6160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;14]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186e7748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;15]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186e7668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;16]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186dfd68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;17]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b23a8c780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;18]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186dff28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;19]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b18730550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;20]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186c9ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;21]" time="0.0007970333099365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186c97f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;22]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b23aafc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;23]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b18719898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;24]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186dfdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;25]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186df128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;26]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186e7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;27]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186d6da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;28]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186f3240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;29]" time="0.0007822513580322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186f3978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;30]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186e7f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;31]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186e77f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;32]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186df898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;33]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b18719710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;34]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b23a3f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;35]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186c9e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;36]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186f31d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;37]" time="0.0007736682891845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186f32b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;38]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186f3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;39]" time="0.0005764961242675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b186c9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;40]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f1b23a3fe10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;0]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b23a8c438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;1]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186df828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;2]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186e78d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;3]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18778a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;4]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18684518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;5]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186e7208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;6]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186df630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;7]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18719898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;8]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b23aafac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;9]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186c9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;10]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186f3b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;11]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18684208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;12]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18684a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;13]" time="0.0007729530334472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186f38d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;14]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186c9f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;15]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186f3ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;16]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b23a4efd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;17]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186e75c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;18]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18684c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;19]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18684208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;20]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18684a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;21]" time="0.0007386207580566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18778a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;22]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186844e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;23]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186d64e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;24]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186847f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;25]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b23a3f828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;26]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186df908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;27]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b23aaf6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;28]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b1868d860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;29]" time="0.0009136199951171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b1868d470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;30]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b23a60e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;31]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b23a8c198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;32]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186e7588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;33]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18684908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;34]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18684d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;35]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b1868db70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;36]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b1868d080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;37]" time="0.0007569789886474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18697320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;38]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b1868def0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;39]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b186d6828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;40]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f1b18684cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;0]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186df6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;1]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b23a60fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;2]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18730198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;3]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18697198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;4]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18697940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;5]" time="0.0005440711975097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b23a60828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;6]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186df7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;7]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18684400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;8]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b23a6f860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;9]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b1868d668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;10]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18697a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;11]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186973c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;12]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18697668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;13]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18697048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;14]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18697f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;15]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b1868dc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;16]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186e7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;17]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18684f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;18]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b23a60b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;19]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b23a04438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;20]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186a23c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;21]" time="0.0011098384857177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b23a04780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;22]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186e7160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;23]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18697860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;24]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18697550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;25]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186845f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;26]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b1868de48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;27]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18684fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;28]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186f3f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;29]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186f32b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;30]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b1868d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;31]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b1868d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;32]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b187783c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;33]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18697cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;34]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18697748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;35]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b23a04f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;36]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186d61d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;37]" time="0.0007958412170410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186a2240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;38]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b23ad4da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;39]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b18697240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;40]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f1b186e7a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;0]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b18684e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;1]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b1868d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;2]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186f3c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;3]" time="0.0005426406860351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186a23c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;4]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186a2ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;5]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b1868da58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;6]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b18684eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;7]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b23a142e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;8]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b18697898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;9]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186e72b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;10]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186a2a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;11]" time="0.0006096363067626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186a23c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;12]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186a2ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;13]" time="0.0007748603820800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186a22b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;14]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186a2668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;15]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186e7160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;16]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186972e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;17]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b18697860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;18]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b1868de48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;19]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b23a60198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;20]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186af550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;21]" time="0.0009284019470214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b23a238d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;22]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b1868d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;23]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b23a23c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;24]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186e7550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;25]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b239b7240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;26]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186a2898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;27]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186af3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;28]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186afe10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;29]" time="0.0007812976837158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186b8390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;30]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186aff60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;31]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186a2898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;32]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b239b7b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;33]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186976a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;34]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b23a14ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;35]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b1868de48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;36]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186b8278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;37]" time="0.0007891654968261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186b88d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;38]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b23a14978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;39]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b186972e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;40]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f1b239b74e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;0]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186a2cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;1]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186af470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;2]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186b8a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;3]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186b8080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;4]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186b8518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;5]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186b8b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;6]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186b8128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;7]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186af470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;8]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186a2828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;9]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b239b7e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;10]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186a2198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;11]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b1868d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;12]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b18642438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;13]" time="0.0007724761962890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b1868d860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;14]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b239b72e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;15]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186a23c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;16]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186afa58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;17]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186b84e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;18]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186b8f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;19]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b18642438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;20]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b18642978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;21]" time="0.0008435249328613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b239db630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;22]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186b86d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;23]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186afc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;24]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186a2898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;25]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186afdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;26]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b18642940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;27]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186420b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;28]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b1864d278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;29]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b1868dc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;30]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b18642e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;31]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b239b7e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;32]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186afdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;33]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b186b87b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;34]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b239dbf60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;35]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b1864d080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;36]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b1864db38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;37]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b23a4eb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;38]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b1864db38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;39]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b1864d320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;40]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f1b239db8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;0]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b18642518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;1]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186422b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;2]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186425c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;3]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186b8898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;4]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186aff28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;5]" time="0.0008130073547363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186b8898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;6]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1868d278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;7]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b18642e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;8]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186425c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;9]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b18642b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;10]" time="0.0005807876586914062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1864da20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;11]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1864dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;12]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186af898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;13]" time="0.0007479190826416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186af9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;14]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1864dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;15]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1864d438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;16]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b239dbb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;17]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186427b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;18]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b2397bc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;19]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186b8ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;20]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b2397b780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;21]" time="0.0009412765502929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1865a400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;22]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186b8c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;23]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b2397b630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;24]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b18642d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;25]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b239ebba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;26]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1864dc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;27]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186af7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;28]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1865a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;29]" time="0.0008351802825927734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1865a940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;30]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1864dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;31]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b239eb6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;32]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b18642e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;33]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b2398d588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;34]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186a2278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;35]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1865a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;36]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1865a0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;37]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1865a630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;38]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1865ab70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;39]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b1865ae10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;40]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f1b186b8240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;0]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b2398dac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;1]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18642518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;2]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b1864dc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;3]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b239dbcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;4]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b186694a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;5]" time="0.0007860660552978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b239eb8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;6]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18642cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;7]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b2397b978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;8]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18642e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;9]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b1865a550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;10]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b1865a860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;11]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b186691d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;12]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b186699e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;13]" time="0.0007793903350830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b1865a9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;14]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b239b0438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;15]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b1865ae10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;16]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b2397bc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;17]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b1864d668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;18]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18669a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;19]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18669630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;20]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b186742e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;21]" time="0.0010573863983154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18674828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;22]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18669780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;23]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b1864d668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;24]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b2398d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;25]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b186b8ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;26]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b1865a320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;27]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b186744e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;28]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18674198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;29]" time="0.0007524490356445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b186745f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;30]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b1865a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;31]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b239b06d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;32]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18642c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;33]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b186695f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;34]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18669198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;35]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18674be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;36]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18674978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;37]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b185fe3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;38]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18674f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;39]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b18669588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;40]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f1b2393f390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;0]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18642cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;1]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b1864d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;2]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b239b0828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;3]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b185fe0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;4]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b185fe8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;5]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b239b0978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;6]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18642b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;7]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b2393f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;8]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b186697b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;9]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18674908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;10]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b185fe828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;11]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b185fe0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;12]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b185fe8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;13]" time="0.00115966796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b185fe4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;14]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b185fef60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;15]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b2397bc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;16]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b239538d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;17]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b186740b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;18]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18674e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;19]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18669fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;20]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b239dbb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;21]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b3ea68a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;22]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18669208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;23]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b186742e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;24]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b239b0978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;25]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b239536d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;26]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b1864d668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;27]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b185fe6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;28]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b185fea58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;29]" time="0.0008273124694824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b186b87b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;30]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b186af748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;31]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b185fe0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;32]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b23a04978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;33]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b239b0240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;34]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18674b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;35]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18669940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;36]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18674710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;37]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18607550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;38]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18669828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;39]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b18674dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;40]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f1b2398dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;0]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18674860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;1]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b185fecc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;2]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b186af908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;3]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18607240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;4]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18607a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;5]" time="0.0008175373077392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b186b8b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;6]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b185fed30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;7]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b23a04f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;8]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18674ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;9]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b239b0978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;10]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18607c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;11]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18607240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;12]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18607a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;13]" time="0.0007915496826171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18607748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;14]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18607da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;15]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18669d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;16]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18607940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;17]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18669be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;18]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b186740f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;19]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b23953828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;20]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18616898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;21]" time="0.0008268356323242188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b186164a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;22]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b23953cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;23]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b186746d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;24]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18669be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;25]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b239b0438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;26]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18607e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;27]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18616be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;28]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18616518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;29]" time="0.0008540153503417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b1861f358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;30]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18616f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;31]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18607e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;32]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b23904390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;33]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b239b0438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;34]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18674828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;35]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b239618d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;36]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b1861f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;37]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b1861f978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;38]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b18674b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;39]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b239b0978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;40]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f1b23904438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;0]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18607438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;1]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18616ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;2]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b1861fb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;3]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b1861f400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;4]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b1861f630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;5]" time="0.0007851123809814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b1861f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;6]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b1861f470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;7]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18616128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;8]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18607438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;9]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b239046d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;10]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b23961ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;11]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18669400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;12]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18629400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;13]" time="0.0007555484771728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b185fe6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;14]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b23971e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;15]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b23904b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;16]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18616710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;17]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b2392a588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;18]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b1861f748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;19]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18629240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;20]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18629cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;21]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b186298d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;22]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18629e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;23]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b1861fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;24]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18616b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;25]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18607470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;26]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b23904588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;27]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b23913fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;28]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b186335c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;29]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b239132e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;30]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18629080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;31]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18629cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;32]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18629b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;33]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b2392a198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;34]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b1861fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;35]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b23904978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;36]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18616eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;37]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18616400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;38]" time="0.0007987022399902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b18616518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;39]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b23904438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;40]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f1b1861f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;0]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b2392aac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;1]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b186297b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;2]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18629b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;3]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b238b96d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;4]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b186b8390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;5]" time="0.0007433891296386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b186b8390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;6]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18669e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;7]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b186295f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;8]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b23961390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;9]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b1861f470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;10]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b23904390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;11]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b186165c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;12]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18633438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;13]" time="0.0007872581481933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b186336d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;14]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b1861f358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;15]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b2392a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;16]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18629240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;17]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18629978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;18]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b186297f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;19]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18633b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;20]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b186332b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;21]" time="0.0007805824279785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b185c53c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;22]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18633f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;23]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b23971ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;24]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b23961438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;25]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18629ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;26]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b1861f048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;27]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18629588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;28]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b185c5240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;29]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b185c59e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;30]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b1861f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;31]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18629e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;32]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b238dc8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;33]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b23971a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;34]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18633c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;35]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b185c5be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;36]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b185c54a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;37]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b185c56a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;38]" time="0.0007803440093994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b185c5550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;39]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b185c5320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;40]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f1b18633c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;0]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b238dcfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;1]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b23961390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;2]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b18629f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;3]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b18607898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;4]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185cc470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;5]" time="0.0008144378662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b18607898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;6]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b18629f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;7]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b238dc198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;8]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b238cac18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;9]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b18633470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;10]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185c5860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;11]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185cc2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;12]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185ccd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;13]" time="0.0007734298706054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185d72b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;14]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185cce80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;15]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185c5908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;16]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b18633d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;17]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185c5668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;18]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b238dc438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;19]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b18629f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;20]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185d7160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;21]" time="0.0007512569427490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185d77f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;22]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b18629f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;23]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b2387f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;24]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b18633ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;25]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185c56d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;26]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185cc278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;27]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185d78d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;28]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185d7208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;29]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185d74a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;30]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185cc358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;31]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185c5780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;32]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185cce48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;33]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b2387f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;34]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b186297b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;35]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185d7a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;36]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185d76d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;37]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185e2358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;38]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b185d7898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;39]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b186298d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;40]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f1b2387ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;0]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b18633080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;1]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b2388e780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;2]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185ccdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;3]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185e20b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;4]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185e2898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;5]" time="0.001123189926147461"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b238dce10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;6]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b2387ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;7]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185d75c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;8]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185d7710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;9]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185ccb00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;10]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185cc748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;11]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185c5438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;12]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b18669400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;13]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b18669dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;14]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185c5ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;15]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185cc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;16]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b18629908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;17]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185d7438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;18]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b238a26d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;19]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b238dcd68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;20]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185e28d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;21]" time="0.000782012939453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185e2550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;22]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b238dce10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;23]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185d7b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;24]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b238a2588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;25]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185ccb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;26]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185c57b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;27]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185e2320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;28]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185e21d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;29]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185e2748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;30]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185e2ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;31]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b18633d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;32]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185e2128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;33]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185ccf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;34]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185d7cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;35]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b238a2cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;36]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f1b185d7d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;0]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185ef4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;1]" time="0.0007796287536621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b2387feb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;2]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b238b22e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;3]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b238a2c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;4]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185d75c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;5]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185e2fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;6]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185e2c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;7]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185ef208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;8]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185efa20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;9]" time="0.0007462501525878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185e24a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;10]" time="0.0005729198455810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b186332b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;11]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185cc780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;12]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185d7710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;13]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b238b2a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;14]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185efa58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;15]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185ef668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;16]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185fc320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;17]" time="0.0007803440093994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185fc860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;18]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185ef7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;19]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b238b2240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;20]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b23844f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;21]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185cc748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;22]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185e2cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;23]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185fc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;24]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185fc208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;25]" time="0.0011548995971679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185fc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;26]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185c5c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;27]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b23844630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;28]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185d7588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;29]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185ef198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;30]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b238a2b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;31]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185fcc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;32]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185fce48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;33]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b18584400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;34]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185fc048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;35]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b238a2630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;36]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f1b185ef1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;0]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185d7588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;1]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b186330f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;2]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185e2dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;3]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b18584128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;4]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b18584908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;5]" time="0.0007472038269042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185c5710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;6]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b23d0f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;7]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185effd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;8]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b238a2b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;9]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185fcac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;10]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185841d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;11]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b18584400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;12]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185848d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;13]" time="0.0007393360137939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b18584518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;14]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b18584f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;15]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185fc4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;16]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185fc908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;17]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185ef1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;18]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b23863f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;19]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185c56d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;20]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b1858d748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;21]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b23ac6da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;22]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b238b2588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;23]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185ef8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;24]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185fcc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;25]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b18584b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;26]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b18584550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;27]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b1858d588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;28]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b18598048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;29]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b2385cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;30]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b23874908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;31]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185841d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;32]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b1858d4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;33]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b1858d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;34]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b1858dda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;35]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185fc208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;36]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185fc898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;37]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185ef438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;38]" time="0.0007791519165039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b185fca90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;39]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b1858d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;40]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f1b1858d748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;0]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b18584ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;1]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185844a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;2]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b23874470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;3]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185efcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;4]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b238dcfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;5]" time="0.0007603168487548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b23913390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;6]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185efe10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;7]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b23874c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;8]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b18584c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;9]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b23874ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;10]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b1858dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;11]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185fcda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;12]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b1858d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;13]" time="0.0007691383361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185988d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;14]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b1858d470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;15]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b1858d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;16]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b18584ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;17]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b238747b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;18]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185efc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;19]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b23809518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;20]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b18598080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;21]" time="0.000797271728515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b18598e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;22]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b2385cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;23]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b23874e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;24]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b238a2ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;25]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b1858d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;26]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b18616320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;27]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b18598b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;28]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185986d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;29]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185a9470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;30]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185984e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;31]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b18616dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;32]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b1858d470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;33]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b18584c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;34]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185ef710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;35]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b23809cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;36]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185a91d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;37]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b185a9978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;38]" time="0.0007843971252441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b23809e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;39]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b18584278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;40]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f1b1858dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;0]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b238267b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;1]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b18598eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;2]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185a9b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;3]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185a90b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;4]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185a99b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;5]" time="0.0007619857788085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185a95f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;6]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185a93c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;7]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b18598f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;8]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b18598d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;9]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b23863a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;10]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b23826d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;11]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b23809da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;12]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185b57b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;13]" time="0.0007517337799072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185b53c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;14]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b1858da90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;15]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b238265c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;16]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b18598978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;17]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185a9438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;18]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185a9208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;19]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185b5a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;20]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185b56d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;21]" time="0.0007579326629638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b1853e278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;22]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185b5e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;23]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185a9d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;24]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b237c93c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;25]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b18598710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;26]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b23826908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;27]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185844a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;28]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b1853e0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;29]" time="0.00039839744567871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b1853e898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;30]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b1858d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;31]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b18598978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;32]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b237c9710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;33]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185a9828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;34]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185b5898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;35]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b1853e908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;36]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b1853e128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;37]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b1853e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;38]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185b59e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;39]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b185a9358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;40]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f1b237c9710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;0]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18598eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;1]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b1858da90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;2]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b1853eb00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;3]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b1853e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;4]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18548320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;5]" time="0.0011525154113769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b237d8da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;6]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b1853e550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;7]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b1853e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;8]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b237b8ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;9]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b185a9d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;10]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b185b56d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;11]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b185b5240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;12]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18598cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;13]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18598a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;14]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b185b5518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;15]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b23809da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;16]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b237b89b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;17]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b1853ef98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;18]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b1853e0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;19]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b1853eda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;20]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b185fc828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;21]" time="0.0007865428924560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18548198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;22]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b185e2320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;23]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b237ec3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;24]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b1853ec88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;25]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b185a9be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;26]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b23809ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;27]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b185b5f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;28]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18548358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;29]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18548a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;30]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b185b5860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;31]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b185a96a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;32]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b1853e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;33]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b237ec278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;34]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b1853e710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;35]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18548ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;36]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18548320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;37]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18548a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;38]" time="0.0008015632629394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18548438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;39]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b18548d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;40]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f1b237c9c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;0]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b1853e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;1]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b237b8908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;2]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b2377b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;3]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185b5c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;4]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185554a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;5]" time="0.0007369518280029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185b5278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;6]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185b5e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;7]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b1853efd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;8]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b237ec320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;9]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18548a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;10]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18548320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;11]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185552e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;12]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18555d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;13]" time="0.0007193088531494141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185622e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;14]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18555eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;15]" time="0.0004017353057861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18548358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;16]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185550b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;17]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b1853e550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;18]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185a9e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;19]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b2378f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;20]" time="0.0003993511199951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185621d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;21]" time="0.0007388591766357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18562828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;22]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b2378fda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;23]" time="0.00039649009704589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185b5e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;24]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b1853e898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;25]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18548a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;26]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185552b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;27]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18562940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;28]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18562048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;29]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18562550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;30]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18562a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;31]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18562f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;32]" time="0.0004012584686279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b185550b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;33]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18548240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;34]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b237ecc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;35]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b2379e668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;36]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b2378f668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;37]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b1856d390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;38]" time="0.0007338523864746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b2378fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;39]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b2379e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;40]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f1b18548da0&gt;</skipped></testcase><testcase classname="src.pymortests.parameters" file="src/pymortests/parameters.py" line="18" name="test_uniform" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/parameters.py:18: &lt;py._xmlgen.raw object at 0x7f1b185554a8&gt;</skipped></testcase><testcase classname="src.pymortests.parameters" file="src/pymortests/parameters.py" line="25" name="test_randomly" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/parameters.py:25: &lt;py._xmlgen.raw object at 0x7f1b185623c8&gt;</skipped></testcase><testcase classname="src.pymortests.playground" file="src/pymortests/playground.py" line="12" name="test_eval" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/playground.py:12: &lt;py._xmlgen.raw object at 0x7f1b18562e80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-1-10]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f1b1856d080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-1-100]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f1b1856d978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-2-10]" time="0.0007810592651367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f1b18562710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-2-100]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f1b185626a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-1-10]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f1b185555f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-1-100]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f1b1853ef28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-2-10]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f1b2379eba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-2-100]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f1b1856d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-1-10]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f1b1856d550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-1-100]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f1b18576278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-2-10]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f1b2378fe48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-2-100]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f1b1856df28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-1-10]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f1b2379e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-1-100]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f1b1856d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-2-10]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f1b18555eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-2-100]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f1b18562550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-1-1-1000]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f1b18576080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-1-2-1000]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f1b18576b38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-2-1-1000]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f1b38fca860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-2-2-1000]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f1b2375bf28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-1-1-1000]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f1b18576908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-1-2-1000]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f1b18576160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-2-1-1000]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f1b1856d940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-2-2-1000]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f1b1856d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-1-1-1000]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f1b1856dda0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-1-2-1000]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f1b18562ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-2-1-1000]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f1b18555a90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-2-2-1000]" time="0.0007824897766113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f1b18562f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-1-1-1000]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f1b23765b38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-1-2-1000]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f1b1856def0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-2-1-1000]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f1b1856de48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-2-2-1000]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f1b18576470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-1-1-1000]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f1b23750d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-1-2-1000]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f1b237c9b00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-2-1-1000]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f1b185557f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-2-2-1000]" time="0.0007469654083251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f1b18555ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-1-1-1000]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f1b23844eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-1-2-1000]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f1b18576b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-2-1-1000]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f1b18576358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-2-2-1000]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f1b1856d198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-1-1-1000]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f1b236c36d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-1-2-1000]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f1b18562208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-2-1-1000]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f1b238026a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-2-2-1000]" time="0.0007770061492919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f1b18503400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-1-1-1000]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f1b2378f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-1-2-1000]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f1b236c36d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-2-1-1000]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f1b1856d550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-2-2-1000]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f1b2375ba20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-1-10]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b18576a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-1-100]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b18555710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-2-10]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b185032e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-2-100]" time="0.0007901191711425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b18503940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-1-10]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b18576550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-1-100]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b18555ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-2-10]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b1856dc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-2-100]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b236c3be0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-1-10]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b237b2da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-1-100]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b185039b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-2-10]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b185030f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-2-100]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b18503630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-1-10]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b18503b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-1-100]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b18503e48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-2-10]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b2378fb00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-2-100]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f1b237b2710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-1-10]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b1856df60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-1-100]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b185767f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-2-10]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b18555f60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-2-100]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b185114a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-1-10]" time="0.0007486343383789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b18555f60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-1-100]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b1856dac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-2-10]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b237b2dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-2-100]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b18548160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-1-10]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b185039e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-1-100]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b18503d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-2-10]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b185111d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-2-100]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b185119e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-1-10]" time="0.0007665157318115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b238021d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-1-100]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b18503eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-2-10]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b236f2c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-2-100]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f1b1856dc88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-1-10]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b23721fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-1-100]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b18511a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-2-10]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b18511630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-2-100]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b1851e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-1-10]" time="0.0007576942443847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b1851e828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-1-100]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b18511198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-2-10]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b23721470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-2-100]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b237b2710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-1-10]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b23601198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-1-100]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b18503a90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-2-10]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b1851e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-2-100]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b1851e198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-1-10]" time="0.0007770061492919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b1851e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-1-100]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b185030b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-2-10]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b1856ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-2-100]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f1b23721898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-1-10]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b185115f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-1-100]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b185117f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-2-10]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b1851ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-2-100]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b1851e978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-1-10]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b185253c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-1-100]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b1851ef98&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-2-10]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b18511630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-2-100]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b2370df60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-1-10]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b2371d080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-1-100]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b1856dc88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-2-10]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b185030f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-2-100]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b185250b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-1-10]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b185258d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-1-100]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b18503eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-2-10]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b185767f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-2-100]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f1b2370d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_lgmres]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7f1b18511198&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_least_squares_lsmr]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7f1b1851e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_least_squares_lsqr]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7f1b18525ac8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="55" name="test_numpy_dense_solvers" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:55: &lt;py._xmlgen.raw object at 0x7f1b18525518&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_least_squares_lsqr]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b18525550&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_spsolve]" time="0.0011353492736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b18525470&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_lgmres]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b18525f98&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_least_squares_lsmr]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b185250b8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_bicgstab_spilu]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b236692b0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_least_squares_lsqr]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b1851e780&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_rs]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b1851ea90&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_solve]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b18511908&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_lgmres]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b1851e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_least_squares_lsmr]" time="0.0004031658172607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b2379e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_sa]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b18511c50&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_bicgstab]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f1b1851ea90&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-1-100]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b2370d550&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-1-1000]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b1856da20&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-10-100]" time="0.0005662441253662109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b2371d780&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-10-1000]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b185257b8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-20-100]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b18548160&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-20-1000]" time="0.0007395744323730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b18535080&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-1-100]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b18555860&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-1-1000]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b185255f8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-10-100]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b185fc828&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-10-1000]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b185250b8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-20-100]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b1851e780&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-20-1000]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f1b18511860&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-1-100]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b2379eb00&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-1-1000]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b185355c0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-10-100]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b18511d68&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-10-1000]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b1851eda0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-20-100]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b22658978&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-20-1000]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b23615c88&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-1-100]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b185252e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-1-1000]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b2371de80&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-10-100]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b185352b0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-10-1000]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b18535ac8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-20-100]" time="0.0007367134094238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b18562be0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-20-1000]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f1b18525d68&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-1-100]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b185259e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-1-1000]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b1851eac8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-10-100]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b2370d550&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-10-1000]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b18535cf8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-20-100]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b185352b0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-20-1000]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b1853c048&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-1-100]" time="0.0007402896881103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b185357b8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-1-1000]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b18535e80&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-10-100]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b18535e10&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-10-1000]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b2367a470&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-20-100]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b185769b0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-20-1000]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f1b2371df98&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-1-100]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b1853c128&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-1-1000]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b1853c908&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-10-100]" time="0.0007376670837402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b1853c518&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-10-1000]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b23615358&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-20-100]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b1851e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-20-1000]" time="0.0004029273986816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b2367a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-1-100]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b18511d68&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-1-1000]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b185350f0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-10-100]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b1853cc88&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-10-1000]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b1853c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-20-100]" time="0.0007958412170410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b184c83c8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-20-1000]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f1b1853cf98&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="34" name="test_to_matrix_NumpyMatrixOperator" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:34: &lt;py._xmlgen.raw object at 0x7f1b185353c8&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="45" name="test_to_matrix_BlockOperator" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:45: &lt;py._xmlgen.raw object at 0x7f1b18511c18&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="68" name="test_to_matrix_BlockDiagonalOperator" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:68: &lt;py._xmlgen.raw object at 0x7f1b2367a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="86" name="test_to_matrix_AdjointOperator" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:86: &lt;py._xmlgen.raw object at 0x7f1b2370d978&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="127" name="test_to_matrix_ComponentProjection" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:127: &lt;py._xmlgen.raw object at 0x7f1b185255f8&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="138" name="test_to_matrix_Concatenation" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:138: &lt;py._xmlgen.raw object at 0x7f1b184c8278&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="165" name="test_to_matrix_IdentityOperator" time="0.0007622241973876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:165: &lt;py._xmlgen.raw object at 0x7f1b184c8a20&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="173" name="test_to_matrix_LincombOperator" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:173: &lt;py._xmlgen.raw object at 0x7f1b2265ccf8&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="202" name="test_to_matrix_VectorArrayOperator" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:202: &lt;py._xmlgen.raw object at 0x7f1b2367a710&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="214" name="test_to_matrix_ZeroOperator" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:214: &lt;py._xmlgen.raw object at 0x7f1b18535eb8&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="27" name="test_polynomials" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:27: &lt;py._xmlgen.raw object at 0x7f1b23629dd8&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="38" name="test_other_functions" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:38: &lt;py._xmlgen.raw object at 0x7f1b1853c588&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="46" name="test_weights" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:46: &lt;py._xmlgen.raw object at 0x7f1b184c8710&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="51" name="test_points" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:51: &lt;py._xmlgen.raw object at 0x7f1b184c8198&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestCmp" file="src/pymortests/tools.py" line="61" name="test_props" time="0.0007460117340087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:61: &lt;py._xmlgen.raw object at 0x7f1b184cd0f0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;0]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184c8cf8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;1]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184c8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;2]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b1853cb38&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;3]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b18535160&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;4]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b18511cc0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;5]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b18535860&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;6]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184cd1d0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;7]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184cd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;8]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b2370d978&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;9]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b23721dd8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;10]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b185355c0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;11]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b1853cb70&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;12]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184c8828&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;13]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184c8f28&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;14]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184cd3c8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;15]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184cd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;16]" time="0.0007350444793701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184c8710&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;17]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b1853cf28&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;18]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184c8e80&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;19]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b2367a710&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;20]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b235f75f8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;21]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184cddd8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;22]" time="0.00039958953857421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184cd3c8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;23]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f1b184db160&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="102" name="testTimingContext" time="0.0011010169982910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:102: &lt;py._xmlgen.raw object at 0x7f1b2265ccf8&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="112" name="testTimingDecorator" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:112: &lt;py._xmlgen.raw object at 0x7f1b235f75f8&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="115" name="testTiming" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:115: &lt;py._xmlgen.raw object at 0x7f1b22682630&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="123" name="testDeprecated" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:123: &lt;py._xmlgen.raw object at 0x7f1b184cd358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;0]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184cd0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;1]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184c8f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;2]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b1853c860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;3]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b18555828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;4]" time="0.0008177757263183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b18535f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;5]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b1853c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;6]" time="0.0004012584686279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184c8860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;7]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184c8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;8]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184cdd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;9]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b22682208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;10]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b236104e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;11]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b18535da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;12]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b18503358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;13]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b18535d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;14]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b23610160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;15]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b236087b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;16]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184cd0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;17]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184c8160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;18]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b2265deb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;19]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b1853c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;20]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184db780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;21]" time="0.0007646083831787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b1853ce48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;22]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184c8a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;23]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184cd0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;24]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b23629b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;25]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b23610860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;26]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b235f7278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;0]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184db780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;1]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184dbcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;2]" time="0.0007925033569335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b18503908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;3]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184dbe10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;4]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b226816d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;5]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b23610a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;6]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184cdeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;7]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b18555828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;8]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b1853c940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;9]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184e75c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;10]" time="0.0007786750793457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184e71d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;11]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b18555860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;12]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b225eb400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;13]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184cd358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;14]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b22681978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;15]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184dba58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;16]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184e77f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;17]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184e74a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;18]" time="0.0007898807525634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184f1080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;19]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184e7c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;20]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184e7d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;21]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184e75c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;22]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184dbb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;23]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184cdf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;24]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b226542e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;25]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184f1198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;26]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184f16a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;0]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b22654a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;1]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b22654ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;2]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b22681c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;3]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184dbda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;4]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184e72e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;5]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184e7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;6]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184f14a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;7]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184f17f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;8]" time="0.00075531005859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184e76a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;9]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184db2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;10]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b22681240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;11]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184cd6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;12]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b23629c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;13]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184f1c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;14]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184f15f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;15]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184fb128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;16]" time="0.0008156299591064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184f1668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;17]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184f1ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;18]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b22654f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;19]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184f1be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;20]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184db898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;21]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b1853efd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;22]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184fb2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;23]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184fb9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;24]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b184e7da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;25]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b22620630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;26]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f1b22681c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;0]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b22654940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;1]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184f1c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;2]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184f12e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;3]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fb908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;4]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184872e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;5]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fbeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;6]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b2262a0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;7]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184f15f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;8]" time="0.00040149688720703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b22654e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;9]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184f1208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;10]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b22620e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;11]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18487048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;12]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18487ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;13]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18495128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;14]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b22681f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;15]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18487b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;16]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184873c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;17]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fb908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;18]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fbc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;19]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fb0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;20]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184f1978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;21]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184f13c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;22]" time="0.0007584095001220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184f1198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;23]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b22620ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;24]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fb3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;25]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fbac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;26]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18487080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;0]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18487978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;1]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18487470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;2]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184dbf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;3]" time="0.00072479248046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184dbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;4]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184879e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;5]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184879b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;6]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fbdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;7]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fb550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;8]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fb630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;9]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fbe10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;10]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b22620630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;11]" time="0.0007550716400146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18495550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;12]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184f1e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;13]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b225f19b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;14]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fb550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;15]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b225e7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;16]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18487c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;17]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b225e7ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;18]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18495438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;19]" time="0.0007693767547607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18495a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;20]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18487940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;21]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b225e7908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;22]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fb550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;23]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b225f1ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;24]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b1853c390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;25]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18495748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;26]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18495240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;0]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184a20f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;1]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18495cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;2]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18495908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;3]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b226206a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;4]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fb748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;5]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b225e75c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;6]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b226029b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;7]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184872e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;8]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184a25f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;9]" time="0.0007576942443847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b226023c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;10]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b225e7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;11]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184fbe10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;12]" time="0.00040459632873535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184f1c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;13]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184959e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;14]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18495d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;15]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184a20f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;16]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184a2b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;17]" time="0.0007297992706298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b22620a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;18]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18495e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;19]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184e7160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;20]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b225f19b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;21]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b18487470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;22]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184a21d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;23]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184a26d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;24]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184ae438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;25]" time="0.0007255077362060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184ae080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;26]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f1b184a29b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;0]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b18487470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;1]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184fb710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;2]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b22612710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;3]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b18495198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;4]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;5]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;6]" time="0.0007843971252441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;7]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184aeac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;8]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;9]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b18495198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;10]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b22612278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;11]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184fb400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;12]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b18487470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;13]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184a24e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;14]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184b6518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;15]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b226023c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;16]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184fbcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;17]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b2259d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;18]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184959e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;19]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;20]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184aebe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;21]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184b62e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;22]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184b6a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;23]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184aef28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;24]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184959e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;25]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b2259d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;26]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b2259de80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;0]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184a2fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;1]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184b6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;2]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184b6668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;3]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184b6748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;4]" time="0.0010936260223388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184b6550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;5]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184b67f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;6]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b225e7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;7]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b2259ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;8]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;9]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;10]" time="0.000400543212890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184a2c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;11]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b22602da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;12]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b22602e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;13]" time="0.0004017353057861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184a2860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;14]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184aef98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;15]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184a2a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;16]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;17]" time="0.0004057884216308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b2259dd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;18]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184b62b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;19]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184e7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;20]" time="0.0007765293121337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1843f128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;21]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184e79b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;22]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184b68d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;23]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b225ca6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;24]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b2259dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;25]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;26]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184a22b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;0]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184aea90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;1]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1843f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;2]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184a2e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;3]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;4]" time="0.0004029273986816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b2259dc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;5]" time="0.0004017353057861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b225ca940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;6]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184b6390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;7]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184f1748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;8]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1843f438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;9]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1843fba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;10]" time="0.0007517337799072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184db6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;11]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b225ca748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;12]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b225579e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;13]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;14]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b226123c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;15]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1843fda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;16]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1843f438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;17]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1844c128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;18]" time="0.0007269382476806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1843f780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;19]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1843ff98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;20]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b22612320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;21]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b184ae198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;22]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b225574a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;23]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b22557e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;24]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1844c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;25]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1844c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;26]" time="0.0007431507110595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f1b1844c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;0]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b225cafd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;1]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b22557208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;2]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b2259d400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;3]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184aea20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;4]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1843f940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;5]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1844cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;6]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1844c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;7]" time="0.0007622241973876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184594a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;8]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1844c630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;9]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1843fb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;10]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184a2dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;11]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184ae198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;12]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b22557550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;13]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184b6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;14]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18459358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;15]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18459400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;16]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b2259d208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;17]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b22568748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;18]" time="0.00040912628173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184a2518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;19]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1843ff98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;20]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1844c128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;21]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18459b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;22]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184595f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;23]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184597f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;24]" time="0.0007541179656982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18459208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;25]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184598d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;26]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1844c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;0]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b2257ab70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;1]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b225684a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;2]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b22557208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;3]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b225cafd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;4]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18462550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;5]" time="0.0007581710815429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b2259d208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;6]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b225906d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;7]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184aea20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;8]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1843f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;9]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1844c630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;10]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18459400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;11]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184623c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;12]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18462e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;13]" time="0.0004019737243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18462a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;14]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18462f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;15]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184599b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;16]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b22520630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;17]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1843feb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;18]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b22557748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;19]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184b6e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;20]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1846c710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;21]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b225904e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;22]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b225572b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;23]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b225200f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;24]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18462cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;25]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18462198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;26]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18459400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;0]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184b6828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;1]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1844cf28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;2]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184f1898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;3]" time="0.0007719993591308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1844c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;4]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18459470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;5]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184599e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;6]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18462630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;7]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18462860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;8]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b22520ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;9]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b22590e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;10]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184aea20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;11]" time="0.0007753372192382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1843f128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;12]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18495e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;13]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b22520d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;14]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184621d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;15]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b184590f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;16]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b2252e438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;17]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1844c320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;18]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1846c048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;19]" time="0.0007545948028564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1846c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;20]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1846c208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;21]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1844c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;22]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18459be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;23]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18462908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;24]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b18462d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;25]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b22557d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;26]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f1b1843f978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;0]" time="0.0007388591766357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;1]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b22568748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;2]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b184622b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;3]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18459470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;4]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b2252ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;5]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1844c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;6]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1846c198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;7]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;8]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;9]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1846c048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;10]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b2252ef60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;11]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b184590f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;12]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18462400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;13]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b225682b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;14]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;15]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;16]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18406080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;17]" time="0.0007407665252685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;18]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;19]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b225208d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;20]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18462860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;21]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18459630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;22]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1844ca90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;23]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1846c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;24]" time="0.00040078163146972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b184065c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;25]" time="0.0007944107055664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1846c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;26]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1844c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;0]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b224d5710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;1]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1843fe10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;2]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18462470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;3]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;4]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18406470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;5]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b184066d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;6]" time="0.0007359981536865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840e400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;7]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b184066d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;8]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;9]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b224e6a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;10]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18462860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;11]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b224d5f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;12]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b2252e390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;13]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;14]" time="0.0007796287536621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840e940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;15]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b224d5c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;16]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1844c320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;17]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b224e6710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;18]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;19]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18406dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;20]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840eac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;21]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840e048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;22]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;23]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840eb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;24]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840e828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;25]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b184065c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;26]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;0]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b225682b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;1]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18459278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;2]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1846c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;3]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1841b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;4]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18459fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;5]" time="0.0003993511199951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18462d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;6]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18462320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;7]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b184065c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;8]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840e860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;9]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;10]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1841b198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;11]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1841b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;12]" time="0.0010843276977539062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b224e6128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;13]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18462278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;14]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;15]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840e860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;16]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18406a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;17]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b184069b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;18]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;19]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1846c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;20]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18495198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;21]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18400a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;22]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b18406fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;23]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b22506518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;24]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;25]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b224d5c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;26]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f1b1840e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;0]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841b710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;1]" time="0.0007488727569580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841b550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;2]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224f71d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;3]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1840eeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;4]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b225061d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;5]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b184066d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;6]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18400668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;7]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;8]" time="0.00040078163146972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841bc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;9]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842b128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;10]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;11]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841b198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;12]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841bc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;13]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b225067b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;14]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1840ea20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;15]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b2252e390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;16]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842b278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;17]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842b630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;18]" time="0.0007698535919189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b2252e780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;19]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224af9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;20]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1840e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;21]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1846cf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;22]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841b400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;23]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841b358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;24]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;25]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842bb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;26]" time="0.0007276535034179688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842b518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;0]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;1]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841b630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;2]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18495978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;3]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18406978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;4]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224af2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;5]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b225061d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;6]" time="0.00039839744567871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18435470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;7]" time="0.000759124755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b184350b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;8]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224af550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;9]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b184067b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;10]" time="0.000400543212890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;11]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224be5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;12]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;13]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b184356a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;14]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18435358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;15]" time="0.0007708072662353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18435860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;16]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18435b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;17]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18435c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;18]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842b780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;19]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841bf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;20]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b184002e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;21]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224aff28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;22]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18406be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;23]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b183bf550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;24]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18406668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;25]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224afa90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;26]" time="0.00040221214294433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224bee80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;0]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;1]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18435240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;2]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18435cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;3]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b183bf2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;4]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b183bfa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;5]" time="0.0007188320159912109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18435e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;6]" time="0.00039839744567871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842b518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;7]" time="0.0003998279571533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841bda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;8]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224af358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;9]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224d02b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;10]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b183bfc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;11]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b183bf2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;12]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b183bf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;13]" time="0.0007109642028808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1840e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;14]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b183bf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;15]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b183bff98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;16]" time="0.00040721893310546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224d07f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;17]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1841bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;18]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842b978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;19]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224bee80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;20]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b183c9898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;21]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b18435748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;22]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1842b390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;23]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224afb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;24]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b224d0160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;25]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b183bf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;26]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f1b1840e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;0]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;1]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183d4198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;2]" time="0.00040078163146972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b1840e048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;3]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b224afa90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;4]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183bf550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;5]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183bf470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;6]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;7]" time="0.00039839744567871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;8]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b18435668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;9]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;10]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b1842bd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;11]" time="0.0007569789886474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b18435908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;12]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c92b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;13]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;14]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b22470e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;15]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183bfa20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;16]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b2245f550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;17]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b1842be48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;18]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b224f7518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;19]" time="0.0007336139678955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b224f7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;20]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b1841b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;21]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183bffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;22]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b2245f208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;23]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;24]" time="0.0004019737243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c96a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;25]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b18435898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;26]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183d46a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;0]" time="0.0007524490356445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183d4a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;1]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b18435208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;2]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;3]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;4]" time="0.00039458274841308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183bfd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;5]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b224d04a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;6]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183bf5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;7]" time="0.0005998611450195312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183d46d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;8]" time="0.0007483959197998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183d4198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;9]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183d4b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;10]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b1842b860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;11]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183bfef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;12]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b1842bf28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;13]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;14]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b22484c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;15]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183e6080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;16]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183e65c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;17]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b22484240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;18]" time="0.00040149688720703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;19]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b22484d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;20]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;21]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b22415198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;22]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183d4d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;23]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183e6390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;24]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183e61d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;25]" time="0.0007653236389160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183d4b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;26]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b22415ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;0]" time="0.00040411949157714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b224d04a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;1]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c9a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;2]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b224848d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;3]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183e6cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;4]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183e6390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;5]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183f0048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;6]" time="0.0007545948028564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b18435208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;7]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183e6668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;8]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183e6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;9]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b22470eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;10]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b22484eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;11]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b22415b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;12]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183f0128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;13]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183f0908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;14]" time="0.0007863044738769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183f0518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;15]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b22415e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;16]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183c93c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;17]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183bfd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;18]" time="0.0004000663757324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183e6128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;19]" time="0.000400543212890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183e6da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;20]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183f0c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;21]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183f0588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;22]" time="0.0007202625274658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183fa3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;23]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183f0f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;24]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183e69b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;25]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b183f0eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;26]" time="0.0004012584686279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f1b224844e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;0]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183c97f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;1]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b22415978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;2]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;3]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;4]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b22415b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;5]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b22484630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;6]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b22424a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;7]" time="0.0003962516784667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183e6128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;8]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183f0f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;9]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183faa90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;10]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;11]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;12]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;13]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;14]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183f0c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;15]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183e67b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;16]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183e6d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;17]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b2244ada0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;18]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b22415f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;19]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b18383470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;20]" time="0.0011069774627685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b22415f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;21]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;22]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;23]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b22424828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;24]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183e6e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;25]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183f0c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;26]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183f0358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;0]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183d4b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;1]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183d4a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;2]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183f0780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;3]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183e6860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;4]" time="0.00039577484130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b22424cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;5]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183facc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;6]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b223dd908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;7]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b2244ac50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;8]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b18435208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;9]" time="0.0007047653198242188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183832e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;10]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183bf630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;11]" time="0.0004062652587890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b18495e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;12]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;13]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183e6940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;14]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183f0518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;15]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183d4da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;16]" time="0.0005998611450195312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183831d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;17]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b18383b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;18]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183f06d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;19]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183e6860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;20]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183faf28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;21]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b223ddef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;22]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;23]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b18383d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;24]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183830b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;25]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183910b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;26]" time="0.0007224082946777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b18383550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;0]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b18383390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;1]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b223ddda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;2]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183faa90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;3]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183e6668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;4]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b223e5a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;5]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183f0d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;6]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183915f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;7]" time="0.0007483959197998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183d4e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;8]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183f0518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;9]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b22424d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;10]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;11]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b2244a860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;12]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b18383a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;13]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183914a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;14]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b18391710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;15]" time="0.0007357597351074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b1839c438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;16]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b18391400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;17]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b18383e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;18]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b224bedd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;19]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183fa048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;20]" time="0.00039196014404296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b2244a860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;21]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b223e5908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;22]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b1839c320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;23]" time="0.0007200241088867188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b1839c978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;24]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183f0748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;25]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b183faf28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;26]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f1b223fc860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183839b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18391f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839c630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839c128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839c748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839cba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839c860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18391630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.00039505958557128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183830b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.00039649009704589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183916d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223dd320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223e5cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a94e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0007240772247314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223e55c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b224be400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18383f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18391da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0004024505615234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839c630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839cc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.0007383823394775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b22356d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839c748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183910b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223fc860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183fac50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b4320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223e5320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2236a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223fc3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18391d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b4128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b4be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223dd3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223e5e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b4a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b47f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2236a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18391cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0007545948028564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839c748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2236a550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a97b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b46d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b4c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223fc908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223ddef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18391978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0007128715515136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18391dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2237a9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183fa908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b49e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a95c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0004029273986816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2236a550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0007374286651611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833e4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839c780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18383dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b4940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223dd3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18391780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833e390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.0007407665252685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223ddef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b4128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0004048347473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a97b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2236abe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183d4d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833eb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833e198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2238be80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2236a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223e5320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b4cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18391828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.0007386207580566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183919b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.000396728515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2231a400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2236ac88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b22484588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833ee48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834ca90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0007419586181640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b224f7e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833ec50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2238b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0005640983581542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b4c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0011858940124511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183598d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223fc908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2231ac88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833ee48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.0007441043853759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2231a208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18361470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b4780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2232c208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833ea58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.00040602684020996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18361160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18361978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2232c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b46a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18361a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183613c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183616a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0010788440704345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18361518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183613c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.00040435791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2231a400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2232ca90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2237a898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2237abe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183593c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183a9c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2231a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.0003998279571533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183b45c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18361898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18383898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0007266998291015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0003998279571533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839c400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18361780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2233e6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0017070770263671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2232ce80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183597f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2237a358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836d5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834cef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2232ce80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2233e898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183617f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18383438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836db00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0007832050323486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1839c400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2234d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2233e160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2238b400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1833e470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836dd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.0007467269897460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836deb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2238b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2233e160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2234dc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0007510185241699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2234d940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183610b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2234df28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222de160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836d080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0007600784301757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18308400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836d400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222de160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18359e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2231ac88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2234db38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18308278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18308a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2234dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222de5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836dd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18308b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183084e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183086d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0007715225219726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18308588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18308668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837cac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0003960132598876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834cd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222ef7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2234da90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183104a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0007221698760986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18361710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2233e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222de4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836d898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837cf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.00040340423583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18308940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183102e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18310d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18310978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18310eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183080b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222de898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222effd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2232ca90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1831c668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2234da90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222de160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b183104e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18310da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18310a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18308f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836d5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0008375644683837891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837cf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837ca58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18308550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222fe400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18310828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18310978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222effd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1834cd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0007474422454833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1836df60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222eff28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18310e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18310400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222fe7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18308dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1837c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1831c588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0007863044738769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1831cb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18308748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222fefd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b18310d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b222ef208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b2231ac88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1831cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1831c470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.0008101463317871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1832d470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b1831cba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f1b223109e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;0]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b222de160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;1]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18310a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;2]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18308f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;3]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1837c358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;4]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;5]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832d080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;6]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18308550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;7]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18310630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;8]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b222de0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;9]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b22310898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;10]" time="0.0004069805145263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1831c630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;11]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832db70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;12]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832d588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;13]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832d748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;14]" time="0.0008111000061035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832d198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;15]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;16]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1831cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;17]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b22310fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;18]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18310a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;19]" time="0.0005443096160888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b222b6eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;20]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1837cf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;21]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18334518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;22]" time="0.0007398128509521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1837c748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;23]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18308e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;24]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18310978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;25]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b22310b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;26]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1831c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;0]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832d908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;1]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18334358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;2]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18334dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;3]" time="0.0007605552673339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;4]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18334f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;5]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832d908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;6]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1831ccf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;7]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832de80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;8]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18308470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;9]" time="0.0004050731658935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b222b6588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;10]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;11]" time="0.0008683204650878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;12]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b222b64e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;13]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18310630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;14]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1831c550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;15]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832dba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;16]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18334320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;17]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;18]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;19]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;20]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182beac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;21]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;22]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18334f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;23]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;24]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b22310898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;25]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18310be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;26]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b222b6588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;0]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182c8400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;1]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b222c9198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;2]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b222ef550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;3]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832de10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;4]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18334c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;5]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;6]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182beef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;7]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182c8048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;8]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182c8940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;9]" time="0.0011324882507324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b222ef208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;10]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;11]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182bed30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;12]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b222c9b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;13]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18334ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;14]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1836d898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;15]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;16]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;17]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1837c208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;18]" time="0.00040650367736816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b1832d470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;19]" time="0.0004017353057861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18334dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;20]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b18334278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;21]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;22]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;23]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;24]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182c8320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;25]" time="0.0007836818695068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182c85f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;26]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f1b182be780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;0]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b222b6fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;1]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b18334780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;2]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b1832de80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;3]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b222692e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;4]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182c8630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;5]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182c8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;6]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182d8080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;7]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182c8c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;8]" time="0.00040984153747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182c8e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;9]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b22269240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;10]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b1832ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;11]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b18334c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;12]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182bee10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;13]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b18308e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;14]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182d8588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;15]" time="0.0007617473602294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182befd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;16]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b18334c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;17]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b1832d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;18]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b2228f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;19]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182c82b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;20]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182c8b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;21]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182d8128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;22]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182d8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;23]" time="0.0007472038269042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182c8c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;24]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b1833e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;25]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b22269630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;26]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b1832d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;0]" time="0.0004093647003173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b222692e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;1]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182d84a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;2]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182d8780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;3]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e43c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;4]" time="0.0007364749908447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e4908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;5]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182d8668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;6]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b18334748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;7]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b1836df60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;8]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b2228f668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;9]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182c8780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;10]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e4550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;11]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e42b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;12]" time="0.0007562637329101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e4780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;13]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e4a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;14]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e4f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;15]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e4390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;16]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b1832d7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;17]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b22269240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;18]" time="0.00040268898010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b2221f128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;19]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182d82e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;20]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182ee4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;21]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182d8c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;22]" time="0.00039839744567871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b2221fa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;23]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b2221f128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;24]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b22278ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;25]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e4400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;26]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e4a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;0]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182ee0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;1]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182ee9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;2]" time="0.0007584095001220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e4828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;3]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182c8780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;4]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b2228fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;5]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182becf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;6]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b18334a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;7]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182eebe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;8]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182ee0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;9]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182ee9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;10]" time="0.0007691383361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182ee400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;11]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182eecc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;12]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182d89b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;13]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182ee8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;14]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b2221f470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;15]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b18334ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;16]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e46d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;17]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182f87f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;18]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182e46d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;19]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b222307b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;20]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b22269828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;21]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b2221fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;22]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182eebe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;23]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182ee710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;24]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b182f8668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;25]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b1827e0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;26]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f1b22278ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;0]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b2228f710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;1]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182eed68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;2]" time="0.00040793418884277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f85c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;3]" time="0.0004074573516845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f87b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;4]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f8e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;5]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b22230e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;6]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182e4ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;7]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182d8240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;8]" time="0.0007812976837158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182e4b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;9]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b22252c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;10]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f8438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;11]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f82b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;12]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182eec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;13]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f8d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;14]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182d8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;15]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18308470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;16]" time="0.0007612705230712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182d87f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;17]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b2221fb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;18]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182d8668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;19]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182ee278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;20]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f87b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;21]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b22252fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;22]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182e42b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;23]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1827e240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;24]" time="0.0007305145263671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1827e978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;25]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b22230c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;26]" time="0.0004036426544189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f8358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;0]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f8c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;1]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f81d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;2]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1832df98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;3]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182d84e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;4]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1827e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;5]" time="0.0007417201995849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1827e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;6]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1827eac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;7]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182d8780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;8]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b221e6c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;9]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182eeda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;10]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f8320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;11]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182ee400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;12]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1831c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;13]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18296518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;14]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18383438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;15]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f80f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;16]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182ee908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;17]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b221e63c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;18]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182d8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;19]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1827eb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;20]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18296208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;21]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18296a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;22]" time="0.0008151531219482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1827eac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;23]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b2221f908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;24]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182ee128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;25]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f8e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;26]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b22252fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;0]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18296c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;1]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18296208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;2]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18296a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;3]" time="0.0007624626159667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b22230e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;4]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18296a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;5]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1831c780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;6]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b221f73c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;7]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b221f7e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;8]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b221e6ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;9]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182eec50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;10]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1829f860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;11]" time="0.0007584095001220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1829f470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;12]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182ee390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;13]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f8438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;14]" time="0.0004067420959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b221f7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;15]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18296898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;16]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18296cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;17]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1829fb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;18]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1829f080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;19]" time="0.0007758140563964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182ac320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;20]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b1829fef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;21]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18296e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;22]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b18296c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;23]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182f8e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;24]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b22205518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;25]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182eef28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;26]" time="0.00041031837463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f1b182ac198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1827e668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22205da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22205e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18296d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1829f668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0004038810729980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182aca20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182acf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1829f828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18296e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b221f7da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0004010200500488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22205518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ee9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b63c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.001188516616821289"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182f8668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22172860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182aca20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182acc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18296d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1829f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1829f240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1827eb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1827e828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1829f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18296518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b221721d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22205710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182e4908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0007884502410888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b6240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b221f7ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0003991127014160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22172ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1829f940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1827eac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b63c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1829fb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22181908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22172cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182e4da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b6a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b63c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0007944107055664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b62b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b6eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b222059b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22181c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18296f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1829f240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18245550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.0008907318115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1829f240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b221811d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22181860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b6710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182453c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18245e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0007581710815429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824e390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18245f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b6710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b222059b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22172ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22181860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18296518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824e278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0008056163787841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22181518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22172ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b183839e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b63c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18245470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824ea20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824e080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824e518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824eb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824e080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18245cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b60f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b221919b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22181518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1825a438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0007672309875488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22181860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22191908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182e4a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18245f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824e828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824eac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1825a438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1825a978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0007431507110595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824e438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b66d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b221211d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22191278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1825a940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1825a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18267278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0004031658172607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b222059b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1825af98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0004000663757324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182ac240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b182b6710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18245a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1824ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18267080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18267b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b22134710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b221213c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18267b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.00040078163146972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18267358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1825a940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b1825a320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f1b18296748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.026237010955810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.02852177619934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.02978682518005371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.04073739051818848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.014954328536987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.00460052490234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.06388998031616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.11049771308898926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.27760839462280273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.04732656478881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.033007144927978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.009332418441772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.03954005241394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.06547355651855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.07185530662536621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.07750606536865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.046427011489868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.00843667984008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.35440754890441895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.21589231491088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.5576746463775635"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.10084056854248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.01655721664428711"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0061702728271484375"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.18949341773986816"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.3293585777282715"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="1.0058414936065674"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.09895038604736328"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.01733112335205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.005003213882446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.025147199630737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.028225183486938477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.029148578643798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.03960585594177246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.014173269271850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.004525423049926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.06286501884460449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.10799551010131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.27263879776000977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.04655909538269043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.03236103057861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.008715152740478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.03745102882385254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.06589388847351074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.07157373428344727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.07486820220947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.045035362243652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.008359432220458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.25650453567504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.21297502517700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.5554852485656738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.09907078742980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.01603412628173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0057125091552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.2185821533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.38323068618774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="1.1525838375091553"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.10179448127746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.017707109451293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0049517154693603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.025906801223754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.028301715850830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.029111623764038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.04061722755432129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.014618396759033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0045092105865478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.06430816650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.11077642440795898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.2785830497741699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.04680061340332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0326077938079834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.008695363998413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.03789329528808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.06567811965942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0726015567779541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0796670913696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.045881032943725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.00822138786315918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.26584792137145996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.21854710578918457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.5727100372314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.09965085983276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.015944719314575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.005817413330078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.24290847778320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.4211604595184326"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="1.2608063220977783"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.10811948776245117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.017852306365966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0050127506256103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.02539992332458496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.027823209762573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.02887105941772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.040032386779785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.01419687271118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.004534244537353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.06352400779724121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.11310148239135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.2776153087615967"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.046765804290771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.03230643272399902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.008874654769897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.03875279426574707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0654149055480957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.07093524932861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0789940357208252"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.05089735984802246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.008952140808105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.2618989944458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.22054409980773926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.562730073928833"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.1023108959197998"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.016283750534057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0062656402587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.2761688232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.464597225189209"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="1.4141459465026855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.11455345153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.01789689064025879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.005038738250732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.025354385375976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.028349876403808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.029421329498291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.040897369384765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.014586210250854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.004652976989746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.06378030776977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.11114978790283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.2786874771118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.04662895202636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.032790422439575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.008880376815795898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.03743886947631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0661005973815918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.07709598541259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.07604646682739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.04630851745605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.008381366729736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.2630457878112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.2178037166595459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.5549206733703613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.10052037239074707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.01568126678466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0062563419342041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.2972421646118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.5104928016662598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="1.572037696838379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.12778019905090332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.049957990646362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.13553595542907715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.09997797012329102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.11987519264221191"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.12122988700866699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.09671187400817871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.03790760040283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.11367106437683105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.2778921127319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.5348172187805176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="1.5041987895965576"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.11411094665527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0933375358581543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.27655982971191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.15298867225646973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.27040934562683105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.32395195960998535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.3461034297943115"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.13172125816345215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.2946646213531494"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="1.0431833267211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="1.011181116104126"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="2.9269723892211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.2585875988006592"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.04302525520324707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.1999349594116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="1.4709563255310059"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="2.7963979244232178"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="11.848217725753784"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.4504866600036621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.055565834045410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.14789986610412598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.11334371566772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.13222432136535645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.13659977912902832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.11594891548156738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.041898250579833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.13463640213012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.32158470153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.5481162071228027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="1.5060620307922363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.12298226356506348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.10243988037109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.30498433113098145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.1656656265258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.29797983169555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.3468501567840576"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.3838496208190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.1450808048248291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.32412099838256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="1.1691014766693115"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="1.1337497234344482"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="3.208465576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.27646780014038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.04728198051452637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.2477703094482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="2.4032649993896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="4.027570724487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="15.69360899925232"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.4800872802734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.048972129821777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.12885832786560059"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.09908270835876465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.11596012115478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.12150239944458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.09861207008361816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.03802323341369629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.11973023414611816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.2725362777709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.5382080078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="1.5123658180236816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.1149129867553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.09394955635070801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.28340625762939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.1527714729309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.2974405288696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.3504021167755127"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.3555307388305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.1346738338470459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.29036951065063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="1.0367732048034668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="1.0209693908691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="2.906087636947632"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.2492969036102295"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.04261946678161621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.24677133560180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="2.7959835529327393"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="5.0099036693573"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="19.296048641204834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.5646176338195801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.05141925811767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.13965773582458496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.10876297950744629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.12881779670715332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.1296062469482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.10232043266296387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.03967857360839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.11921930313110352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.2848820686340332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.5479304790496826"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="1.510819673538208"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.11359548568725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.09335017204284668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.27431821823120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.15092253684997559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.2684755325317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.322223424911499"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.33531999588012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.13165736198425293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.29788732528686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="1.053328037261963"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="1.0120840072631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="2.885791063308716"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.252854585647583"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.04244184494018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.2724459171295166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="3.361593723297119"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="6.424964427947998"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="22.491878271102905"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.6175229549407959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.048801422119140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.1287226676940918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.09812402725219727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.11458516120910645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.12421512603759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.09719467163085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.038285255432128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.11238956451416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.2713029384613037"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.5423252582550049"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="1.503662109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.11290359497070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.09249162673950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.2757999897003174"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.15347599983215332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.2733323574066162"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.31394219398498535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.3495011329650879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.13734650611877441"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.2864034175872803"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="1.0400760173797607"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.9965395927429199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="2.911038875579834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.2500324249267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.043387413024902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.2937581539154053"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="3.9402055740356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="6.987989664077759"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="25.440722703933716"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.6629054546356201"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.048300981521606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.12678194046020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.09652948379516602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.11094427108764648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.11912059783935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.09487152099609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.03717613220214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.1099693775177002"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.2700388431549072"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.5142860412597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="1.4657092094421387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.11035466194152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.09153437614440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.268369197845459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.14657044410705566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.26308608055114746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.30675601959228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.33493900299072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.12444782257080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.2840549945831299"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.985292911529541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.9638044834136963"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="2.779496431350708"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.24369478225708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.04148244857788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.310150146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="4.363619089126587"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="7.619436264038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="28.86005663871765"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.7108571529388428"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.04841327667236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.13137388229370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.09792804718017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.1138310432434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.12105894088745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.09723329544067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.03727316856384277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.11243700981140137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.2655906677246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.5111386775970459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="1.6114921569824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.11237406730651855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.09171009063720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.2681741714477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.14877939224243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.2706584930419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.3015775680541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.331160306930542"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.12096405029296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.27011561393737793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.9638550281524658"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.933971643447876"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="2.66176700592041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.2378988265991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.04199528694152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.31944751739501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="4.831926107406616"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="8.406298875808716"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="31.820605278015137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.7963395118713379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.04910135269165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.12966585159301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.09969210624694824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.1146860122680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.12196063995361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.10000753402709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.038144826889038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.11407160758972168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.2748982906341553"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.5276565551757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="1.5004363059997559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.11396360397338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.09509706497192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.2761521339416504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.1532602310180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.27562904357910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.31099653244018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.3419532775878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.12608695030212402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.2811765670776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.9847917556762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.9469437599182129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="3.5249526500701904"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.27512693405151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.04150247573852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.4220435619354248"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="5.548702239990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="9.368483781814575"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="36.296590089797974"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.870603084564209"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.04775810241699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.12738704681396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0971226692199707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.11975693702697754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.11972212791442871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0943593978881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.035303354263305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.10895490646362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.2623720169067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.5223555564880371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="1.4911341667175293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.1136617660522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.09322953224182129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.27482080459594727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.15238642692565918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.27204060554504395"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.3088557720184326"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.3467118740081787"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.12433815002441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.2768876552581787"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="1.0016038417816162"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.9868652820587158"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="2.782719373703003"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.24795198440551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.042135000228881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.3798847198486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="6.05709433555603"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="10.393808364868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="39.244089126586914"><system-err>no more timer available, reusing last one
</system-err></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.9152803421020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;0]" time="0.017287015914916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;1]" time="0.017573833465576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;2]" time="0.0349884033203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;3]" time="0.03782796859741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;4]" time="0.037518978118896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;5]" time="0.013926267623901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;6]" time="0.013898372650146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;7]" time="0.04131650924682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;8]" time="0.21616601943969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;9]" time="0.41509056091308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;10]" time="0.032297611236572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;11]" time="0.06461119651794434"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;12]" time="0.06474637985229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;13]" time="0.05250835418701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;14]" time="0.06967902183532715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;15]" time="0.10036706924438477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;16]" time="0.11084794998168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;17]" time="0.04420733451843262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;18]" time="0.04524993896484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;19]" time="0.13828134536743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;20]" time="0.4017455577850342"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;21]" time="0.9309391975402832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;22]" time="0.016647815704345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;23]" time="0.01722860336303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;24]" time="0.17865443229675293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;25]" time="4.636421203613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;26]" time="10.747609615325928"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;0]" time="0.017897367477416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;1]" time="0.01866316795349121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;2]" time="0.03612327575683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;3]" time="0.03858828544616699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;4]" time="0.03894162178039551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;5]" time="0.014218568801879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;6]" time="0.014759302139282227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;7]" time="0.03757119178771973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;8]" time="0.21407628059387207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;9]" time="0.42122650146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;10]" time="0.03265380859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;11]" time="0.06467652320861816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;12]" time="0.06367254257202148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;13]" time="0.052658796310424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;14]" time="0.07024455070495605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;15]" time="0.09891724586486816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;16]" time="0.11025571823120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;17]" time="0.04544496536254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;18]" time="0.045177459716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;19]" time="0.14084124565124512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;20]" time="0.4095027446746826"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;21]" time="0.8962740898132324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;22]" time="0.016508817672729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;23]" time="0.01677870750427246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;24]" time="0.17730164527893066"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;25]" time="4.554011583328247"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;26]" time="10.653701543807983"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;0]" time="0.018225431442260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;1]" time="0.018908262252807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;2]" time="0.03616762161254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;3]" time="0.038369178771972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;4]" time="0.03833484649658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;5]" time="0.015192031860351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;6]" time="0.015130281448364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;7]" time="0.036591291427612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;8]" time="0.20932388305664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;9]" time="0.40962982177734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;10]" time="0.03250002861022949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;11]" time="0.06505632400512695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;12]" time="0.0642242431640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;13]" time="0.05301833152770996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;14]" time="0.07095766067504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;15]" time="0.09847593307495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;16]" time="0.12041997909545898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;17]" time="0.05329775810241699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;18]" time="0.04475283622741699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;19]" time="0.1441488265991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;20]" time="0.39629101753234863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;21]" time="0.8902308940887451"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;22]" time="0.016520261764526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;23]" time="0.016903162002563477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;24]" time="0.17464518547058105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;25]" time="4.5761332511901855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;26]" time="10.770230293273926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0029735565185546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0015320777893066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0039327144622802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.004110574722290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.005904197692871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.004921913146972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.002351045608520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.001390695571899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.005459785461425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0069119930267333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.02094125747680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.005336284637451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.004475116729736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.002181529998779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.005000591278076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.00807642936706543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0087890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.014019250869750977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.006722211837768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0023539066314697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.04782533645629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.02020120620727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.07033371925354004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.00796818733215332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.002454519271850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0025129318237304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.02774953842163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.035410404205322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.12827420234680176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.00853419303894043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0028536319732666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.001478433609008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.003821134567260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.004101753234863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0058400630950927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.004870414733886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.002385854721069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0014529228210449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.005705833435058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0072329044342041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.021854162216186523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.00534510612487793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.005620241165161133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0033559799194335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.006108760833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.009819507598876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.009683847427368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.013866901397705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.006597995758056641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.002526998519897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.04753279685974121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.020435333251953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.07128238677978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.007981538772583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0024383068084716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.003444194793701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.04555177688598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.0410764217376709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.18697237968444824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.009899139404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0026531219482421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0015003681182861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.003825664520263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.004092216491699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.006095170974731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.004917144775390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0023920536041259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0015017986297607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.005627632141113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.006829500198364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.02100396156311035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.005514383316040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.004403829574584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.002175569534301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0049631595611572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.008079051971435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.008690595626831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.013928651809692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.006610870361328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002447366714477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.0452733039855957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.020223617553710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.07112503051757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.00807809829711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0025129318237304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.003512859344482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.04625225067138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.040566205978393555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.18514370918273926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.011705636978149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0038673877716064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.001611471176147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.004008769989013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.004289150238037109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.006012916564941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0051381587982177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0025069713592529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0014808177947998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0057599544525146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0072138309478759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.022103071212768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.00631403923034668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.004533290863037109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0022192001342773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.005090475082397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.008488893508911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.009427309036254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.014576196670532227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.00790095329284668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0024900436401367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.04749035835266113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.02220320701599121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.0742344856262207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.008662700653076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.002680540084838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0027115345001220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.028567075729370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.059741973876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.1832904815673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.01096487045288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.006501436233520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.001680135726928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.004079341888427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.004487037658691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0060193538665771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.005082368850708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0025222301483154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0015475749969482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.005807638168334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0074732303619384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.022342920303344727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.006494283676147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.004617452621459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.002448558807373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.005280971527099609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.008594274520874023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.00911569595336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.014695405960083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.008118391036987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002542734146118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.045496225357055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.0221712589263916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.07432365417480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.008537769317626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0026917457580566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.003715991973876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.04743075370788574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.06514334678649902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.239091157913208"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.011949539184570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0040683746337890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0016891956329345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.004075050354003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.004365682601928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.006085395812988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.005099296569824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.00249481201171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0015041828155517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.005800724029541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0074155330657958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.022095441818237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.006417274475097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.004822492599487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0024764537811279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.005261421203613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.008538007736206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.00932931900024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.014434576034545898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0077610015869140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0029306411743164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.05246734619140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.022493839263916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.0744326114654541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.008686542510986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0026128292083740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0035593509674072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.04732322692871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.06531333923339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.23890304565429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.012542486190795898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.003949642181396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.001642465591430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.003973484039306641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.004370450973510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.006227254867553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0052204132080078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.002513408660888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0016016960144042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0055959224700927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.007401227951049805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.021976947784423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.006331443786621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.004630088806152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0023174285888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.00531458854675293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.008379697799682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.00919032096862793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.014423131942749023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.007782459259033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0026674270629882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.05046868324279785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.02216362953186035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.08211946487426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.008648157119750977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.002881288528442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0027008056640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.029145240783691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.06126689910888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.1864922046661377"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.011401653289794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.003811359405517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0016276836395263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.004044771194458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.00433039665222168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0061931610107421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.005187273025512695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0024940967559814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0017392635345458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.005932331085205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.007346630096435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.022147655487060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.006424427032470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.004580020904541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0022287368774414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0053462982177734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.008492469787597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.009058952331542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.014484167098999023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.008124589920043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0024051666259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.047324419021606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.022211313247680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.07462215423583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.00917816162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.003632783889770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.003762960433959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.04871082305908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.06696343421936035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.24406170845031738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.012156248092651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0038139820098876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0017066001892089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.004133701324462891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.004561901092529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.006334781646728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.005305767059326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0027551651000976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0015683174133300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.006039619445800781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.007532835006713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.022844552993774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.00661778450012207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.004809379577636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0026290416717529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.010684728622436523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.008671998977661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.009226560592651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.014313220977783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.006764411926269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0026438236236572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.046758174896240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.02240777015686035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.07343411445617676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.008878946304321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0036585330963134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0036001205444335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.04786372184753418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.06491875648498535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.2376232147216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.011918783187866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;0]" time="0.005518913269042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;1]" time="0.004266500473022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;2]" time="0.007448673248291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;3]" time="0.009304523468017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;4]" time="0.01072835922241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;5]" time="0.0036835670471191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;6]" time="0.0036177635192871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;7]" time="0.007524013519287109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;8]" time="0.026255369186401367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;9]" time="0.05200457572937012"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;10]" time="0.007966041564941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;11]" time="0.013171911239624023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;12]" time="0.012799501419067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;13]" time="0.011383533477783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;14]" time="0.01414036750793457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;15]" time="0.024828672409057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;16]" time="0.02701854705810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;17]" time="0.009197235107421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;18]" time="0.008827924728393555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;19]" time="0.011479377746582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;20]" time="0.041977643966674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;21]" time="0.09181761741638184"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;22]" time="0.004940032958984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;23]" time="0.003998279571533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;24]" time="0.008932113647460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;25]" time="0.05012917518615723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;26]" time="0.10542678833007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;0]" time="0.005214214324951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;1]" time="0.004233837127685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;2]" time="0.007493495941162109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;3]" time="0.009346723556518555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;4]" time="0.010524988174438477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;5]" time="0.003719329833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;6]" time="0.0035512447357177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;7]" time="0.008268117904663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;8]" time="0.02683544158935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;9]" time="0.05183005332946777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;10]" time="0.008130550384521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;11]" time="0.014328241348266602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;12]" time="0.014608383178710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;13]" time="0.011181116104125977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;14]" time="0.013311147689819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;15]" time="0.021597862243652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;16]" time="0.026429176330566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;17]" time="0.009079217910766602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;18]" time="0.008053302764892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;19]" time="0.011252403259277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;20]" time="0.04223823547363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;21]" time="0.09096813201904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;22]" time="0.005131244659423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;23]" time="0.0041713714599609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;24]" time="0.010032176971435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;25]" time="0.07316470146179199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;26]" time="0.1623373031616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;0]" time="0.005330801010131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;1]" time="0.00433659553527832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;2]" time="0.007817745208740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;3]" time="0.00952005386352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;4]" time="0.010910987854003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;5]" time="0.004824399948120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;6]" time="0.003943204879760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;7]" time="0.007945060729980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;8]" time="0.03231668472290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;9]" time="0.05257773399353027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;10]" time="0.00825190544128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;11]" time="0.014375925064086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;12]" time="0.014518022537231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;13]" time="0.01134037971496582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;14]" time="0.013428211212158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;15]" time="0.02180171012878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;16]" time="0.026959896087646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;17]" time="0.009310245513916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;18]" time="0.00910639762878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;19]" time="0.011564016342163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;20]" time="0.04361295700073242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;21]" time="0.09275555610656738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;22]" time="0.004834175109863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;23]" time="0.003976583480834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;24]" time="0.009936094284057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;25]" time="0.07266688346862793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;26]" time="0.15827107429504395"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0038139820098876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.002209186553955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.007536411285400391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.009171724319458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.013448476791381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.008376359939575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0030717849731445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.002125263214111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.03190875053405762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.06409358978271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.9226646423339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0106964111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0046749114990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.003360271453857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.010157585144042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.015165090560913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.020443201065063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.031525611877441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.00866556167602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.004553079605102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.09049773216247559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.07893109321594238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.8943967819213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.013611793518066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.004210948944091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.003513813018798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.045670509338378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07358312606811523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.6414062976837158"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.014225482940673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004247188568115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.002222299575805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.007333517074584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.009345531463623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.014706134796142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.008357048034667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.002875089645385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.002111196517944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.03261899948120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.06293535232543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.9332449436187744"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.010993719100952148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.006086587905883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.003638744354248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.009927511215209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.014705657958984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.020232439041137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.03099679946899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.008393287658691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0036139488220214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.09225606918334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.07531857490539551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.8959944248199463"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.013917922973632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.004382133483886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004903316497802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.06571674346923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07965636253356934"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.6970863342285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.01523590087890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.004213571548461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.002212047576904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.007323503494262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.009412050247192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.013590335845947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.008884429931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.003237485885620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.00225830078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.032636404037475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.06251239776611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.9277915954589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.010625362396240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0060672760009765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0034856796264648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.010418891906738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.015030860900878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.020502567291259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0313725471496582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.008507251739501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0045185089111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.09238886833190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.0748147964477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.8902239799499512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.013697624206542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0040740966796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.00452733039855957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.0664510726928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07865071296691895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.6923508644104004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.014878988265991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.004122495651245117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0021004676818847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0070154666900634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.009030818939208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.013187646865844727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.008436203002929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.002744913101196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.002137899398803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.03257465362548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.06264781951904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.9196131229400635"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.010452032089233398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.004767179489135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.003551006317138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.009958982467651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.014403104782104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0201108455657959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.030583620071411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.008247613906860352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0036649703979492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.09075093269348145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.07436847686767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.891944408416748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.013592958450317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.004055023193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.003350973129272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.04628443717956543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09606194496154785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.6921427249908447"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.015339374542236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0041654109954833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.002164602279663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.00779271125793457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.009453773498535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.013613700866699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.008482694625854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.002875089645385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.002185344696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.03299903869628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.06340980529785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.9293713569641113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.010994195938110352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.004965782165527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0035762786865234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.01009225845336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.016457557678222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0203399658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.031911611557006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.008577108383178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004551410675048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.09662389755249023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.07548403739929199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.8948636054992676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.013901710510253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.004308223724365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004700183868408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.06592369079589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.1011664867401123"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.7600934505462646"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.016751527786254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.004181385040283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.00228118896484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.007475614547729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.009212255477905273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.01342010498046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.008478879928588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0028543472290039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.002087116241455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.032755136489868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.06378674507141113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.924278736114502"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.010760068893432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.006094932556152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0035169124603271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.009781599044799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.015018224716186523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.019797563552856445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.031002044677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.008357048034667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.003381490707397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.09511876106262207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.07480502128601074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.9022669792175293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.014302253723144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0040836334228515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004777431488037109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.06665468215942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.10030150413513184"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.7524387836456299"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.016330480575561523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.004073381423950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0021600723266601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.007183074951171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.008975982666015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.014143705368041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.008257865905761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0028693675994873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0020766258239746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.03214383125305176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.06457257270812988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.931988000869751"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.010807514190673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.005820274353027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.003478527069091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.009837627410888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0146636962890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.020080089569091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.03142356872558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.008629798889160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0035800933837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.0941002368927002"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.07468223571777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.8951225280761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.01360630989074707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.004032611846923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0034885406494140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.046712398529052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.09631228446960449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.694319486618042"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.01574563980102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.004271507263183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0023043155670166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.007528543472290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.00943446159362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.014089822769165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.008381128311157227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.002851724624633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.00220489501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.03273749351501465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.06323790550231934"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.9286599159240723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.010413408279418945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.004769802093505859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0034058094024658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.009923458099365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.014636516571044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.020249605178833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.031249523162841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.008460760116577148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004418849945068359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.09161710739135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.07393288612365723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.8759829998016357"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.013551712036132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.004004955291748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.004662036895751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.06572484970092773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.10075616836547852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.7532234191894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.01676630973815918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.004289388656616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0022559165954589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0076482295989990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.009447336196899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.014022588729858398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.008682966232299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0030498504638671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0022780895233154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.03278207778930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.06390047073364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.9246017932891846"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.010756254196166992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.005859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0035843849182128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.010640859603881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.01488351821899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.02023005485534668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.031357526779174805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.008557558059692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0036144256591796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.09360122680664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.07384276390075684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.8950204849243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.014154672622680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.00414729118347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0044329166412353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.06543660163879395"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.1012272834777832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.7525439262390137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.01672983169555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;0]" time="0.005109071731567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;1]" time="0.003770112991333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;2]" time="0.007142305374145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;3]" time="0.013562679290771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;4]" time="0.016175508499145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;5]" time="0.00476837158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;6]" time="0.0034885406494140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;7]" time="0.015365123748779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;8]" time="0.41693878173828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;9]" time="2.1248836517333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;10]" time="0.0071868896484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;11]" time="0.016398906707763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;12]" time="0.017270326614379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;13]" time="0.010789632797241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;14]" time="0.016450166702270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;15]" time="0.030672311782836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;16]" time="0.0398707389831543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;17]" time="0.008839130401611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;18]" time="0.007561683654785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;19]" time="0.02060079574584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;20]" time="0.3833324909210205"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;21]" time="2.0107297897338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;22]" time="0.0047321319580078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;23]" time="0.0038688182830810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;24]" time="0.013026714324951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;25]" time="0.27255725860595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;26]" time="1.271327018737793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;0]" time="0.004860639572143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;1]" time="0.0038635730743408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;2]" time="0.007264614105224609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;3]" time="0.014546632766723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;4]" time="0.01797199249267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;5]" time="0.004667997360229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;6]" time="0.0035219192504882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;7]" time="0.015654325485229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;8]" time="0.41812610626220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;9]" time="2.145596504211426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;10]" time="0.007135629653930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;11]" time="0.016590595245361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;12]" time="0.016835689544677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;13]" time="0.011102437973022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;14]" time="0.016634464263916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;15]" time="0.030486106872558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;16]" time="0.03969693183898926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;17]" time="0.009074926376342773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;18]" time="0.007835626602172852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;19]" time="0.020573854446411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;20]" time="0.3884873390197754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;21]" time="1.965177297592163"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;22]" time="0.004901409149169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;23]" time="0.0037882328033447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;24]" time="0.01356649398803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;25]" time="0.28978490829467773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;26]" time="1.3259358406066895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;0]" time="0.0047414302825927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;1]" time="0.003762960433959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;2]" time="0.007127046585083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;3]" time="0.013787269592285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;4]" time="0.017607688903808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;5]" time="0.0048215389251708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;6]" time="0.0036067962646484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;7]" time="0.015513420104980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;8]" time="0.42426156997680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;9]" time="2.1382250785827637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;10]" time="0.007115602493286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;11]" time="0.016669750213623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;12]" time="0.01785874366760254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;13]" time="0.010843515396118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;14]" time="0.017664670944213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;15]" time="0.030513525009155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;16]" time="0.04020524024963379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;17]" time="0.009016990661621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;18]" time="0.00885629653930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;19]" time="0.021054506301879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;20]" time="0.3940603733062744"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;21]" time="2.0281147956848145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;22]" time="0.004569530487060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;23]" time="0.003909587860107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;24]" time="0.014027118682861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;25]" time="0.29742002487182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;26]" time="1.334498405456543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;0]" time="0.0033147335052490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;1]" time="0.002557516098022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;2]" time="0.003972768783569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;3]" time="0.011713504791259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;4]" time="0.01972484588623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;5]" time="0.004278659820556641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;6]" time="0.003098011016845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;7]" time="0.00517582893371582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;8]" time="0.018238067626953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;9]" time="0.03573250770568848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;10]" time="0.005603313446044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;11]" time="0.008873701095581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;12]" time="0.008466243743896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;13]" time="0.005777597427368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;14]" time="0.00865626335144043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;15]" time="0.035196781158447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;16]" time="0.07202267646789551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;17]" time="0.009245634078979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;18]" time="0.008775711059570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;19]" time="0.023967981338500977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;20]" time="0.03902316093444824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;21]" time="0.07444572448730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;22]" time="0.024581432342529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;23]" time="0.025226593017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;24]" time="0.031563758850097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;25]" time="0.07435154914855957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;26]" time="0.13481855392456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;0]" time="0.003652334213256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;1]" time="0.0027861595153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;2]" time="0.003951549530029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;3]" time="0.011189937591552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;4]" time="0.019584178924560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;5]" time="0.004407167434692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;6]" time="0.0029146671295166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;7]" time="0.004958629608154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;8]" time="0.017870426177978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;9]" time="0.03390669822692871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;10]" time="0.006665706634521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;11]" time="0.01006174087524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;12]" time="0.00875091552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;13]" time="0.00576329231262207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;14]" time="0.009054183959960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;15]" time="0.03511810302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;16]" time="0.0719916820526123"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;17]" time="0.008690357208251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;18]" time="0.007928133010864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;19]" time="0.02314305305480957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;20]" time="0.03870248794555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;21]" time="0.07353901863098145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;22]" time="0.024037599563598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;23]" time="0.024242401123046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;24]" time="0.03143048286437988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;25]" time="0.07457327842712402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;26]" time="0.1356360912322998"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;0]" time="0.0035355091094970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;1]" time="0.002579927444458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;2]" time="0.0038793087005615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;3]" time="0.01129293441772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;4]" time="0.0193483829498291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;5]" time="0.003904581069946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;6]" time="0.0028350353240966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;7]" time="0.0048711299896240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;8]" time="0.017754793167114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;9]" time="0.03451132774353027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;10]" time="0.0055429935455322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;11]" time="0.008956432342529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;12]" time="0.008037328720092773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;13]" time="0.005924224853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;14]" time="0.008771657943725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;15]" time="0.034861087799072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;16]" time="0.07183170318603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;17]" time="0.008981704711914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;18]" time="0.007880687713623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;19]" time="0.023489952087402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;20]" time="0.03987002372741699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;21]" time="0.07518434524536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;22]" time="0.024755239486694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;23]" time="0.02531576156616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;24]" time="0.0382232666015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;25]" time="0.07642817497253418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;26]" time="0.1337597370147705"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;0]" time="0.007379770278930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;1]" time="0.0064716339111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;2]" time="0.008082866668701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;3]" time="0.009767770767211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;4]" time="0.010151863098144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;5]" time="0.00812220573425293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;6]" time="0.008166074752807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;7]" time="0.01447439193725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;8]" time="0.04386496543884277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;9]" time="0.07869911193847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;10]" time="0.015020608901977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;11]" time="0.01868462562561035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;12]" time="0.017622709274291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;13]" time="0.013488292694091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;14]" time="0.018470287322998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;15]" time="0.028293371200561523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;16]" time="0.031426191329956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;17]" time="0.0305938720703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;18]" time="0.03278160095214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;19]" time="0.10501432418823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;20]" time="0.09643769264221191"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;21]" time="0.15705251693725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;22]" time="0.12495994567871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;23]" time="0.12535500526428223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;24]" time="0.16214966773986816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;25]" time="0.25556230545043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;26]" time="0.39794111251831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;0]" time="0.007352590560913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;1]" time="0.006564617156982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;2]" time="0.008270978927612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;3]" time="0.010231256484985352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;4]" time="0.010129213333129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;5]" time="0.008382558822631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;6]" time="0.008443355560302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;7]" time="0.01396632194519043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;8]" time="0.044019460678100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;9]" time="0.08014106750488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;10]" time="0.01564335823059082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;11]" time="0.01833033561706543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;12]" time="0.017855405807495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;13]" time="0.013535261154174805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;14]" time="0.018390178680419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;15]" time="0.02840280532836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;16]" time="0.03167366981506348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;17]" time="0.031064510345458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;18]" time="0.033031463623046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;19]" time="0.10542845726013184"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;20]" time="0.09675264358520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;21]" time="0.15751147270202637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;22]" time="0.12609171867370605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;23]" time="0.12680482864379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;24]" time="0.15770483016967773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;25]" time="0.25333142280578613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;26]" time="0.387636661529541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;0]" time="0.007268667221069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;1]" time="0.006549358367919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;2]" time="0.008386373519897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;3]" time="0.010131359100341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;4]" time="0.015028238296508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;5]" time="0.008274316787719727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;6]" time="0.008423566818237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;7]" time="0.014365673065185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;8]" time="0.04537081718444824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;9]" time="0.08118104934692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;10]" time="0.015516519546508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;11]" time="0.01852560043334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;12]" time="0.018413305282592773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;13]" time="0.01393437385559082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;14]" time="0.01990962028503418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;15]" time="0.030057668685913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;16]" time="0.03200101852416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;17]" time="0.03200387954711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;18]" time="0.03333449363708496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;19]" time="0.1076207160949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;20]" time="0.09726262092590332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;21]" time="0.1600484848022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;22]" time="0.12752509117126465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;23]" time="0.12600016593933105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;24]" time="0.15663886070251465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;25]" time="0.2549757957458496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;26]" time="0.3937647342681885"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;0]" time="0.0027463436126708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;1]" time="0.002226591110229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;2]" time="0.0032052993774414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;3]" time="0.003966569900512695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;4]" time="0.004586696624755859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;5]" time="0.002118349075317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;6]" time="0.002004861831665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;7]" time="0.002866029739379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;8]" time="0.0037403106689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;9]" time="0.0046558380126953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;10]" time="0.0026252269744873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;11]" time="0.004559040069580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;12]" time="0.004640340805053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;13]" time="0.003729581832885742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;14]" time="0.0044519901275634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;15]" time="0.0062792301177978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;16]" time="0.008135557174682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;17]" time="0.0029468536376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;18]" time="0.002630472183227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;19]" time="0.0046732425689697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;20]" time="0.011834383010864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;21]" time="0.022465229034423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;22]" time="0.0028486251831054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;23]" time="0.0019769668579101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;24]" time="0.004053354263305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;25]" time="0.031743764877319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;26]" time="0.05697131156921387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;0]" time="0.0031845569610595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;1]" time="0.002362489700317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;2]" time="0.0031747817993164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;3]" time="0.003887653350830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;4]" time="0.004559755325317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;5]" time="0.0021445751190185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;6]" time="0.002028942108154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;7]" time="0.0028998851776123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;8]" time="0.004076480865478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;9]" time="0.005233049392700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;10]" time="0.0027971267700195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;11]" time="0.004637241363525391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;12]" time="0.0045816898345947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;13]" time="0.003818988800048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;14]" time="0.004514455795288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;15]" time="0.0065157413482666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;16]" time="0.008285045623779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;17]" time="0.002781391143798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;18]" time="0.002542257308959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;19]" time="0.004724979400634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;20]" time="0.012082338333129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;21]" time="0.023731231689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;22]" time="0.0028116703033447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;23]" time="0.0021359920501708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;24]" time="0.0044591426849365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;25]" time="0.027028560638427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;26]" time="0.059287309646606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;0]" time="0.0033664703369140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;1]" time="0.002366304397583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;2]" time="0.003332376480102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;3]" time="0.004106044769287109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;4]" time="0.004704475402832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;5]" time="0.002123117446899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;6]" time="0.0020494461059570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;7]" time="0.0030155181884765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;8]" time="0.004038810729980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;9]" time="0.005322933197021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;10]" time="0.002775907516479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;11]" time="0.004836082458496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;12]" time="0.0046846866607666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;13]" time="0.004086494445800781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;14]" time="0.004813432693481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;15]" time="0.006719112396240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;16]" time="0.008633852005004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;17]" time="0.003397703170776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;18]" time="0.0029931068420410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;19]" time="0.005139350891113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;20]" time="0.01205754280090332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;21]" time="0.023362398147583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;22]" time="0.0027539730072021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;23]" time="0.002012491226196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;24]" time="0.004192352294921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;25]" time="0.02731037139892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;26]" time="0.06008005142211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;0]" time="0.0063877105712890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;1]" time="0.005257129669189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;2]" time="0.006276369094848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;3]" time="0.007321834564208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;4]" time="0.00761103630065918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;5]" time="0.004555940628051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;6]" time="0.004293918609619141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;7]" time="0.007157802581787109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;8]" time="0.0255279541015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;9]" time="0.04850268363952637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;10]" time="0.009313583374023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;11]" time="0.010136127471923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;12]" time="0.009825468063354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;13]" time="0.008197784423828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;14]" time="0.009981393814086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;15]" time="0.013729333877563477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;16]" time="0.016581296920776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;17]" time="0.011049509048461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;18]" time="0.010304689407348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;19]" time="0.018131256103515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;20]" time="0.05203986167907715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;21]" time="0.10704374313354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;22]" time="0.005835771560668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;23]" time="0.004773378372192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;24]" time="0.020645618438720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;25]" time="0.41094160079956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;26]" time="0.9666004180908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;0]" time="0.0063974857330322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;1]" time="0.0056400299072265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;2]" time="0.006500244140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;3]" time="0.00778961181640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;4]" time="0.007752418518066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;5]" time="0.0046215057373046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;6]" time="0.0044345855712890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;7]" time="0.00712132453918457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;8]" time="0.025373458862304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;9]" time="0.04819846153259277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;10]" time="0.009108781814575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;11]" time="0.010221481323242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;12]" time="0.009588956832885742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;13]" time="0.008004188537597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;14]" time="0.009860038757324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;15]" time="0.013608217239379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;16]" time="0.016216278076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;17]" time="0.01148676872253418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;18]" time="0.011659383773803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;19]" time="0.018301725387573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;20]" time="0.05093860626220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;21]" time="0.11161661148071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;22]" time="0.005933046340942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;23]" time="0.004927873611450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;24]" time="0.0214388370513916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;25]" time="0.4327046871185303"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;26]" time="0.9978275299072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;0]" time="0.006066083908081055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;1]" time="0.005356788635253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;2]" time="0.006268024444580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;3]" time="0.0071277618408203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;4]" time="0.0075151920318603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;5]" time="0.004700899124145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;6]" time="0.004366159439086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;7]" time="0.007039070129394531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;8]" time="0.025141239166259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;9]" time="0.04763221740722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;10]" time="0.009585142135620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;11]" time="0.011020898818969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;12]" time="0.009789705276489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;13]" time="0.007823944091796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;14]" time="0.009724855422973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;15]" time="0.013601303100585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;16]" time="0.016125202178955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;17]" time="0.011342048645019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;18]" time="0.0104827880859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;19]" time="0.01834845542907715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;20]" time="0.049483537673950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;21]" time="0.10277295112609863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;22]" time="0.0059185028076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;23]" time="0.00483393669128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;24]" time="0.021425724029541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;25]" time="0.4314291477203369"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;26]" time="1.0115201473236084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;0]" time="0.006417274475097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;1]" time="0.005536556243896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;2]" time="0.006559848785400391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;3]" time="0.007571220397949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;4]" time="0.007853269577026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;5]" time="0.004725217819213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;6]" time="0.00467991828918457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;7]" time="0.007326364517211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;8]" time="0.02596759796142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;9]" time="0.048590898513793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;10]" time="0.009109020233154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;11]" time="0.010596990585327148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;12]" time="0.009320974349975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;13]" time="0.008161306381225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;14]" time="0.00986623764038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;15]" time="0.013449668884277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;16]" time="0.016021728515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;17]" time="0.011865615844726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;18]" time="0.011296987533569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;19]" time="0.020850181579589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;20]" time="0.053377628326416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;21]" time="0.11414527893066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;22]" time="0.005983829498291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;23]" time="0.004978179931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;24]" time="0.018984079360961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;25]" time="0.3881525993347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;26]" time="0.8999629020690918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;0]" time="0.007915735244750977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;1]" time="0.005495309829711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;2]" time="0.006542682647705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;3]" time="0.007645130157470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;4]" time="0.008245706558227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;5]" time="0.0046939849853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;6]" time="0.004557371139526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;7]" time="0.007160186767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;8]" time="0.026656627655029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;9]" time="0.050406694412231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;10]" time="0.008987188339233398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;11]" time="0.009664058685302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;12]" time="0.00948333740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;13]" time="0.007928609848022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;14]" time="0.009633779525756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;15]" time="0.013360977172851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;16]" time="0.016077280044555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;17]" time="0.011419057846069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;18]" time="0.010346412658691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;19]" time="0.021120786666870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;20]" time="0.060494422912597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;21]" time="0.10797595977783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;22]" time="0.005646467208862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;23]" time="0.0047686100006103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;24]" time="0.018657922744750977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;25]" time="0.4027838706970215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;26]" time="0.9342207908630371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;0]" time="0.0064733028411865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;1]" time="0.005464076995849609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;2]" time="0.006592988967895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;3]" time="0.007784843444824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;4]" time="0.007740974426269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;5]" time="0.004522085189819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;6]" time="0.0043604373931884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;7]" time="0.0072171688079833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;8]" time="0.026090383529663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;9]" time="0.04880547523498535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;10]" time="0.009140253067016602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;11]" time="0.010865449905395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;12]" time="0.010775327682495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;13]" time="0.009033679962158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;14]" time="0.009977102279663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;15]" time="0.013745784759521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;16]" time="0.016091108322143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;17]" time="0.011351823806762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;18]" time="0.010255098342895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;19]" time="0.020615816116333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;20]" time="0.054006099700927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;21]" time="0.10970950126647949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;22]" time="0.006108999252319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;23]" time="0.004938602447509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;24]" time="0.018589019775390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;25]" time="0.40456199645996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;26]" time="0.9302682876586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;0]" time="0.006270885467529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;1]" time="0.005422353744506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;2]" time="0.006282329559326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;3]" time="0.0074269771575927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;4]" time="0.007539987564086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;5]" time="0.004748344421386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;6]" time="0.0045855045318603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;7]" time="0.007329463958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;8]" time="0.027179479598999023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;9]" time="0.051070213317871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;10]" time="0.008946657180786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;11]" time="0.010092973709106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;12]" time="0.009565353393554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;13]" time="0.00784754753112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;14]" time="0.009748220443725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;15]" time="0.013870477676391602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;16]" time="0.016210556030273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;17]" time="0.011774539947509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;18]" time="0.010384321212768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;19]" time="0.021596193313598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;20]" time="0.05882716178894043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;21]" time="0.11017322540283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;22]" time="0.005725383758544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;23]" time="0.004751443862915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;24]" time="0.018309593200683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;25]" time="0.38476991653442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;26]" time="0.8937404155731201"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;0]" time="0.006398439407348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;1]" time="0.005224466323852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;2]" time="0.006403446197509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;3]" time="0.007245063781738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;4]" time="0.0075685977935791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;5]" time="0.004678964614868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;6]" time="0.0045664310455322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;7]" time="0.007379055023193359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;8]" time="0.02679896354675293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;9]" time="0.05058884620666504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;10]" time="0.008987188339233398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;11]" time="0.009964227676391602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;12]" time="0.009817838668823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;13]" time="0.008011341094970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;14]" time="0.009905815124511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;15]" time="0.013809919357299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;16]" time="0.016150236129760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;17]" time="0.012150287628173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;18]" time="0.011809587478637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;19]" time="0.022240638732910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;20]" time="0.056934356689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;21]" time="0.11833715438842773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;22]" time="0.005789756774902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;23]" time="0.005041599273681641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;24]" time="0.01997232437133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;25]" time="0.41487550735473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;26]" time="0.9375791549682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;0]" time="0.006442546844482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;1]" time="0.0056531429290771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;2]" time="0.006951093673706055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;3]" time="0.007315158843994141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;4]" time="0.007468223571777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;5]" time="0.004976987838745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;6]" time="0.004550933837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;7]" time="0.007078647613525391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;8]" time="0.02643299102783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;9]" time="0.05088043212890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;10]" time="0.00954890251159668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;11]" time="0.010774374008178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;12]" time="0.009685516357421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;13]" time="0.007914304733276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;14]" time="0.010025501251220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;15]" time="0.013760805130004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;16]" time="0.01598215103149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;17]" time="0.011789321899414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;18]" time="0.010464191436767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;19]" time="0.021463871002197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;20]" time="0.05699944496154785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;21]" time="0.11705636978149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;22]" time="0.006089687347412109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;23]" time="0.004893064498901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;24]" time="0.01970505714416504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;25]" time="0.4169793128967285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;26]" time="0.9454500675201416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;0]" time="0.005156040191650391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;1]" time="0.00566411018371582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;2]" time="0.00672459602355957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;3]" time="0.007850170135498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;4]" time="0.006155967712402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;5]" time="0.0041692256927490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;6]" time="0.004486560821533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;7]" time="0.006898164749145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;8]" time="0.02272319793701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;9]" time="0.026244401931762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;10]" time="0.009407997131347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;11]" time="0.009869813919067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;12]" time="0.007477283477783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;13]" time="0.008094549179077148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;14]" time="0.010533809661865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;15]" time="0.014197111129760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;16]" time="0.016734838485717773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;17]" time="0.023331880569458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;18]" time="0.023151636123657227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;19]" time="0.05161333084106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;20]" time="0.06514382362365723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;21]" time="0.12513494491577148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;22]" time="0.005745649337768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;23]" time="0.0055637359619140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;24]" time="0.022091388702392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;25]" time="0.412003755569458"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;26]" time="0.8650951385498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;0]" time="0.005404949188232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;1]" time="0.005644559860229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;2]" time="0.006797313690185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;3]" time="0.007752180099487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;4]" time="0.006181478500366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;5]" time="0.0039594173431396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;6]" time="0.004796266555786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;7]" time="0.006998538970947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;8]" time="0.02344059944152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;9]" time="0.026169776916503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;10]" time="0.009531021118164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;11]" time="0.011395454406738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;12]" time="0.009527444839477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;13]" time="0.009826183319091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;14]" time="0.01230478286743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;15]" time="0.015482187271118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;16]" time="0.0166628360748291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;17]" time="0.02323293685913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;18]" time="0.023345470428466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;19]" time="0.051276445388793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;20]" time="0.06530213356018066"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;21]" time="0.1227424144744873"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;22]" time="0.005702495574951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;23]" time="0.005464315414428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;24]" time="0.02278614044189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;25]" time="0.4375033378601074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;26]" time="0.8768537044525146"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;0]" time="0.00536036491394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;1]" time="0.005864143371582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;2]" time="0.006739139556884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;3]" time="0.007747173309326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;4]" time="0.0066339969635009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;5]" time="0.003961801528930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;6]" time="0.004728078842163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;7]" time="0.006880044937133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;8]" time="0.023677825927734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;9]" time="0.026215553283691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;10]" time="0.009499549865722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;11]" time="0.010888814926147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;12]" time="0.008038520812988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;13]" time="0.008138656616210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;14]" time="0.010241985321044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;15]" time="0.0157623291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;16]" time="0.016931772232055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;17]" time="0.022863388061523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;18]" time="0.02374100685119629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;19]" time="0.052373409271240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;20]" time="0.06669473648071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;21]" time="0.12510943412780762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;22]" time="0.0056383609771728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;23]" time="0.005537271499633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;24]" time="0.021009445190429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;25]" time="0.4333364963531494"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;26]" time="0.8739206790924072"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;0]" time="0.0027937889099121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;1]" time="0.011608362197875977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;2]" time="0.01274418830871582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;3]" time="0.01572561264038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;4]" time="0.0039250850677490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;5]" time="0.0017478466033935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;6]" time="0.009518623352050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;7]" time="0.014590740203857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;8]" time="0.06144380569458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;9]" time="0.015516042709350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;10]" time="0.03180360794067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;11]" time="0.03732609748840332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;12]" time="0.0040073394775390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;13]" time="0.03173971176147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;14]" time="0.03704476356506348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;15]" time="0.04664349555969238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;16]" time="0.054222822189331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;17]" time="0.05580639839172363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;18]" time="0.05647468566894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;19]" time="0.12816929817199707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;20]" time="0.5653829574584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;21]" time="1.2324445247650146"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;22]" time="0.0026788711547851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;23]" time="0.012076854705810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;24]" time="0.11693596839904785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;25]" time="3.2697088718414307"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;26]" time="0.7612671852111816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;0]" time="0.002834796905517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;1]" time="0.011526346206665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;2]" time="0.012956380844116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;3]" time="0.016047000885009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;4]" time="0.004228353500366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;5]" time="0.0017724037170410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;6]" time="0.009435415267944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;7]" time="0.014477968215942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;8]" time="0.06298518180847168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;9]" time="0.0157015323638916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;10]" time="0.03161931037902832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;11]" time="0.0375368595123291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;12]" time="0.004055023193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;13]" time="0.03110957145690918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;14]" time="0.03680920600891113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;15]" time="0.046660661697387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;16]" time="0.053701162338256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;17]" time="0.056833505630493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;18]" time="0.05785727500915527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;19]" time="0.12871384620666504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;20]" time="0.5709400177001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;21]" time="1.222059965133667"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;22]" time="0.0027217864990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;23]" time="0.011776447296142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;24]" time="0.12042570114135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;25]" time="3.2582552433013916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;26]" time="0.7660722732543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;0]" time="0.002966165542602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;1]" time="0.01157832145690918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;2]" time="0.013285398483276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;3]" time="0.015810012817382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;4]" time="0.003231525421142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;5]" time="0.0018641948699951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;6]" time="0.009402036666870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;7]" time="0.019568920135498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;8]" time="0.06091713905334473"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;9]" time="0.015717506408691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;10]" time="0.032405853271484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;11]" time="0.03690147399902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;12]" time="0.0041201114654541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;13]" time="0.03218889236450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;14]" time="0.03655886650085449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;15]" time="0.046761274337768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;16]" time="0.054718017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;17]" time="0.056439876556396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;18]" time="0.05740690231323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;19]" time="0.12864303588867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;20]" time="0.5540618896484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;21]" time="1.2121000289916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;22]" time="0.002721548080444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;23]" time="0.011618852615356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;24]" time="0.11576437950134277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;25]" time="3.2438299655914307"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;26]" time="0.7535481452941895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;0]" time="0.0041391849517822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;1]" time="0.002984762191772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;2]" time="0.0033752918243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;3]" time="0.003774881362915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;4]" time="0.004409074783325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;5]" time="0.00276947021484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;6]" time="0.002763032913208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;7]" time="0.0033185482025146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;8]" time="0.003957271575927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;9]" time="0.005078792572021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;10]" time="0.004416465759277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;11]" time="0.0051271915435791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;12]" time="0.004984140396118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;13]" time="0.004608631134033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;14]" time="0.00513148307800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;15]" time="0.0069828033447265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;16]" time="0.00856781005859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;17]" time="0.008590221405029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;18]" time="0.008287668228149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;19]" time="0.014168024063110352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;20]" time="0.015707731246948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;21]" time="0.02716374397277832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;22]" time="0.004131793975830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;23]" time="0.003167867660522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;24]" time="0.005008697509765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;25]" time="0.02705073356628418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;26]" time="0.058405160903930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;0]" time="0.003949880599975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;1]" time="0.0029473304748535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;2]" time="0.0034360885620117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;3]" time="0.0038475990295410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;4]" time="0.004338502883911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;5]" time="0.0028276443481445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;6]" time="0.0027883052825927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;7]" time="0.003336668014526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;8]" time="0.0040934085845947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;9]" time="0.005284547805786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;10]" time="0.0044634342193603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;11]" time="0.005202054977416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;12]" time="0.005090236663818359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;13]" time="0.0045702457427978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;14]" time="0.0051670074462890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;15]" time="0.007094144821166992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;16]" time="0.008885622024536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;17]" time="0.008796453475952148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;18]" time="0.008471012115478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;19]" time="0.014509439468383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;20]" time="0.016217947006225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;21]" time="0.027169227600097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;22]" time="0.0039055347442626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;23]" time="0.0032041072845458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;24]" time="0.006622791290283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;25]" time="0.029607057571411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;26]" time="0.06093883514404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;0]" time="0.004166364669799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;1]" time="0.0028989315032958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;2]" time="0.003428220748901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;3]" time="0.0038399696350097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;4]" time="0.0044460296630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;5]" time="0.0028214454650878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;6]" time="0.0028128623962402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;7]" time="0.0034410953521728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;8]" time="0.00417327880859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;9]" time="0.005388975143432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;10]" time="0.004311561584472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;11]" time="0.005351543426513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;12]" time="0.00513148307800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;13]" time="0.004780292510986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;14]" time="0.005264759063720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;15]" time="0.007131099700927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;16]" time="0.008800745010375977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;17]" time="0.008706808090209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;18]" time="0.008512020111083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;19]" time="0.014160394668579102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;20]" time="0.015624523162841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;21]" time="0.02734661102294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;22]" time="0.00419306755065918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;23]" time="0.0032787322998046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;24]" time="0.00617218017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;25]" time="0.029991865158081055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;26]" time="0.0603632926940918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;0]" time="0.0016868114471435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;1]" time="0.0026748180389404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;2]" time="0.005968332290649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;3]" time="0.03026580810546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;4]" time="0.0016241073608398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;5]" time="0.0013120174407958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;6]" time="0.0022258758544921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;7]" time="0.0059430599212646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;8]" time="0.03225255012512207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;9]" time="0.002270221710205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;10]" time="0.004215240478515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;11]" time="0.01372385025024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;12]" time="0.0013251304626464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;13]" time="0.009465694427490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;14]" time="0.0125885009765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;15]" time="0.06011843681335449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;16]" time="0.1276397705078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;17]" time="0.009220123291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;18]" time="0.009246349334716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;19]" time="0.028186798095703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;20]" time="0.09735822677612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;21]" time="0.2084805965423584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;22]" time="0.0017199516296386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;23]" time="0.0024929046630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;24]" time="0.008905887603759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;25]" time="0.06771969795227051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;26]" time="0.05575418472290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;0]" time="0.0017039775848388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;1]" time="0.002605915069580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;2]" time="0.0060269832611083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;3]" time="0.030727386474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;4]" time="0.0017669200897216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;5]" time="0.001371622085571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;6]" time="0.002240896224975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;7]" time="0.005979776382446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;8]" time="0.033364295959472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;9]" time="0.003032207489013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;10]" time="0.004340410232543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;11]" time="0.014458656311035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;12]" time="0.002056121826171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;13]" time="0.009804725646972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;14]" time="0.01319432258605957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;15]" time="0.06303882598876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;16]" time="0.13068771362304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;17]" time="0.00889730453491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;18]" time="0.008955240249633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;19]" time="0.02967238426208496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;20]" time="0.09826350212097168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;21]" time="0.20487308502197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;22]" time="0.001984834671020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;23]" time="0.002590656280517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;24]" time="0.011017084121704102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;25]" time="0.09122705459594727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;26]" time="0.054663896560668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;0]" time="0.001718759536743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;1]" time="0.0026102066040039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;2]" time="0.006082057952880859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;3]" time="0.030190706253051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;4]" time="0.00174713134765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;5]" time="0.0014472007751464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;6]" time="0.0023202896118164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;7]" time="0.0062558650970458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;8]" time="0.03292250633239746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;9]" time="0.0029206275939941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;10]" time="0.004342079162597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;11]" time="0.01406240463256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;12]" time="0.0020096302032470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;13]" time="0.010169744491577148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;14]" time="0.013133764266967773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;15]" time="0.06256246566772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;16]" time="0.12846112251281738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;17]" time="0.009370565414428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;18]" time="0.008730649948120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;19]" time="0.027787446975708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;20]" time="0.09758543968200684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;21]" time="0.20406055450439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;22]" time="0.0017559528350830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;23]" time="0.0025124549865722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;24]" time="0.010377645492553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;25]" time="0.09083342552185059"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;26]" time="0.05471944808959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;0]" time="0.0028617382049560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;1]" time="0.0023453235626220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;2]" time="0.0028007030487060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;3]" time="0.0045163631439208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;4]" time="0.009673118591308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;5]" time="0.0023293495178222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;6]" time="0.0023016929626464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;7]" time="0.015183687210083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;8]" time="0.26129817962646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;9]" time="1.3476665019989014"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;10]" time="0.004662752151489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;11]" time="0.0047643184661865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;12]" time="0.004258871078491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;13]" time="0.003656625747680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;14]" time="0.004549264907836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;15]" time="0.00782465934753418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;16]" time="0.011249303817749023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;17]" time="0.0029213428497314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;18]" time="0.0029382705688476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;19]" time="0.0185239315032959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;20]" time="0.22974061965942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;21]" time="1.252790927886963"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;22]" time="0.002967357635498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;23]" time="0.002226591110229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;24]" time="0.010272502899169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;25]" time="0.16838502883911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;26]" time="0.8202002048492432"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;0]" time="0.0036513805389404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;1]" time="0.0024907588958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;2]" time="0.002863645553588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;3]" time="0.00419926643371582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;4]" time="0.00467681884765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;5]" time="0.0023193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;6]" time="0.002446889877319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;7]" time="0.017989158630371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;8]" time="0.261793851852417"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;9]" time="1.354935884475708"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;10]" time="0.004862070083618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;11]" time="0.004843235015869141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;12]" time="0.004401445388793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;13]" time="0.0036411285400390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;14]" time="0.004847288131713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;15]" time="0.007802009582519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;16]" time="0.011466503143310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;17]" time="0.0029134750366210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;18]" time="0.0028486251831054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;19]" time="0.018717050552368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;20]" time="0.23130297660827637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;21]" time="1.2506194114685059"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;22]" time="0.003005504608154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;23]" time="0.0022454261779785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;24]" time="0.010293006896972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;25]" time="0.16759777069091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;26]" time="0.810992956161499"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;0]" time="0.0033817291259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;1]" time="0.002379894256591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;2]" time="0.0028121471405029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;3]" time="0.003972530364990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;4]" time="0.004800319671630859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;5]" time="0.00223541259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;6]" time="0.0021774768829345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;7]" time="0.01549386978149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;8]" time="0.25908803939819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;9]" time="1.34859299659729"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;10]" time="0.004717111587524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;11]" time="0.004754543304443359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;12]" time="0.004468441009521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;13]" time="0.003713846206665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;14]" time="0.004881620407104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;15]" time="0.007764577865600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;16]" time="0.011419057846069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;17]" time="0.0028510093688964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;18]" time="0.002920389175415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;19]" time="0.01867818832397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;20]" time="0.23175835609436035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;21]" time="1.2250194549560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;22]" time="0.002559661865234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;23]" time="0.002382040023803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;24]" time="0.01089620590209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;25]" time="0.16721796989440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;26]" time="0.7934296131134033"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0017552375793457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.001516103744506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0014660358428955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0015513896942138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0016207695007324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.001363992691040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0013523101806640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0013544559478759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0016396045684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.00469660758972168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.008740425109863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0016715526580810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0017299652099609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.00177764892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.00176239013671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.002104520797729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.002855062484741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0022802352905273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.002096891403198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002070903778076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.028205394744873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.017370939254760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.05360817909240723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0036208629608154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0014312267303466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.002715587615966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.024850845336914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.1240987777709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.3213624954223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.009875059127807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0015473365783691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0014996528625488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0014486312866210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0015614032745361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0014333724975585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0013337135314941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0012753009796142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.001302957534790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0016632080078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.004665851593017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.00899052619934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0017061233520507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0017807483673095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0019538402557373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0017864704132080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0022470951080322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0027382373809814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0023910999298095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0020341873168945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0021414756774902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.025747299194335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.01720571517944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.05004715919494629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.003358602523803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0012667179107666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.002337932586669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.025018692016601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.12064790725708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.32681798934936523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.009800910949707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0014979839324951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0014295578002929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0014412403106689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0015430450439453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0013952255249023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0013632774353027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0012638568878173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0013356208801269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0016942024230957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.004608154296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.009153127670288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.001752614974975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0018053054809570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0019540786743164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0017962455749511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.002165079116821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0024566650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0022857189178466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.002048969268798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002126455307006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025310516357421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.01709461212158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.05073118209838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0034034252166748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0012559890747070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.002357959747314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.0244448184967041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.12083911895751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.3253960609436035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.011182546615600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0022935867309570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0016376972198486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0016527175903320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0018143653869628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.001653432846069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0015709400177001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0016436576843261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0014781951904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0018343925476074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.005028486251831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.009408235549926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0018506050109863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.001989126205444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0020296573638916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.002079486846923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002296924591064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.002646207809448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0024259090423583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.002221345901489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0022728443145751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.02653026580810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.01918816566467285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.05338144302368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.004100799560546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0013740062713623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0025968551635742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.02488994598388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.12394475936889648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.327451229095459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.010388612747192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0016372203826904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0015077590942382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0014710426330566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0016281604766845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0015125274658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.001399993896484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0013604164123535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0013806819915771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0017590522766113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.1864469051361084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.01096796989440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.002123594284057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0018839836120605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0021262168884277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0020935535430908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002363443374633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.002693653106689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0025594234466552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.002151012420654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0022592544555664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.026653051376342773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.018837451934814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.05211639404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.003952741622924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.001481771469116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.002519845962524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.0250399112701416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.12361955642700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.33015871047973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.010545492172241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0022559165954589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0016274452209472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0018167495727539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0017132759094238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0016412734985351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0014529228210449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0014910697937011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0014600753784179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0018310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.00500941276550293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.009703874588012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0018246173858642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0018742084503173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002102375030517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0018737316131591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0023300647735595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.002526521682739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0023910999298095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0021543502807617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0022826194763183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.026215791702270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.018717050552368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.0526123046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.004109382629394531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0015187263488769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.002670764923095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.02522587776184082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.12461066246032715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.33026576042175293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.010937690734863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.002231121063232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.001659393310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0016636848449707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0016901493072509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0016937255859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.001500844955444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0014030933380126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.001416921615600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0018017292022705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.004984140396118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.009490251541137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.001837015151977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0019245147705078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0020122528076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0019948482513427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0026755332946777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0027048587799072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0024976730346679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0022313594818115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0024220943450927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.026551246643066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.019136905670166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.05343151092529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.004304647445678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0015382766723632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0027399063110351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.024790287017822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.1244192123413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.329683780670166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010675907135009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0016591548919677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0015664100646972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0015516281127929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0016231536865234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0015316009521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0014903545379638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0014047622680664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0013856887817382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0017971992492675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.004934072494506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.0094451904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0017817020416259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.001882791519165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.002113819122314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0019426345825195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.002368450164794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.002630949020385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.00312042236328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0022547245025634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002201557159423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.02605271339416504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.018616914749145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.05260777473449707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.004196882247924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.001486063003540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0027222633361816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.025593996047973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.12453389167785645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.33577990531921387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.010818719863891602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0017879009246826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0016925334930419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0015513896942138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0017163753509521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0017337799072265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0014765262603759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.00145721435546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0014710426330566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.001857757568359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.005017518997192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.010016679763793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0025403499603271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0019249916076660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.002140045166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0019588470458984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0024652481079101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.002627134323120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002396821975708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0022230148315429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.002313375473022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.02646470069885254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.018790006637573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.05319547653198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.0040569305419921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0014870166778564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.002693653106689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.02444601058959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.12482213973999023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.327315092086792"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.01035165786743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0015811920166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0014986991882324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0013833045959472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0014700889587402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0013527870178222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0013239383697509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0013260841369628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0012972354888916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0016202926635742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.003283977508544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.0058062076568603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0015482902526855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0016052722930908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0016505718231201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0016980171203613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0020971298217773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0022804737091064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0019555091857910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0020399093627929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002098560333251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.025510072708129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.016217470169067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.045934200286865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0037152767181396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0013337135314941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.002426624298095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.023839712142944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07702374458312988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.2196493148803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.008244037628173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.002142667770385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0015358924865722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0014400482177734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0015649795532226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0016646385192871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0014314651489257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0013484954833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0013623237609863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0017001628875732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.003292560577392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.006312370300292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0016961097717285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0016965866088867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0018618106842041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0017447471618652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.002050161361694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0022089481353759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002185344696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0020754337310791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0020513534545898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.025157690048217773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.015840768814086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.045275211334228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0038743019104003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0013704299926757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0025169849395751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.023629426956176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.076263427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.21570539474487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.007937192916870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0016627311706542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0015115737915039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0014238357543945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.001844644546508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.001512765884399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0014674663543701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0013937950134277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.001375436782836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0017170906066894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0033354759216308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.006337404251098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0016210079193115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0016989707946777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0017392635345458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0016880035400390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0019507408142089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.002176046371459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0020072460174560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0020110607147216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0020313262939453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025231599807739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.01578545570373535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.04504799842834473"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.003717184066772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0013318061828613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.002454519271850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.02358531951904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07623624801635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.2163691520690918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.007844924926757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0014896392822265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.001528024673461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.001476287841796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.001750946044921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0015718936920166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0014376640319824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0013689994812011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0013439655303955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0015859603881835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.003687620162963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.006254434585571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.001630544662475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.001691579818725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0018131732940673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.001800537109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0021436214447021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0022590160369873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.002175569534301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.002073049545288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002115964889526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.025838613510131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.01645684242248535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.04650378227233887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.003663301467895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0013480186462402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.002469301223754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.024657249450683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09911966323852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.2681291103363037"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.009079694747924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.002056598663330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0014998912811279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0014128684997558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0015785694122314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.001508951187133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.001348733901977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0013115406036376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0012814998626708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0017313957214355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0036165714263916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.006604671478271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0016112327575683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0017189979553222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0018723011016845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.001743316650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002044200897216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0023353099822998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.002143383026123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0020294189453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0020596981048583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.02532052993774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.016461610794067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.046555280685424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.003761768341064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0013349056243896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0024008750915527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.023886919021606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.09902811050415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.2682061195373535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.008876562118530273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0016546249389648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.001466989517211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.001409292221069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0015437602996826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0013973712921142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0013461112976074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0012760162353515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0013387203216552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.001737356185913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.003625154495239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.006936311721801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0016584396362304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0017614364624023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0019237995147705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0017807483673095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002062559127807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0023064613342285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0020837783813476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.00200653076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.001978158950805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.02527475357055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.016645431518554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.04679751396179199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0036220550537109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0013415813446044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0024886131286621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.023958444595336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.09809613227844238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.2742464542388916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.009418487548828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0025823116302490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0015180110931396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0015156269073486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.001623392105102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0014507770538330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0014178752899169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0013773441314697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.001348733901977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0016508102416992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.003566265106201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.006281614303588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0016016960144042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0016796588897705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0018153190612792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0016634464263916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0019404888153076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0022504329681396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.002042531967163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002011537551879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0021088123321533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.025685787200927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.01661515235900879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.046891212463378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.003662586212158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0013642311096191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002402782440185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.023973464965820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.09832477569580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.2681722640991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.00937032699584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0020978450775146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0017056465148925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0015273094177246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.001596212387084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.001500844955444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0013437271118164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0012907981872558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0013201236724853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0017008781433105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.0035889148712158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.007079124450683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.001651763916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0017325878143310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.001974344253540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0018401145935058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.002196788787841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.002523660659790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.002218008041381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0022020339965820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002168416976928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.025269508361816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.01720118522644043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.04722261428833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.003824472427368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0014235973358154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0024526119232177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.024373292922973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.09960150718688965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.26862239837646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.009035348892211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0021131038665771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0016226768493652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0015597343444824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0016639232635498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0015342235565185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0014352798461914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0013232231140136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0013587474822998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0018496513366699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.003719806671142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.0066683292388916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0016410350799560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0019104480743408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0018658638000488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.001684427261352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.001926422119140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0021905899047851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002040863037109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0020110607147216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0020418167114257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.025259017944335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.016555070877075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.04712343215942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.003838062286376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0015115737915039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0024368762969970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.023521900177001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.09826993942260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.267348051071167"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.009409666061401367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.002104520797729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0016515254974365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0015654563903808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0017349720001220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0015561580657958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.001445770263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0013797283172607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0013790130615234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.001766204833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.008761405944824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.00921320915222168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.002349376678466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.002130270004272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.002103090286254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0019135475158691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0023336410522460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0025284290313720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0026102066040039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0021347999572753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0022957324981689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.02649378776550293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.018460988998413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.05299186706542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.004000186920166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0014481544494628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0025396347045898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.025301456451416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.12435412406921387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.3232605457305908"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.010886669158935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0020401477813720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.002075672149658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0016663074493408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0017387866973876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0015769004821777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0015592575073242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0014600753784179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0014767646789550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.002007722854614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.004895687103271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.009314537048339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0018916130065917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0018765926361083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0021255016326904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.002140045166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0023992061614990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0026204586029052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002491474151611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002162456512451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0021631717681884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.02605152130126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.01934647560119629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.0578465461730957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.00403594970703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0014655590057373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.002546072006225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.024880409240722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.12220096588134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.325183629989624"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.010797262191772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0021715164184570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0016765594482421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0015943050384521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0018777847290039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0015659332275390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0014393329620361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0014295578002929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0014634132385253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0018854141235351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.004778861999511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.009397506713867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0017478466033935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0018744468688964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.002081632614135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.00188446044921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0023806095123291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.002601146697998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.002416849136352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.00214385986328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0022084712982177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025606632232666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.018556833267211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.05189633369445801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.003831148147583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0014417171478271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0024709701538085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.024486780166625977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.12332606315612793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.333341121673584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.010617494583129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.002173900604248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0015895366668701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.001596212387084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0017354488372802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0016093254089355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0014524459838867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0014181137084960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.001413106918334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0018458366394042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.005267620086669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.009372234344482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0018870830535888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.001959562301635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0021381378173828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0019783973693847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0023865699768066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.002660036087036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0024449825286865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0021483898162841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0023012161254882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.026204347610473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.01898360252380371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.05278944969177246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.004097700119018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0014841556549072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.002567768096923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.024585247039794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.1234433650970459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.32296037673950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.01067495346069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.002237081527709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0016789436340332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0016040802001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0017323493957519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.001581430435180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.001453399658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0013968944549560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0014107227325439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0018880367279052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.004935264587402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.00973057746887207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.001775503158569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0018854141235351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0020656585693359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.002061128616333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0023889541625976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0026171207427978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0024514198303222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0021491050720214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002186298370361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.026080608367919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.018947601318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.05220985412597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.004378795623779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0014109611511230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.002480030059814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.025173425674438477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.12407922744750977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.32691049575805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.010879278182983398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0021293163299560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.001664876937866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0016868114471435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0017387866973876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0015344619750976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0016841888427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0013835430145263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0014421939849853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0018582344055175781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.00480198860168457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.009639263153076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.002454519271850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.001901388168334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002005338668823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0018768310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.00244140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0026350021362304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.002477884292602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0021152496337890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002198934555053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.025482177734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.018569231033325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.05140829086303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.003927469253540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0014660358428955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.002482891082763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.02495718002319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.12436509132385254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.3336219787597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.010367393493652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.001720428466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0015950202941894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0016682147979736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.001743316650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0015501976013183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.001489877700805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0014927387237548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0015485286712646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0017650127410888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0047795772552490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.009056806564331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.001705169677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.001901865005493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0020515918731689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0019321441650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.002288341522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0024907588958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.00237274169921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002073526382446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.002182483673095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.02617931365966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.018852710723876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.052346229553222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.004198312759399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0014917850494384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002559661865234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.025672435760498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.12304806709289551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.3246135711669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010271549224853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.002182483673095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0015707015991210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0015277862548828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0016896724700927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0015406608581542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.001443624496459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0013561248779296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0013682842254638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0018656253814697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.00510859489440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.009540081024169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0019114017486572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0019316673278808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0022902488708496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0020029544830322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0025177001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.002669095993041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0025124549865722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0021638870239257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0022268295288085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.026189804077148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.01879143714904785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.05168032646179199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.004170656204223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.001470327377319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0025594234466552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.025213003158569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.12322545051574707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.3270905017852783"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.010315895080566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0016126632690429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0015358924865722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.001682281494140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.001638174057006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0015299320220947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0013866424560546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0014050006866455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0014224052429199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0018455982208251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.004827022552490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.009522199630737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0018177032470703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0018756389617919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0020987987518310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0020246505737304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0024929046630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0025730133056640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002495288848876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.002161741256713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0022211074829101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.025684356689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.01875019073486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.05206298828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.004067182540893555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0014371871948242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.002514362335205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.02523517608642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.12301492691040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.32852888107299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.010110616683959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.001905202865600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0014348030090332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0013916492462158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0014624595642089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0013136863708496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0012362003326416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0012161731719970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0012595653533935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0014972686767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0031976699829101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.005831480026245117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.001462697982788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.001566171646118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0016679763793945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0016582012176513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.001850128173828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.002073049545288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0019154548645019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.001932382583618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.001978635787963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.02496051788330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.0161285400390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04480290412902832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0035398006439208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0012607574462890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.002404451370239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.023348093032836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07651972770690918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.21538662910461426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.007432222366333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0019156932830810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0015592575073242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0014007091522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0015728473663330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0013027191162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0013124942779541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0012447834014892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0012493133544921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0016145706176757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0032453536987304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.0060198307037353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.001491546630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0015954971313476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0017240047454833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.001687765121459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0019483566284179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0023016929626464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.001964569091796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.001979827880859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0019702911376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.02509617805480957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.015718936920166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.045537710189819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0037288665771484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0012516975402832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0023491382598876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.024072647094726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07754278182983398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.22461318969726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.008238077163696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0016291141510009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0015459060668945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.001661539077758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0016074180603027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0014803409576416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0013844966888427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0013172626495361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0013720989227294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0017383098602294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.003496408462524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.006484270095825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0016782283782958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0018186569213867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0018463134765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0017271041870117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.001941680908203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0024025440216064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0022711753845214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0022568702697753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0022199153900146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.027756929397583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.016711711883544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.04854083061218262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0036292076110839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0013473033905029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0029630661010742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.024654626846313477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07918381690979004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.22208642959594727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.007844924926757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0016889572143554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0014781951904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0014369487762451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0015573501586914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.001453399658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0013194084167480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0013301372528076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0013115406036376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0017287731170654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.003710031509399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.006556510925292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0017991065979003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0018362998962402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.002071857452392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.001983165740966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002244710922241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0024671554565429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0022063255310058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0022203922271728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0021767616271972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.02762126922607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.01733255386352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.05066275596618652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.003962993621826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.001447439193725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0029435157775878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.024118661880493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.10158443450927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.26569509506225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.00767064094543457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0014331340789794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.001359701156616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0013532638549804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0014309883117675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0012631416320800781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0012204647064208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0011398792266845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0011692047119140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0015037059783935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0034079551696777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.006383657455444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.001420736312866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0016217231750488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0017054080963134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0016546249389648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0019299983978271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.002142190933227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0019681453704833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.001970529556274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002094268798828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.025122642517089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.014727115631103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.04504823684692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.003139019012451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0012621879577636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0023641586303710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.023488998413085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.09870028495788574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.2671947479248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.009209632873535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0021173954010009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0015637874603271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0014946460723876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0015604496002197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0014276504516601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.001463174819946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.001302480697631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.001310110092163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0016243457794189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0036940574645996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.006921291351318359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0015871524810791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0018219947814941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002086162567138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0018756389617919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0020961761474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0022482872009277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.002082347869873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0020890235900878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002199411392211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.02567005157470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.016801834106445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.04712057113647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0036525726318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.001397848129272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.002454042434692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.024219751358032227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.09762787818908691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.266279935836792"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.008880615234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0020444393157958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0015234947204589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0013797283172607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0015501976013183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0013628005981445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.00136566162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0012671947479248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.001332998275756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0016052722930908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.003656148910522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.006685018539428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0016498565673828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0017080307006835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0017917156219482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0017390251159667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0019495487213134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0021729469299316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0021691322326660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0021448135375976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0021698474884033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.025310754776000977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.016974449157714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.0465700626373291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.003550291061401367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0013308525085449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002349376678466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.023968219757080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.09928464889526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.26705336570739746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.008810758590698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.00200653076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0014750957489013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0014698505401611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0015561580657958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0014107227325439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0013866424560546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0012996196746826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.006222248077392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0017828941345214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.003635406494140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.006502866744995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0014491081237792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.001695871353149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0017592906951904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0016396045684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.002002239227294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0022110939025878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.002149343490600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0019702911376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002077817916870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.025429964065551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.016675710678100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.046897172927856445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.0036144256591796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0013494491577148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002499818801879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.024278879165649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.0981600284576416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.26840996742248535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.009070634841918945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0021276473999023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0015406608581542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0015108585357666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0016834735870361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0014047622680664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0013015270233154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0013058185577392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0012578964233398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0016138553619384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.003596067428588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.006830692291259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.001523733139038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0017778873443603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0017881393432617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0017428398132324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.002026796340942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0022606849670410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0021240711212158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0019884109497070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0020334720611572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.025154590606689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.01675248146057129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.04670071601867676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.0037839412689208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0013325214385986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0026314258575439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.02387213706970215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.10005879402160645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.26834702491760254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.008532524108886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;0]" time="0.0018546581268310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;1]" time="0.0015625953674316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;2]" time="0.0013909339904785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;3]" time="0.0014257431030273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;4]" time="0.0013473033905029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;5]" time="0.0012319087982177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;6]" time="0.0012242794036865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;7]" time="0.0013747215270996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;8]" time="0.004435300827026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;9]" time="0.007843732833862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;10]" time="0.001951456069946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;11]" time="0.0017206668853759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;12]" time="0.0016620159149169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;13]" time="0.0015349388122558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;14]" time="0.001650094985961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;15]" time="0.001795053482055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;16]" time="0.0017900466918945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;17]" time="0.0017268657684326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;18]" time="0.0015876293182373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;19]" time="0.003023862838745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;20]" time="0.015331029891967773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;21]" time="0.0343325138092041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;22]" time="0.0018277168273925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;23]" time="0.0012593269348144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;24]" time="0.004926204681396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;25]" time="0.1152961254119873"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;26]" time="0.26886820793151855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;0]" time="0.0020856857299804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;1]" time="0.0014252662658691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;2]" time="0.0013959407806396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;3]" time="0.0014336109161376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;4]" time="0.0013630390167236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;5]" time="0.0012950897216796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;6]" time="0.0012710094451904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;7]" time="0.0013720989227294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;8]" time="0.0045490264892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;9]" time="0.008432149887084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;10]" time="0.0017940998077392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;11]" time="0.0017998218536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;12]" time="0.0018739700317382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;13]" time="0.0016205310821533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;14]" time="0.0018267631530761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;15]" time="0.0021314620971679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;16]" time="0.002002716064453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;17]" time="0.0018944740295410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;18]" time="0.001814126968383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;19]" time="0.0032045841217041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;20]" time="0.015370607376098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;21]" time="0.033341169357299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;22]" time="0.0019588470458984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;23]" time="0.0013713836669921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;24]" time="0.005414009094238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;25]" time="0.11580395698547363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;26]" time="0.271747350692749"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;0]" time="0.0026292800903320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;1]" time="0.0015347003936767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;2]" time="0.0014519691467285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;3]" time="0.0014481544494628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;4]" time="0.001392364501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;5]" time="0.0013473033905029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;6]" time="0.0013289451599121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;7]" time="0.0014553070068359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;8]" time="0.004621982574462891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;9]" time="0.008301496505737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;10]" time="0.0017864704132080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;11]" time="0.001844167709350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;12]" time="0.0018095970153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;13]" time="0.001630544662475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;14]" time="0.0018961429595947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;15]" time="0.002057790756225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;16]" time="0.002071857452392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;17]" time="0.0017752647399902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;18]" time="0.0017175674438476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;19]" time="0.0030863285064697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;20]" time="0.015652894973754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;21]" time="0.033733367919921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;22]" time="0.0018589496612548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;23]" time="0.0014483928680419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;24]" time="0.0053102970123291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;25]" time="0.11660075187683105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;26]" time="0.2708408832550049"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;0]" time="0.002930879592895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;1]" time="0.0020303726196289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;2]" time="0.0020406246185302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;3]" time="0.0023217201232910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;4]" time="0.001975536346435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;5]" time="0.0017039775848388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;6]" time="0.001668691635131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;7]" time="0.002259492874145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;8]" time="0.01521754264831543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;9]" time="0.030867338180541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;10]" time="0.004068613052368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;11]" time="0.003395557403564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;12]" time="0.0032982826232910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;13]" time="0.002640247344970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;14]" time="0.003331899642944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;15]" time="0.00455164909362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;16]" time="0.003993988037109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;17]" time="0.002377748489379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;18]" time="0.0022461414337158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;19]" time="0.004590511322021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;20]" time="0.03716778755187988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;21]" time="0.08774113655090332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;22]" time="0.002502918243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;23]" time="0.001844167709350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;24]" time="0.015524625778198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;25]" time="0.48208189010620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;26]" time="1.1395061016082764"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;0]" time="0.002979278564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;1]" time="0.002100229263305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;2]" time="0.002022981643676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;3]" time="0.0020923614501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;4]" time="0.0018932819366455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;5]" time="0.0016903877258300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;6]" time="0.0016376972198486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;7]" time="0.0021669864654541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;8]" time="0.015433073043823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;9]" time="0.031057357788085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;10]" time="0.003896951675415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;11]" time="0.003488779067993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;12]" time="0.0032541751861572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;13]" time="0.0026574134826660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;14]" time="0.003327608108520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;15]" time="0.004199504852294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;16]" time="0.00396275520324707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;17]" time="0.002326488494873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;18]" time="0.002143383026123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;19]" time="0.004441022872924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;20]" time="0.037107229232788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;21]" time="0.08788013458251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;22]" time="0.002466440200805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;23]" time="0.001760244369506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;24]" time="0.014814138412475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;25]" time="0.4828646183013916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;26]" time="1.1356337070465088"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;0]" time="0.002989053726196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;1]" time="0.002045154571533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;2]" time="0.0020513534545898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;3]" time="0.0021393299102783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;4]" time="0.0019567012786865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;5]" time="0.0017402172088623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;6]" time="0.0017061233520507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;7]" time="0.002306699752807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;8]" time="0.015068292617797852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;9]" time="0.03095865249633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;10]" time="0.00407719612121582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;11]" time="0.003427743911743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;12]" time="0.003371715545654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;13]" time="0.0027163028717041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;14]" time="0.0033271312713623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;15]" time="0.004436492919921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;16]" time="0.003905773162841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;17]" time="0.002427816390991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;18]" time="0.0022573471069335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;19]" time="0.004839897155761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;20]" time="0.037015438079833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;21]" time="0.08863210678100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;22]" time="0.0024776458740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;23]" time="0.0017385482788085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;24]" time="0.014974594116210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;25]" time="0.47993969917297363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;26]" time="1.132392168045044"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;0]" time="0.0018775463104248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;1]" time="0.0012791156768798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;2]" time="0.0011453628540039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;3]" time="0.001172780990600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;4]" time="0.0011479854583740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;5]" time="0.0012156963348388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;6]" time="0.0011677742004394531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;7]" time="0.0011744499206542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;8]" time="0.0014567375183105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;9]" time="0.0018024444580078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;10]" time="0.0014739036560058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;11]" time="0.0014002323150634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;12]" time="0.0012359619140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;13]" time="0.001226186752319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;14]" time="0.001287698745727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;15]" time="0.001295328140258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;16]" time="0.0012364387512207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;17]" time="0.001554727554321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;18]" time="0.0015292167663574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;19]" time="0.0024423599243164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;20]" time="0.00915384292602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;21]" time="0.019725561141967773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;22]" time="0.0018095970153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;23]" time="0.001196146011352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;24]" time="0.0025281906127929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;25]" time="0.023530244827270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;26]" time="0.054045677185058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;0]" time="0.001806497573852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;1]" time="0.0013370513916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;2]" time="0.0012371540069580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;3]" time="0.0012524127960205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;4]" time="0.0011589527130126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;5]" time="0.001150369644165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;6]" time="0.0012056827545166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;7]" time="0.0012142658233642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;8]" time="0.001607656478881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;9]" time="0.002172708511352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;10]" time="0.0013697147369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;11]" time="0.0013842582702636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;12]" time="0.001331329345703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;13]" time="0.0013031959533691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;14]" time="0.001310586929321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;15]" time="0.0013365745544433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;16]" time="0.0013430118560791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;17]" time="0.0016322135925292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;18]" time="0.001535654067993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;19]" time="0.0023653507232666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;20]" time="0.009141206741333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;21]" time="0.019146442413330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;22]" time="0.0018603801727294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;23]" time="0.0012731552124023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;24]" time="0.0024521350860595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;25]" time="0.024530410766601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;26]" time="0.05418848991394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;0]" time="0.0018663406372070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;1]" time="0.001272439956665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;2]" time="0.0012111663818359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;3]" time="0.0012164115905761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;4]" time="0.0011675357818603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;5]" time="0.0011785030364990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;6]" time="0.0011303424835205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;7]" time="0.0011463165283203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;8]" time="0.0015189647674560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;9]" time="0.0021810531616210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;10]" time="0.0013995170593261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;11]" time="0.0014040470123291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;12]" time="0.0013227462768554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;13]" time="0.0013148784637451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;14]" time="0.0013620853424072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;15]" time="0.0013985633850097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;16]" time="0.0013668537139892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;17]" time="0.0016529560089111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;18]" time="0.0016124248504638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;19]" time="0.0024857521057128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;20]" time="0.009154081344604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;21]" time="0.01951766014099121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;22]" time="0.0017406940460205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;23]" time="0.0012743473052978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;24]" time="0.0023632049560546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;25]" time="0.02435135841369629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;26]" time="0.05467534065246582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;0]" time="0.0029189586639404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;1]" time="0.0020186901092529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;2]" time="0.001972675323486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;3]" time="0.002069711685180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;4]" time="0.001867055892944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;5]" time="0.0017981529235839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;6]" time="0.0016775131225585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;7]" time="0.0022122859954833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;8]" time="0.014952421188354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;9]" time="0.030681610107421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;10]" time="0.004057168960571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;11]" time="0.003312349319458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;12]" time="0.0033063888549804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;13]" time="0.0025784969329833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;14]" time="0.003286600112915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;15]" time="0.004280805587768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;16]" time="0.003915309906005859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;17]" time="0.0023627281188964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;18]" time="0.0021927356719970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;19]" time="0.0044748783111572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;20]" time="0.03654789924621582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;21]" time="0.08851814270019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;22]" time="0.002498626708984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;23]" time="0.0017316341400146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;24]" time="0.015164852142333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;25]" time="0.4781968593597412"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;26]" time="1.1327996253967285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;0]" time="0.003002166748046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;1]" time="0.0020952224731445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;2]" time="0.002173900604248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;3]" time="0.0022039413452148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;4]" time="0.0020372867584228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;5]" time="0.001728057861328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;6]" time="0.0017285346984863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;7]" time="0.002254009246826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;8]" time="0.02079486846923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;9]" time="0.03231310844421387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;10]" time="0.003971099853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;11]" time="0.0035266876220703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;12]" time="0.0033261775970458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;13]" time="0.0027167797088623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;14]" time="0.003316164016723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;15]" time="0.00432896614074707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;16]" time="0.004053831100463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;17]" time="0.0026340484619140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;18]" time="0.0022857189178466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;19]" time="0.004691123962402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;20]" time="0.038056135177612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;21]" time="0.0904381275177002"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;22]" time="0.0024678707122802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;23]" time="0.001980304718017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;24]" time="0.016276121139526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;25]" time="0.4806954860687256"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;26]" time="1.1399240493774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;0]" time="0.0036110877990722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;1]" time="0.0021157264709472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;2]" time="0.0020933151245117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;3]" time="0.0022275447845458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;4]" time="0.0019669532775878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;5]" time="0.001653432846069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;6]" time="0.0016961097717285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;7]" time="0.002241373062133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;8]" time="0.015099763870239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;9]" time="0.0311582088470459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;10]" time="0.003992319107055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;11]" time="0.003426790237426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;12]" time="0.003270864486694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;13]" time="0.00267791748046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;14]" time="0.0033636093139648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;15]" time="0.004157304763793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;16]" time="0.0039746761322021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;17]" time="0.0023965835571289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;18]" time="0.0022535324096679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;19]" time="0.004678964614868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;20]" time="0.03713488578796387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;21]" time="0.08992314338684082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;22]" time="0.002516031265258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;23]" time="0.001779317855834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;24]" time="0.01504826545715332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;25]" time="0.47900819778442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;26]" time="1.1302075386047363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;0]" time="0.0024874210357666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;1]" time="0.001691579818725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;2]" time="0.0017349720001220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;3]" time="0.0017969608306884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;4]" time="0.001661539077758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;5]" time="0.0014586448669433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;6]" time="0.001421213150024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;7]" time="0.001804351806640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;8]" time="0.010058879852294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;9]" time="0.01980447769165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;10]" time="0.0033686161041259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;11]" time="0.0027244091033935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;12]" time="0.002452850341796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;13]" time="0.002187967300415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;14]" time="0.0024902820587158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;15]" time="0.0031321048736572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;16]" time="0.0029413700103759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;17]" time="0.0020568370819091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;18]" time="0.0018947124481201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;19]" time="0.0040132999420166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;20]" time="0.029292821884155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;21]" time="0.06867265701293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;22]" time="0.0022230148315429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;23]" time="0.0015330314636230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;24]" time="0.012175798416137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;25]" time="0.36071133613586426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;26]" time="0.858511209487915"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;0]" time="0.0031998157501220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;1]" time="0.0018985271453857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;2]" time="0.0018682479858398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;3]" time="0.001918792724609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;4]" time="0.0018401145935058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;5]" time="0.0015115737915039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;6]" time="0.0015192031860351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;7]" time="0.0019145011901855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;8]" time="0.010334014892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;9]" time="0.020282268524169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;10]" time="0.0036339759826660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;11]" time="0.0027136802673339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;12]" time="0.0025680065155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;13]" time="0.0022399425506591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;14]" time="0.002583026885986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;15]" time="0.003162384033203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;16]" time="0.002959728240966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;17]" time="0.0021135807037353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;18]" time="0.002037525177001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;19]" time="0.004338741302490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;20]" time="0.030083656311035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;21]" time="0.06969141960144043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;22]" time="0.002240419387817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;23]" time="0.0015149116516113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;24]" time="0.012359142303466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;25]" time="0.3626282215118408"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;26]" time="0.8613204956054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;0]" time="0.002608060836791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;1]" time="0.0018112659454345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;2]" time="0.0018286705017089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;3]" time="0.0019130706787109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;4]" time="0.0018260478973388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;5]" time="0.001737356185913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;6]" time="0.0015053749084472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;7]" time="0.0019352436065673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;8]" time="0.011409521102905273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;9]" time="0.021883010864257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;10]" time="0.004053831100463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;11]" time="0.002685546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;12]" time="0.002520322799682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;13]" time="0.002235889434814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;14]" time="0.002827882766723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;15]" time="0.003217935562133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;16]" time="0.0029938220977783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;17]" time="0.002136707305908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;18]" time="0.0020346641540527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;19]" time="0.003960132598876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;20]" time="0.029803037643432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;21]" time="0.07018542289733887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;22]" time="0.0021982192993164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;23]" time="0.001605987548828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;24]" time="0.012187957763671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;25]" time="0.37163662910461426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;26]" time="0.8706161975860596"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;0]" time="0.0018126964569091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;1]" time="0.0012440681457519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;2]" time="0.00115203857421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;3]" time="0.0011913776397705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;4]" time="0.001077890396118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;5]" time="0.001127004623413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;6]" time="0.0010991096496582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;7]" time="0.0011746883392333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;8]" time="0.001299142837524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;9]" time="0.0014307498931884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;10]" time="0.0013103485107421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;11]" time="0.0012316703796386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;12]" time="0.0012826919555664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;13]" time="0.001195669174194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;14]" time="0.0012269020080566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;15]" time="0.0013027191162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;16]" time="0.0012590885162353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;17]" time="0.0015501976013183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;18]" time="0.0015332698822021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;19]" time="0.0024542808532714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;20]" time="0.008829593658447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;21]" time="0.018515586853027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;22]" time="0.0016553401947021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;23]" time="0.0011928081512451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;24]" time="0.0023415088653564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;25]" time="0.023619413375854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;26]" time="0.05403256416320801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;0]" time="0.0017931461334228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;1]" time="0.0013270378112792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;2]" time="0.001219034194946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;3]" time="0.0013022422790527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;4]" time="0.00116729736328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;5]" time="0.0013737678527832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;6]" time="0.0011906623840332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;7]" time="0.0011997222900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;8]" time="0.0015099048614501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;9]" time="0.0019180774688720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;10]" time="0.001405954360961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;11]" time="0.0013799667358398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;12]" time="0.0013308525085449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;13]" time="0.0013225078582763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;14]" time="0.0013575553894042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;15]" time="0.0014369487762451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;16]" time="0.0015769004821777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;17]" time="0.0016207695007324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;18]" time="0.0016753673553466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;19]" time="0.0025277137756347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;20]" time="0.009207487106323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;21]" time="0.019103527069091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;22]" time="0.001886129379272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;23]" time="0.0012981891632080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;24]" time="0.0023322105407714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;25]" time="0.024114608764648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;26]" time="0.05406975746154785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;0]" time="0.0017795562744140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;1]" time="0.0014691352844238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;2]" time="0.00125885009765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;3]" time="0.0012996196746826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;4]" time="0.0012199878692626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;5]" time="0.0011942386627197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;6]" time="0.0011610984802246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;7]" time="0.0011365413665771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;8]" time="0.0014505386352539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;9]" time="0.00186920166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;10]" time="0.0013453960418701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;11]" time="0.0013306140899658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;12]" time="0.0013375282287597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;13]" time="0.0013277530670166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;14]" time="0.0013737678527832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;15]" time="0.0013713836669921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;16]" time="0.0013632774353027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;17]" time="0.001623392105102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;18]" time="0.0016524791717529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;19]" time="0.0025331974029541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;20]" time="0.009665727615356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;21]" time="0.019176483154296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;22]" time="0.001753091812133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;23]" time="0.0012259483337402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;24]" time="0.002262115478515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;25]" time="0.023508310317993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;26]" time="0.05466651916503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;0]" time="0.0014348030090332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;1]" time="0.0012891292572021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;2]" time="0.0011453628540039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;3]" time="0.0011234283447265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;4]" time="0.0011014938354492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;5]" time="0.0011098384857177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;6]" time="0.0011420249938964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;7]" time="0.0011413097381591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;8]" time="0.0017848014831542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;9]" time="0.002567768096923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;10]" time="0.0014503002166748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;11]" time="0.0013427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;12]" time="0.0015001296997070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;13]" time="0.001435995101928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;14]" time="0.0014872550964355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;15]" time="0.001758575439453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;16]" time="0.0018732547760009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;17]" time="0.0019888877868652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;18]" time="0.031113862991333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;19]" time="0.02254199981689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;20]" time="0.003973245620727539"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;21]" time="0.003978729248046875"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;22]" time="0.003045797348022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;23]" time="0.030436277389526367"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;24]" time="0.06339645385742188"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;0]" time="0.003567934036254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;1]" time="0.0014252662658691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;2]" time="0.004492521286010742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;3]" time="0.003917694091796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;4]" time="0.004204750061035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;5]" time="0.0025403499603271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;6]" time="0.00138092041015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;7]" time="0.005162239074707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;8]" time="0.010079622268676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;9]" time="0.017737865447998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;10]" time="0.005376338958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;11]" time="0.0017669200897216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;12]" time="0.009012222290039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;13]" time="0.006656169891357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;14]" time="0.008760452270507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;15]" time="0.003285646438598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;16]" time="0.002238750457763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;17]" time="0.006804704666137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;18]" time="0.0381319522857666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;19]" time="0.03766345977783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;20]" time="0.003298521041870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;21]" time="0.002492666244506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;22]" time="0.0070378780364990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;23]" time="0.03709053993225098"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;24]" time="0.07986736297607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;0]" time="0.002275705337524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;1]" time="0.0012850761413574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;2]" time="0.0020885467529296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;3]" time="0.0018923282623291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;4]" time="0.002012968063354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;5]" time="0.0014069080352783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;6]" time="0.0011816024780273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;7]" time="0.0020847320556640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;8]" time="0.003543853759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;9]" time="0.005822896957397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;10]" time="0.0020341873168945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;11]" time="0.0013785362243652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;12]" time="0.0034520626068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;13]" time="0.002803802490234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;14]" time="0.0033440589904785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;15]" time="0.002161264419555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;16]" time="0.001901388168334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;17]" time="0.003159761428833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;18]" time="0.03113579750061035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;19]" time="0.026109695434570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;20]" time="0.0021131038665771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;21]" time="0.0023937225341796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;22]" time="0.00423431396484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;23]" time="0.030881643295288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;24]" time="0.06349015235900879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;0]" time="0.002140045166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;1]" time="0.001154184341430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;2]" time="0.0021119117736816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;3]" time="0.0019044876098632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;4]" time="0.0019626617431640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;5]" time="0.001375436782836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;6]" time="0.0011076927185058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;7]" time="0.0021266937255859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;8]" time="0.0036928653717041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;9]" time="0.0058171749114990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;10]" time="0.0020248889923095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;11]" time="0.0015840530395507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;12]" time="0.0035371780395507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;13]" time="0.0028340816497802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;14]" time="0.003219127655029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;15]" time="0.0021979808807373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;16]" time="0.0019636154174804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;17]" time="0.003087282180786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;18]" time="0.030895709991455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;19]" time="0.026231765747070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;20]" time="0.002145051956176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;21]" time="0.002385377883911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;22]" time="0.004278898239135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;23]" time="0.030513763427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;24]" time="0.06395745277404785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;0]" time="0.0016601085662841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;1]" time="0.001186370849609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;2]" time="0.0010848045349121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;3]" time="0.0012133121490478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;4]" time="0.0010211467742919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;5]" time="0.0010557174682617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;6]" time="0.001062154769897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;7]" time="0.001171112060546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;8]" time="0.0014133453369140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;9]" time="0.0018405914306640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;10]" time="0.0013430118560791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;11]" time="0.0012602806091308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;12]" time="0.001348733901977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;13]" time="0.0012853145599365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;14]" time="0.0013515949249267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;15]" time="0.0016903877258300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;16]" time="0.0018436908721923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;17]" time="0.001918792724609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;18]" time="0.029017210006713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;19]" time="0.02212834358215332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;20]" time="0.0015435218811035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;21]" time="0.002207517623901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;22]" time="0.0029528141021728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;23]" time="0.02860283851623535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;24]" time="0.05929231643676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;0]" time="0.0016603469848632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;1]" time="0.0011420249938964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;2]" time="0.001047372817993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;3]" time="0.0011150836944580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;4]" time="0.0010216236114501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;5]" time="0.0010731220245361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;6]" time="0.0010509490966796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;7]" time="0.0011153221130371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;8]" time="0.0011527538299560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;9]" time="0.0013766288757324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;10]" time="0.0013186931610107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;11]" time="0.0012314319610595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;12]" time="0.0013115406036376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;13]" time="0.0012636184692382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;14]" time="0.0012938976287841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;15]" time="0.001730203628540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;16]" time="0.0019745826721191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;17]" time="0.0020821094512939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;18]" time="0.028964996337890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;19]" time="0.02170538902282715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;20]" time="0.001397848129272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;21]" time="0.0022940635681152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;22]" time="0.003049135208129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;23]" time="0.035593509674072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;24]" time="0.05883288383483887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;0]" time="0.001680612564086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;1]" time="0.0011832714080810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;2]" time="0.0011038780212402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;3]" time="0.0011086463928222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;4]" time="0.0010280609130859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;5]" time="0.0010771751403808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;6]" time="0.0011022090911865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;7]" time="0.0011112689971923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;8]" time="0.0014011859893798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;9]" time="0.0019402503967285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;10]" time="0.001356363296508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;11]" time="0.0012786388397216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;12]" time="0.0013773441314697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;13]" time="0.0014047622680664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;14]" time="0.0014564990997314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;15]" time="0.0017943382263183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;16]" time="0.0018875598907470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;17]" time="0.0020771026611328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;18]" time="0.029686689376831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;19]" time="0.02210211753845215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;20]" time="0.0016255378723144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;21]" time="0.00226593017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;22]" time="0.0031616687774658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;23]" time="0.028697729110717773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;24]" time="0.059964895248413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;0]" time="0.0015828609466552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;1]" time="0.0011818408966064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;2]" time="0.0010759830474853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;3]" time="0.0011150836944580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;4]" time="0.0010454654693603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;5]" time="0.0010907649993896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;6]" time="0.001071929931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;7]" time="0.001070261001586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;8]" time="0.0012137889862060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;9]" time="0.0012857913970947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;10]" time="0.0012202262878417969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;11]" time="0.0011210441589355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;12]" time="0.001222848892211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;13]" time="0.0012996196746826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;14]" time="0.0012221336364746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;15]" time="0.001760721206665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;16]" time="0.001994609832763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;17]" time="0.0018172264099121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;18]" time="0.028392791748046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;19]" time="0.021193265914916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;20]" time="0.0015461444854736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;21]" time="0.0023872852325439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;22]" time="0.0027794837951660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;23]" time="0.027570009231567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;24]" time="0.059030771255493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;0]" time="0.0021305084228515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;1]" time="0.0014786720275878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;2]" time="0.0013353824615478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;3]" time="0.001354217529296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;4]" time="0.0013227462768554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;5]" time="0.0013475418090820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;6]" time="0.0012960433959960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;7]" time="0.0012860298156738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;8]" time="0.0014867782592773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;9]" time="0.001644134521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;10]" time="0.0014510154724121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;11]" time="0.0014529228210449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;12]" time="0.0017833709716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;13]" time="0.0014927387237548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;14]" time="0.0014505386352539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;15]" time="0.0014636516571044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;16]" time="0.0014753341674804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;17]" time="0.0018398761749267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;18]" time="0.0017330646514892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;19]" time="0.002681255340576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;20]" time="0.00887298583984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;21]" time="0.01871633529663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;22]" time="0.0020089149475097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;23]" time="0.0013620853424072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;24]" time="0.0024607181549072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;25]" time="0.024255037307739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;26]" time="0.05633544921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;0]" time="0.0021517276763916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;1]" time="0.00177764892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;2]" time="0.0015082359313964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;3]" time="0.0014426708221435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;4]" time="0.0013875961303710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;5]" time="0.0014560222625732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;6]" time="0.0013518333435058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;7]" time="0.0013861656188964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;8]" time="0.0016434192657470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;9]" time="0.0021114349365234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;10]" time="0.001680135726928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;11]" time="0.0016677379608154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;12]" time="0.0015778541564941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;13]" time="0.0015850067138671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;14]" time="0.0015435218811035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;15]" time="0.001631021499633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;16]" time="0.0016295909881591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;17]" time="0.0020160675048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;18]" time="0.0017485618591308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;19]" time="0.0026688575744628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;20]" time="0.009279251098632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;21]" time="0.01896071434020996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;22]" time="0.0020723342895507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;23]" time="0.0014734268188476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;24]" time="0.0024967193603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;25]" time="0.02380204200744629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;26]" time="0.05394744873046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;0]" time="0.002106904983520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;1]" time="0.0015463829040527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;2]" time="0.0014374256134033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;3]" time="0.0014564990997314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;4]" time="0.0014088153839111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;5]" time="0.0014300346374511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;6]" time="0.001348257064819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;7]" time="0.00136566162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;8]" time="0.0016751289367675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;9]" time="0.0026264190673828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;10]" time="0.0016536712646484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;11]" time="0.0016207695007324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;12]" time="0.0016622543334960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;13]" time="0.0015826225280761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;14]" time="0.0015697479248046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;15]" time="0.0016694068908691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;16]" time="0.001688241958618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;17]" time="0.0018100738525390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;18]" time="0.0017998218536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;19]" time="0.002663135528564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;20]" time="0.009358406066894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;21]" time="0.018863916397094727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;22]" time="0.001975536346435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;23]" time="0.00145721435546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;24]" time="0.0025670528411865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;25]" time="0.024317026138305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;26]" time="0.05481100082397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;0]" time="0.002134084701538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;1]" time="0.00151824951171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;2]" time="0.0013823509216308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;3]" time="0.001590728759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;4]" time="0.0013790130615234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;5]" time="0.001416921615600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;6]" time="0.0013508796691894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;7]" time="0.0013759136199951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;8]" time="0.002541065216064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;9]" time="0.0039823055267333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;10]" time="0.001619577407836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;11]" time="0.0016033649444580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;12]" time="0.0015721321105957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;13]" time="0.001524209976196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;14]" time="0.0015511512756347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;15]" time="0.0016257762908935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;16]" time="0.0016317367553710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;17]" time="0.0017850399017333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;18]" time="0.0017061233520507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;19]" time="0.0029075145721435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;20]" time="0.010008096694946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;21]" time="0.021381139755249023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;22]" time="0.0021321773529052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;23]" time="0.0014727115631103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;24]" time="0.002638101577758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;25]" time="0.025133848190307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;26]" time="0.06090998649597168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;0]" time="0.002123117446899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;1]" time="0.0015149116516113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;2]" time="0.0014028549194335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;3]" time="0.00151824951171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;4]" time="0.0013632774353027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;5]" time="0.0014195442199707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;6]" time="0.0013613700866699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;7]" time="0.0014150142669677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;8]" time="0.002549886703491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;9]" time="0.004198789596557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;10]" time="0.0016951560974121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;11]" time="0.0016264915466308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;12]" time="0.0016007423400878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;13]" time="0.0015327930450439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;14]" time="0.001592874526977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;15]" time="0.001718282699584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;16]" time="0.00168609619140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;17]" time="0.00180816650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;18]" time="0.001767873764038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;19]" time="0.002765178680419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;20]" time="0.009992122650146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;21]" time="0.021248340606689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;22]" time="0.0021347999572753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;23]" time="0.0014598369598388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;24]" time="0.002546072006225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;25]" time="0.02528238296508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;26]" time="0.057770729064941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;0]" time="0.0022478103637695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;1]" time="0.0015838146209716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;2]" time="0.001470804214477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;3]" time="0.0015344619750976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;4]" time="0.001630544662475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;5]" time="0.0014100074768066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;6]" time="0.0014591217041015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;7]" time="0.0014564990997314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;8]" time="0.0026552677154541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;9]" time="0.0044286251068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;10]" time="0.0017609596252441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;11]" time="0.0017120838165283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;12]" time="0.0020313262939453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;13]" time="0.0016970634460449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;14]" time="0.0016634464263916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;15]" time="0.0017418861389160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;16]" time="0.001786947250366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;17]" time="0.002119779586791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;18]" time="0.0019092559814453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;19]" time="0.0027875900268554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;20]" time="0.010560274124145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;21]" time="0.02274608612060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;22]" time="0.002214670181274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;23]" time="0.0015892982482910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;24]" time="0.002804279327392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;25]" time="0.02596735954284668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;26]" time="0.059998273849487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;0]" time="0.0032291412353515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;1]" time="0.002450227737426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;2]" time="0.0021953582763671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;3]" time="0.0024499893188476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;4]" time="0.002280712127685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;5]" time="0.0021398067474365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;6]" time="0.002256155014038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;7]" time="0.0023157596588134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;8]" time="0.006163358688354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;9]" time="0.011793375015258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;10]" time="0.003003835678100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;11]" time="0.002997875213623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;12]" time="0.0028731822967529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;13]" time="0.002753734588623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;14]" time="0.0031409263610839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;15]" time="0.003252744674682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;16]" time="0.00308990478515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;17]" time="0.0025916099548339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;18]" time="0.002643108367919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;19]" time="0.0037353038787841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;20]" time="0.014423370361328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;21]" time="0.031485557556152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;22]" time="0.003123760223388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;23]" time="0.002214670181274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;24]" time="0.0033888816833496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;25]" time="0.030756711959838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;26]" time="0.06852531433105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;0]" time="0.0034999847412109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;1]" time="0.002345561981201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;2]" time="0.0022857189178466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;3]" time="0.0024988651275634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;4]" time="0.0023729801177978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;5]" time="0.002240896224975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;6]" time="0.0023353099822998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;7]" time="0.002324342727661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;8]" time="0.00629734992980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;9]" time="0.011856555938720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;10]" time="0.0030548572540283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;11]" time="0.0030851364135742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;12]" time="0.003294229507446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;13]" time="0.002805948257446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;14]" time="0.003359079360961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;15]" time="0.0033855438232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;16]" time="0.0033249855041503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;17]" time="0.0029532909393310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;18]" time="0.0028581619262695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;19]" time="0.0038208961486816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;20]" time="0.01460886001586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;21]" time="0.031236648559570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;22]" time="0.0029468536376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;23]" time="0.0024640560150146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;24]" time="0.0034258365631103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;25]" time="0.03136134147644043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;26]" time="0.07045769691467285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;0]" time="0.0034461021423339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;1]" time="0.002384185791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;2]" time="0.0023946762084960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;3]" time="0.0025260448455810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;4]" time="0.002560138702392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;5]" time="0.0023221969604492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;6]" time="0.0022802352905273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;7]" time="0.0024657249450683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;8]" time="0.006394863128662109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;9]" time="0.011965274810791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;10]" time="0.0033860206604003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;11]" time="0.0030066967010498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;12]" time="0.0035119056701660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;13]" time="0.0028295516967773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;14]" time="0.0030498504638671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;15]" time="0.0034966468811035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;16]" time="0.003442049026489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;17]" time="0.0029718875885009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;18]" time="0.0028009414672851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;19]" time="0.003908395767211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;20]" time="0.014801979064941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;21]" time="0.029909133911132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;22]" time="0.0030558109283447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;23]" time="0.002361774444580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;24]" time="0.0038673877716064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;25]" time="0.03091740608215332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;26]" time="0.07088780403137207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;0]" time="0.0029604434967041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;1]" time="0.002103567123413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;2]" time="0.003345489501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;3]" time="0.0041620731353759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;4]" time="0.0048367977142333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;5]" time="0.0018999576568603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;6]" time="0.001895904541015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;7]" time="0.003277301788330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;8]" time="0.00420832633972168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;9]" time="0.005504131317138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;10]" time="0.002721071243286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;11]" time="0.004037380218505859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;12]" time="0.0042417049407958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;13]" time="0.0033745765686035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;14]" time="0.004010438919067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;15]" time="0.005865573883056641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;16]" time="0.008092880249023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;17]" time="0.0025277137756347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;18]" time="0.002360820770263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;19]" time="0.004853010177612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;20]" time="0.0142364501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;21]" time="0.02465224266052246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;22]" time="0.002694845199584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;23]" time="0.0019083023071289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;24]" time="0.00433659553527832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;25]" time="0.02924323081970215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;26]" time="0.06505918502807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;0]" time="0.002707242965698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;1]" time="0.002271413803100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;2]" time="0.0031332969665527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;3]" time="0.0041086673736572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;4]" time="0.004978179931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;5]" time="0.002044677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;6]" time="0.0020418167114257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;7]" time="0.00307464599609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;8]" time="0.004394054412841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;9]" time="0.006242513656616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;10]" time="0.002538442611694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;11]" time="0.0039942264556884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;12]" time="0.0040340423583984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;13]" time="0.003461122512817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;14]" time="0.004637718200683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;15]" time="0.006519317626953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;16]" time="0.008081912994384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;17]" time="0.002526521682739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;18]" time="0.0026617050170898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;19]" time="0.004810810089111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;20]" time="0.012781858444213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;21]" time="0.024287939071655273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;22]" time="0.0027246475219726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;23]" time="0.00194549560546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;24]" time="0.0045588016510009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;25]" time="0.02930760383605957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;26]" time="0.06314444541931152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;0]" time="0.002898693084716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;1]" time="0.0021185874938964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;2]" time="0.0030975341796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;3]" time="0.004216670989990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;4]" time="0.004926443099975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;5]" time="0.0019202232360839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;6]" time="0.0019028186798095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;7]" time="0.0030100345611572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;8]" time="0.004622697830200195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;9]" time="0.00629878044128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;10]" time="0.0026090145111083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;11]" time="0.0043294429779052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;12]" time="0.004161834716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;13]" time="0.003664731979370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;14]" time="0.004265785217285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;15]" time="0.006095170974731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;16]" time="0.007771015167236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;17]" time="0.0026390552520751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;18]" time="0.0025408267974853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;19]" time="0.004601955413818359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;20]" time="0.013221502304077148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;21]" time="0.025319576263427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;22]" time="0.0025620460510253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;23]" time="0.0018918514251708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;24]" time="0.004333019256591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;25]" time="0.02936553955078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;26]" time="0.06497454643249512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.00423121452331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.009252309799194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.009656906127929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.012865543365478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.018961429595947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.008738994598388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.002996206283569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.003592252731323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.026302576065063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.044277191162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.1381969451904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.010535955429077148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.005632162094116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.011310815811157227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.011401176452636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.019208431243896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.028647184371948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0372622013092041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.004991769790649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.004680156707763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.05295753479003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.05397629737854004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.1738739013671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.011986732482910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.004254341125488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.005166769027709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.047936439514160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.08377313613891602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.2601451873779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.01357269287109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004441022872924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0037682056427001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.009844303131103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.013683557510375977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.020442724227905273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.009160757064819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.004367351531982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.003685474395751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0269014835357666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.04702043533325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.14598631858825684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.01532125473022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0059125423431396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.011539697647094727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.012546062469482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.020131349563598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.028812885284423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.03786015510559082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.004952430725097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0051267147064208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.05264425277709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.05463290214538574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.18176054954528809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.012163639068603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.004374265670776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.005570173263549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.053940534591674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07592654228210449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.2593400478363037"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.01316690444946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.004323482513427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0036592483520507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.00952601432800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.013882160186767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.019945383071899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.00860905647277832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.002912759780883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.003813028335571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.027626514434814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.043493032455444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.13959002494812012"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.01096034049987793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.006104469299316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.012421369552612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.011419296264648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.01998734474182129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0287325382232666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.03981518745422363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.004909992218017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.005120992660522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.05823254585266113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.05438041687011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.17886686325073242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.01127171516418457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.004335165023803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004808187484741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.04982352256774902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.0738377571105957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.25739359855651855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.013544797897338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.004496335983276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0036911964416503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.009818315505981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.014028310775756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.01949024200439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.008977413177490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.004156827926635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0038297176361083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.028229236602783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.04520750045776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.14438533782958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.010106325149536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.006020784378051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.011121034622192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.011738777160644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.019054412841796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.028115272521972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.03968048095703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.004868268966674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004853725433349609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.057372331619262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.05562734603881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.17968320846557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.012026309967041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.004251956939697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.004967451095581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.0503082275390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.07447957992553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.2557964324951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.013152599334716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.004368782043457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.003619670867919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.00948786735534668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.014986753463745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.01993584632873535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.009439229965209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.004180192947387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.004930973052978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.032889366149902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.04419708251953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.14124464988708496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.010939359664916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.005996227264404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.011093854904174805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.011427164077758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.02066826820373535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.030150651931762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.03918743133544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.004930257797241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004775524139404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.0516507625579834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.05509376525878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.18602228164672852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.011711835861206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.004144191741943359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0052263736724853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.05226778984069824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.08035612106323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.26592302322387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.014605522155761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.004651308059692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0036661624908447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.009577274322509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.013194561004638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.01915740966796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.009312868118286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0030965805053710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0037894248962402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.031008243560791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.045867204666137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.14322352409362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.009910106658935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.006713390350341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.012733221054077148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.012858152389526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.02203845977783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.029346227645874023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.03872537612915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.005293846130371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004743337631225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.05322766304016113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.05532646179199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.17946290969848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.011441707611083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.004266023635864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.005292654037475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.05417442321777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.0765986442565918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.2655813694000244"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.01521611213684082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0043451786041259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.003898143768310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.010966300964355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.013649940490722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.019109010696411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.008713245391845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.004225015640258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.003835439682006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.026376962661743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0459284782409668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.14969730377197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.010765790939331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.006594181060791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.01175689697265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.011880636215209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.020148515701293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.029495954513549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.03939461708068848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.004770994186401367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.004580497741699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.05292797088623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.058851003646850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.18188834190368652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.012033939361572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0040435791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0049173831939697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.05311298370361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.08714938163757324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.26427531242370605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.01529240608215332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.004552125930786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0038814544677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.009686470031738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.013605356216430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.02065730094909668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.009303569793701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.004618167877197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0037660598754882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.028316020965576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.047685861587524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.14664840698242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.010686397552490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0060498714447021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.011900663375854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.011790752410888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.020383119583129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.02927255630493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.03750491142272949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.004641532897949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.00434565544128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.04944133758544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.05237078666687012"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.16962790489196777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.010261297225952148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0027582645416259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.00441431999206543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.046288490295410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.07002043724060059"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.24120545387268066"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.012357473373413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.004212617874145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.003353595733642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0093536376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.012560129165649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.017053604125976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.008404731750488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.002870321273803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0034902095794677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.02505207061767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.04236268997192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.1335926055908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.009184598922729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0045893192291259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.011014461517333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.01078176498413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.01848125457763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.026932477951049805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.035735130310058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.004560947418212891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.004288673400878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.050241708755493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.05306267738342285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.17043423652648926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.010294675827026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.002685070037841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.00449061393737793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.04530644416809082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.07064986228942871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.2390613555908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.012207269668579102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0018169879913330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0014195442199707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.003195524215698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.003435850143432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.005905866622924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.00397181510925293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0018198490142822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.00133514404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.003239870071411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.003907442092895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.006979703903198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.004222869873046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.002152681350708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0016047954559326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.003463268280029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0046634674072265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.005472898483276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.010369300842285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0026903152465820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0021610260009765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.027874469757080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.014934778213500977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04177498817443848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.006780385971069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0017206668853759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.002700328826904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.024375438690185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.03400158882141113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.1125791072845459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.008556365966796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.001741170883178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0013439655303955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0030698776245117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0033757686614990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.00574803352355957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.003915548324584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0018160343170166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0014145374298095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.00347137451171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.003775358200073242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.007261753082275391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.004200458526611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0023431777954101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0018889904022216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.003509998321533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.004589557647705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0054590702056884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.010565757751464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0026040077209472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0022361278533935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.028242111206054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.014827251434326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.04307961463928223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.006596088409423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.001821756362915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0026574134826660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.02428293228149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.032709360122680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.1140444278717041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.008053064346313477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.001844644546508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0013730525970458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0037407875061035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0035059452056884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.006029367446899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.004108905792236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0018565654754638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0013806819915771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0035829544067382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.003782987594604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.007664680480957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.004289150238037109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.002218484878540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0016999244689941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0033957958221435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0044879913330078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.005785703659057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.01029658317565918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.00278472900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0021474361419677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.028372764587402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.01469278335571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.04284334182739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.006439208984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.001725912094116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0024378299713134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.023825645446777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.03219437599182129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.11198592185974121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.008127927780151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0018477439880371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0013272762298583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0031588077545166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.00347900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.005951881408691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.004496574401855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0018222332000732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0014004707336425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0033059120178222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0037708282470703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.007550477981567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.004302978515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.002218961715698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0016248226165771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0035097599029541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.00464177131652832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.005615234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.010423898696899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0026862621307373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0021390914916992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.02739572525024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.014465093612670898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.04281306266784668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.00667881965637207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0017592906951904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.002505064010620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.029079198837280273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.03292727470397949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.1131596565246582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.008660316467285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0019698143005371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.001407623291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0031282901763916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0035276412963867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.005774497985839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.003942012786865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0018916130065917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0013098716735839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.003576993942260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.003813505172729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.007622957229614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0040171146392822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0023043155670166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0018906593322753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.003719806671142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.004625082015991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.005629062652587891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.010327577590942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0029146671295166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0021736621856689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.029157400131225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.015178203582763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.04416799545288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.006543636322021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0017385482788085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.002601146697998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.024351835250854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.03290510177612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.11398935317993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.007829904556274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0018117427825927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.001398324966430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0030782222747802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.003403186798095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.006148815155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.004028797149658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0018734931945800781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0013937950134277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.003551483154296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0037949085235595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.007909536361694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.004235744476318359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.002213716506958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0017261505126953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0035979747772216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0045893192291259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.005589962005615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.010452508926391602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0027937889099121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002372264862060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.028768539428710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.015296220779418945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.043627262115478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.006590604782104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.001771688461303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.002652406692504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.02512979507446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.03290700912475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.11319851875305176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.007844924926757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0019412040710449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0013566017150878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.003018617630004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.003231048583984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0055658817291259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0038886070251464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0017635822296142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.001329660415649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0035674571990966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.003755331039428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.007336854934692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.004118204116821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0021886825561523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0016872882843017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.003497600555419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.004750490188598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.005419015884399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.010374069213867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002760648727416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0021445751190185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.028084993362426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.01473546028137207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.04254651069641113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.006669044494628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0018420219421386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0024704933166503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.02420210838317871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.033423423767089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.11507725715637207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.00843954086303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0018758773803710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0014030933380126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.003095865249633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.003577709197998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.006079435348510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.003919124603271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0017635822296142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0013604164123535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.003377199172973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.003833770751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.007740020751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.004428863525390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0022025108337402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0017483234405517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0037088394165039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.004821062088012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.005572080612182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.01049661636352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0026738643646240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0022132396697998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.027871370315551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.015043497085571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.04410052299499512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.006443023681640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0017604827880859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0024497509002685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.023701190948486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.03291654586791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.11473202705383301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.008287668228149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0027120113372802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0014095306396484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0030558109283447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.003513336181640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.006921291351318359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0039844512939453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0018951892852783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0013737678527832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.003418445587158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.004341602325439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.007742881774902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0044040679931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.002295970916748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0018148422241210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0036802291870117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.004699230194091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.005464076995849609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.010678529739379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.002687692642211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.002288341522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.028600454330444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.015708208084106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.044495582580566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.006747722625732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0018298625946044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0025916099548339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.030248165130615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.03297114372253418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.11476302146911621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.007982492446899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0023283958435058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0031976699829101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.005041599273681641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.006089925765991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.007083892822265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.005021810531616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0021750926971435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.003052949905395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.012407779693603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.018946409225463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.055541038513183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.006685018539428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.003371000289916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.005622386932373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.007126808166503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.009301424026489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.01156759262084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.013917684555053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0038144588470458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.004221916198730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.03648519515991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.02841806411743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.09028792381286621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.007803916931152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0021331310272216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0042514801025390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.033339500427246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.04677104949951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.16131162643432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.009813308715820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0022933483123779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0033791065216064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0049631595611572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.005761146545410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.007009983062744141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.005198955535888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0023300647735595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.003161191940307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.012444496154785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.01759934425354004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.05483436584472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.007069110870361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.003448963165283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.005882978439331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.00722050666809082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.00925302505493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.01155233383178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.014758110046386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0039958953857421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.004081010818481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.03646397590637207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.028803110122680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.08866763114929199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.007753849029541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.002172231674194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004416704177856445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.0339968204498291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.04654741287231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.15960478782653809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.009832143783569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0023419857025146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0030870437622070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.004885196685791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.00588226318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.006989240646362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.004979133605957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.002173900604248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0030832290649414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.013089656829833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.019100666046142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.05490851402282715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.007477760314941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0034475326538085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0057773590087890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.007231473922729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.009132862091064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.011438131332397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.01508188247680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0039598941802978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0041997432708740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.037064552307128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.028586626052856445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.09049654006958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.008209705352783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.003232240676879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004395723342895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.033293724060058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.046642303466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.1661679744720459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.00966644287109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0022652149200439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0030035972595214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.004943370819091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.005703449249267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.007001399993896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0050601959228515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.002290487289428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.003146648406982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.012856245040893555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.019223928451538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.05568051338195801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.006811380386352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0034036636352539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.005675554275512695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.007360696792602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.009450197219848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.011571407318115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.014275550842285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.004106044769287109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004308938980102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.03687882423400879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.028547286987304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.09043025970458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.00805211067199707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0021719932556152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.004292011260986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.033833980560302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.046204328536987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.16156625747680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.009923934936523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0025796890258789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0034525394439697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0051288604736328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.00619196891784668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0073244571685791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.005074262619018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.002340078353881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0031800270080566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.012668132781982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0181276798248291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.055112361907958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.006779193878173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0034694671630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.005865812301635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.007338047027587891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.009322166442871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.011474370956420898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.014759063720703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.004267454147338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.00438237190246582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.03888893127441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.029300928115844727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.09078764915466309"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.008111715316772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0033113956451416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0043544769287109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.03332185745239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.04736733436584473"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.163360595703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.010248422622680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002681255340576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0032019615173339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0051076412200927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.006242990493774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.007359981536865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.005322456359863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.002302885055541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.003453493118286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.013071060180664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.01780986785888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.055503129959106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.006734371185302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0033957958221435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0057909488677978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.007358551025390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.009774208068847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.011997222900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.014609575271606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.004126787185668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0044443607330322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.039009809494018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.029113292694091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.09056615829467773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.008249998092651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0032901763916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004510402679443359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.0344233512878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.04758405685424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.16840124130249023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.01069784164428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0032701492309570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0033028125762939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.005081653594970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.006088972091674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0071179866790771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.005194187164306641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0024089813232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0032758712768554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.012405872344970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.018020153045654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.055696725845336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.006872415542602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.003387928009033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.00582575798034668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0075452327728271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.009625911712646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.011652469635009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.014419078826904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0041408538818359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.004271984100341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.03654360771179199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.029222965240478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.09097933769226074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.008444786071777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0023164749145507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004571676254272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.0337677001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.04755592346191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.16396474838256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010885953903198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.002412557601928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0032346248626708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.005084991455078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.006018161773681641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.007469654083251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.005211591720581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.002168893814086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0033333301544189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.012783527374267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.017983436584472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.05610156059265137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.007040977478027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.003493070602416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.005834341049194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.007272958755493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.009587287902832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.011957168579101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.014174461364746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.00406336784362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004006147384643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.03818082809448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.029769182205200195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.09132552146911621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.008234024047851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.002240419387817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.004492044448852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.033360958099365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.046775102615356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.16611528396606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.01022958755493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0024383068084716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.003323078155517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0051920413970947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.006276845932006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.007554054260253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.005330562591552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.002323627471923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.003302335739135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.013169288635253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.01820063591003418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.05602383613586426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0068585872650146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0034465789794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.006182193756103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0072841644287109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.009511709213256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.011766910552978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.014723539352416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0038852691650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.004297494888305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.037085533142089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.028995275497436523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.08985662460327148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.007825136184692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.002186298370361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004225254058837891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.03281593322753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.04755735397338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.16275572776794434"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.01000523567199707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;0]" time="0.004294633865356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;1]" time="0.0016443729400634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;2]" time="0.0014483928680419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;3]" time="0.0016565322875976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;4]" time="0.0015010833740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;5]" time="0.0014073848724365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;6]" time="0.0014622211456298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;7]" time="0.0015664100646972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;8]" time="0.0038106441497802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;9]" time="0.008181095123291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;10]" time="0.0028159618377685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;11]" time="0.0018639564514160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;12]" time="0.0021047592163085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;13]" time="0.0017123222351074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;14]" time="0.0018634796142578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;15]" time="0.0019707679748535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;16]" time="0.0018963813781738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;0]" time="0.0014820098876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;1]" time="0.0014483928680419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;2]" time="0.0014202594757080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;3]" time="0.0016624927520751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;4]" time="0.0014796257019042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;5]" time="0.0013644695281982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;6]" time="0.0013630390167236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;7]" time="0.0015478134155273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;8]" time="0.0049419403076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;9]" time="0.011789321899414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;10]" time="0.002118349075317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;11]" time="0.001882314682006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;12]" time="0.0019116401672363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;13]" time="0.001692056655883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;14]" time="0.001973390579223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;15]" time="0.0019948482513427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;16]" time="0.002001523971557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;0]" time="0.001554727554321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;1]" time="0.001417398452758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;2]" time="0.0014417171478271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;3]" time="0.0014677047729492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;4]" time="0.0016102790832519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;5]" time="0.0013689994812011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;6]" time="0.0013430118560791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;7]" time="0.001489400863647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;8]" time="0.005295753479003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;9]" time="0.011694192886352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;10]" time="0.0020635128021240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;11]" time="0.0028946399688720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;12]" time="0.001954793930053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;13]" time="0.0017468929290771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;14]" time="0.0019676685333251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;15]" time="0.0019872188568115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;16]" time="0.002028226852416992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.008257627487182617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0036242008209228516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.021064043045043945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.023646116256713867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.031991004943847656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.031186342239379883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.008012771606445312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0029654502868652344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.030467510223388672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.041762590408325195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.13312172889709473"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.03524589538574219"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.022027254104614258"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.006212949752807617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.028932809829711914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.05376696586608887"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.052948951721191406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.07439351081848145"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.029747486114501953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.006566762924194336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.18591952323913574"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.10429024696350098"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.3569061756134033"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.08429360389709473"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.009094476699829102"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0051577091217041016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.3566746711730957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.5693225860595703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="3.0493340492248535"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.1960735321044922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.008939981460571289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.004251718521118164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.021166563034057617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.027703285217285156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.030748605728149414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.030180692672729492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.008147478103637695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.002826690673828125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.029857397079467773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.039945363998413086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.13022875785827637"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.03413701057434082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.021319866180419922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.006037235260009766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0281221866607666"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.04596853256225586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.050400733947753906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.07261776924133301"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.028507232666015625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.006418466567993164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.18666625022888184"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.10058784484863281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.3499157428741455"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.08311629295349121"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.00892329216003418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.005261421203613281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.3671886920928955"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.5828151702880859"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="3.074993133544922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.19352245330810547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.008927106857299805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.002955198287963867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.02047419548034668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.023038625717163086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.030948877334594727"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.030895709991455078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.00809931755065918"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0028553009033203125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.03018045425415039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.04107379913330078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.1320796012878418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.033646583557128906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.02131795883178711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.006006717681884766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.033262014389038086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.046038150787353516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.050072431564331055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.07255911827087402"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.028702974319458008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.00630640983581543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.18053603172302246"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.09993886947631836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.3448905944824219"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0814218521118164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.008766412734985352"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.005441427230834961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.363513708114624"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.5855109691619873"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="3.0852537155151367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.19256067276000977"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.009163856506347656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.003360271453857422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.020853042602539062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.022660493850708008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.030383586883544922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.03038787841796875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.008136510848999023"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.002880096435546875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.029816150665283203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.04130053520202637"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.13213086128234863"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.034960031509399414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.022513389587402344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0062901973724365234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.028812646865844727"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.04711174964904785"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.053052425384521484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.07462596893310547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.029509305953979492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.006663799285888672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.18678903579711914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.09956836700439453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.35085630416870117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.08409285545349121"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.009025335311889648"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.004191875457763672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.35765528678894043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.599933385848999"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="3.1236369609832764"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.19896984100341797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.00908207893371582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0034580230712890625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.020545005798339844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.02333235740661621"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.030979156494140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.030534029006958008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.00825643539428711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0027875900268554688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.030246734619140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.040750980377197266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.13050198554992676"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.033950090408325195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.021752357482910156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0061872005462646484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.028481721878051758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.04585528373718262"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.05136585235595703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.07313108444213867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0298309326171875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.006286144256591797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.18578696250915527"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.10297989845275879"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.3592677116394043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.08586335182189941"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.009291410446166992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.006562471389770508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.3771533966064453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.605548620223999"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="3.12337589263916"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.19515013694763184"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.008832931518554688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0031821727752685547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.020999431610107422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.023383140563964844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.031236648559570312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.030964374542236328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.008162975311279297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0028884410858154297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.030677318572998047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0409846305847168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.13283872604370117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.03419995307922363"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.021831274032592773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.006326198577880859"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.029503583908081055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.04688525199890137"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.05185079574584961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.07408690452575684"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.029446840286254883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.006575107574462891"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.18375706672668457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.10063743591308594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.35632991790771484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.08619260787963867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.009278297424316406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.006749391555786133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.3787209987640381"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.6123976707458496"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="3.1511247158050537"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.19646286964416504"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.00886225700378418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.003210306167602539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.021167516708374023"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.023279905319213867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.03204011917114258"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.031294822692871094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.008077144622802734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0030202865600585938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.030957937240600586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.04149508476257324"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.13113045692443848"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.034696340560913086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.021476268768310547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.006453752517700195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.029048681259155273"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.04589390754699707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.05137825012207031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0725545883178711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.029006242752075195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.006593227386474609"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.18468475341796875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.1028897762298584"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.3480489253997803"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.08454561233520508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.008818864822387695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0042302608489990234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.35730695724487305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.597780704498291"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="3.296328544616699"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.1945195198059082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.008841991424560547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.003036022186279297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.020418405532836914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.02340221405029297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.030408859252929688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.030568838119506836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.007996320724487305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.00281524658203125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.029317140579223633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.04057455062866211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.13048481941223145"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.03408217430114746"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.021300315856933594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.006195783615112305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.029087543487548828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.046196699142456055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.05164480209350586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.07435154914855957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.029185771942138672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0066301822662353516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.18361949920654297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.09967350959777832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.34848880767822266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.08420133590698242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.008948087692260742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.005350828170776367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.37534666061401367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.6055259704589844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="3.1655402183532715"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.20510196685791016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.00919485092163086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.004309892654418945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.021192073822021484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.02359747886657715"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.030947446823120117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.030675411224365234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.008135795593261719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0029850006103515625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0317692756652832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.04186725616455078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.13674139976501465"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.03460860252380371"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.021834373474121094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.006659269332885742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.02891993522644043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.04813051223754883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.05164694786071777"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.07422995567321777"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.02950572967529297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.006298065185546875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.18584084510803223"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.10270953178405762"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.3669157028198242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.08641839027404785"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.009211301803588867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.005634784698486328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.3731575012207031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.6177797317504883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="3.192492723464966"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.19625163078308105"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;0]" time="0.08844232559204102"><system-err>12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 L2ProductP1: Integrate the products of the shape functions on each element
12:44 L2ProductP1: Determine global dofs ...
12:44 L2ProductP1: Boundary treatment ...
12:44 L2ProductP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 L2ProductP1: Integrate the products of the shape functions on each element
12:44 L2ProductP1: Determine global dofs ...
12:44 L2ProductP1: Boundary treatment ...
12:44 L2ProductP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;1]" time="0.07276511192321777"><system-err>12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 L2ProductP1: Integrate the products of the shape functions on each element
12:44 L2ProductP1: Determine global dofs ...
12:44 L2ProductP1: Boundary treatment ...
12:44 L2ProductP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 L2ProductP1: Integrate the products of the shape functions on each element
12:44 L2ProductP1: Determine global dofs ...
12:44 L2ProductP1: Boundary treatment ...
12:44 L2ProductP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;2]" time="0.07265305519104004"><system-err>12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 L2ProductP1: Integrate the products of the shape functions on each element
12:44 L2ProductP1: Determine global dofs ...
12:44 L2ProductP1: Boundary treatment ...
12:44 L2ProductP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 L2ProductP1: Integrate the products of the shape functions on each element
12:44 L2ProductP1: Determine global dofs ...
12:44 L2ProductP1: Boundary treatment ...
12:44 L2ProductP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;3]" time="0.06933879852294922"><system-err>12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 L2ProductP1: Integrate the products of the shape functions on each element
12:44 L2ProductP1: Determine global dofs ...
12:44 L2ProductP1: Boundary treatment ...
12:44 L2ProductP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
12:44 L2ProductP1: Integrate the products of the shape functions on each element
12:44 L2ProductP1: Determine global dofs ...
12:44 L2ProductP1: Boundary treatment ...
12:44 L2ProductP1: Assemble system matrix ...
12:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:44 DiffusionOperatorP1: Determine global dofs ...
12:44 DiffusionOperatorP1: Boundary treatment ...
12:44 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;4]" time="0.07158541679382324"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;5]" time="0.06894302368164062"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;6]" time="0.07076215744018555"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;7]" time="0.06737399101257324"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;8]" time="0.07005858421325684"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;9]" time="0.06693506240844727"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;10]" time="0.07082796096801758"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;11]" time="0.06817984580993652"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;12]" time="0.06551599502563477"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;13]" time="0.061971426010131836"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;14]" time="0.07209587097167969"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;15]" time="0.0693511962890625"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;16]" time="0.06543374061584473"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;17]" time="0.060246944427490234"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;18]" time="0.07362079620361328"><system-err>12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
12:45 L2ProductP1: Integrate the products of the shape functions on each element
12:45 L2ProductP1: Determine global dofs ...
12:45 L2ProductP1: Boundary treatment ...
12:45 L2ProductP1: Assemble system matrix ...
12:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:45 DiffusionOperatorP1: Determine global dofs ...
12:45 DiffusionOperatorP1: Boundary treatment ...
12:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;19]" time="0.06923508644104004"><system-err>12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 L2ProductP1: Integrate the products of the shape functions on each element
12:46 L2ProductP1: Determine global dofs ...
12:46 L2ProductP1: Boundary treatment ...
12:46 L2ProductP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 L2ProductP1: Integrate the products of the shape functions on each element
12:46 L2ProductP1: Determine global dofs ...
12:46 L2ProductP1: Boundary treatment ...
12:46 L2ProductP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;20]" time="0.07297253608703613"><system-err>12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 L2ProductP1: Integrate the products of the shape functions on each element
12:46 L2ProductP1: Determine global dofs ...
12:46 L2ProductP1: Boundary treatment ...
12:46 L2ProductP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 L2ProductP1: Integrate the products of the shape functions on each element
12:46 L2ProductP1: Determine global dofs ...
12:46 L2ProductP1: Boundary treatment ...
12:46 L2ProductP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;21]" time="0.0688178539276123"><system-err>12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 L2ProductP1: Integrate the products of the shape functions on each element
12:46 L2ProductP1: Determine global dofs ...
12:46 L2ProductP1: Boundary treatment ...
12:46 L2ProductP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 L2ProductP1: Integrate the products of the shape functions on each element
12:46 L2ProductP1: Determine global dofs ...
12:46 L2ProductP1: Boundary treatment ...
12:46 L2ProductP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;22]" time="0.0720360279083252"><system-err>12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 L2ProductP1: Integrate the products of the shape functions on each element
12:46 L2ProductP1: Determine global dofs ...
12:46 L2ProductP1: Boundary treatment ...
12:46 L2ProductP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 L2ProductP1: Integrate the products of the shape functions on each element
12:46 L2ProductP1: Determine global dofs ...
12:46 L2ProductP1: Boundary treatment ...
12:46 L2ProductP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;23]" time="0.0677189826965332"><system-err>12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 L2ProductP1: Integrate the products of the shape functions on each element
12:46 L2ProductP1: Determine global dofs ...
12:46 L2ProductP1: Boundary treatment ...
12:46 L2ProductP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
12:46 L2ProductP1: Integrate the products of the shape functions on each element
12:46 L2ProductP1: Determine global dofs ...
12:46 L2ProductP1: Boundary treatment ...
12:46 L2ProductP1: Assemble system matrix ...
12:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:46 DiffusionOperatorP1: Determine global dofs ...
12:46 DiffusionOperatorP1: Boundary treatment ...
12:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;24]" time="0.04779458045959473"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;25]" time="0.04833245277404785"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;26]" time="0.04801225662231445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;27]" time="0.04348421096801758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;28]" time="0.04364824295043945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;29]" time="0.043833255767822266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;30]" time="0.0426030158996582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;31]" time="0.04945182800292969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;32]" time="0.1500711441040039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;33]" time="0.11622190475463867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;34]" time="0.048683881759643555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;35]" time="0.12022161483764648"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;36]" time="0.05428457260131836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;0]" time="0.0203855037689209"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;1]" time="0.020888805389404297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;2]" time="0.14419341087341309"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;3]" time="0.2257843017578125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;4]" time="0.04049348831176758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;5]" time="0.01552128791809082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;6]" time="0.015383481979370117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;7]" time="0.24155116081237793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;8]" time="1.6965312957763672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;9]" time="0.2742955684661865"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;10]" time="0.03592658042907715"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;11]" time="0.4101734161376953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;12]" time="0.0592954158782959"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;13]" time="0.23194122314453125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;14]" time="0.4062619209289551"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;15]" time="0.7082505226135254"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;16]" time="0.8194930553436279"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;17]" time="0.052156686782836914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;18]" time="0.05517578125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;19]" time="1.4261977672576904"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;20]" time="4.367266416549683"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;21]" time="10.38157606124878"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;22]" time="0.01597738265991211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;23]" time="0.01608729362487793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;24]" time="3.6459922790527344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;25]" time="50.50759172439575"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;26]" time="7.4243550300598145"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;0]" time="0.017612934112548828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;1]" time="0.018065690994262695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;2]" time="0.13094329833984375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;3]" time="0.20699596405029297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;4]" time="0.03810381889343262"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;5]" time="0.014398813247680664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;6]" time="0.014855384826660156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;7]" time="0.22298216819763184"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;8]" time="1.5093629360198975"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;9]" time="0.24493908882141113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;10]" time="0.03210735321044922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;11]" time="0.3642463684082031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;12]" time="0.05346870422363281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;13]" time="0.2039480209350586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;14]" time="0.3516087532043457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;15]" time="0.6036252975463867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;16]" time="0.6845829486846924"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;17]" time="0.04181241989135742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;18]" time="0.0414576530456543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;19]" time="1.4006757736206055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;20]" time="4.329613208770752"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;21]" time="10.32914924621582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;22]" time="0.015194177627563477"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;23]" time="0.01580667495727539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;24]" time="3.544612169265747"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;25]" time="50.95313620567322"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;26]" time="7.397746562957764"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;0]" time="0.01595759391784668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;1]" time="0.017370939254760742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;2]" time="0.12575244903564453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;3]" time="0.19690346717834473"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;4]" time="0.035939931869506836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;5]" time="0.014007329940795898"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;6]" time="0.013927698135375977"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;7]" time="0.210479736328125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;8]" time="1.4524903297424316"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;9]" time="0.24576830863952637"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;10]" time="0.032053232192993164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;11]" time="0.363344669342041"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;12]" time="0.05366206169128418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;13]" time="0.19658398628234863"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;14]" time="0.35462427139282227"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;15]" time="0.5934584140777588"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;16]" time="0.675616979598999"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;17]" time="0.04150032997131348"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;18]" time="0.04188704490661621"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;19]" time="1.3939402103424072"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;20]" time="4.264904737472534"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;21]" time="9.699857711791992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;22]" time="0.014989852905273438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;23]" time="0.015636444091796875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;24]" time="3.5113868713378906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;25]" time="51.2688524723053"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;26]" time="7.589209794998169"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;0]" time="0.2542436122894287"><system-err>16:55 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:55 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:55 DiffusionOperatorP1: Determine global dofs ...
16:55 DiffusionOperatorP1: Boundary treatment ...
16:55 DiffusionOperatorP1: Assemble system matrix ...
16:55 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:55 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:55 DiffusionOperatorP1: Determine global dofs ...
16:55 DiffusionOperatorP1: Boundary treatment ...
16:55 DiffusionOperatorP1: Assemble system matrix ...
16:55 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:55 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:55 DiffusionOperatorP1: Determine global dofs ...
16:55 DiffusionOperatorP1: Boundary treatment ...
16:55 DiffusionOperatorP1: Assemble system matrix ...
16:55 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:55 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:55 DiffusionOperatorP1: Determine global dofs ...
16:55 DiffusionOperatorP1: Boundary treatment ...
16:55 DiffusionOperatorP1: Assemble system matrix ...
16:55 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:55 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:55 DiffusionOperatorP1: Determine global dofs ...
16:55 DiffusionOperatorP1: Boundary treatment ...
16:55 DiffusionOperatorP1: Assemble system matrix ...
16:55 L2ProductP1: Integrate the products of the shape functions on each element
16:55 L2ProductP1: Determine global dofs ...
16:55 L2ProductP1: Boundary treatment ...
16:55 L2ProductP1: Assemble system matrix ...
16:55 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:55 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:55 DiffusionOperatorP1: Determine global dofs ...
16:55 DiffusionOperatorP1: Boundary treatment ...
16:55 DiffusionOperatorP1: Assemble system matrix ...
16:55 L2ProductP1: Integrate the products of the shape functions on each element
16:55 L2ProductP1: Determine global dofs ...
16:55 L2ProductP1: Boundary treatment ...
16:55 L2ProductP1: Assemble system matrix ...
16:55 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:55 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:55 DiffusionOperatorP1: Determine global dofs ...
16:55 DiffusionOperatorP1: Boundary treatment ...
16:55 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;1]" time="0.2674555778503418"><system-err>16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 L2ProductP1: Integrate the products of the shape functions on each element
16:56 L2ProductP1: Determine global dofs ...
16:56 L2ProductP1: Boundary treatment ...
16:56 L2ProductP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 L2ProductP1: Integrate the products of the shape functions on each element
16:56 L2ProductP1: Determine global dofs ...
16:56 L2ProductP1: Boundary treatment ...
16:56 L2ProductP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;2]" time="0.2639119625091553"><system-err>16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 L2ProductP1: Integrate the products of the shape functions on each element
16:56 L2ProductP1: Determine global dofs ...
16:56 L2ProductP1: Boundary treatment ...
16:56 L2ProductP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 L2ProductP1: Integrate the products of the shape functions on each element
16:56 L2ProductP1: Determine global dofs ...
16:56 L2ProductP1: Boundary treatment ...
16:56 L2ProductP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;3]" time="0.2596898078918457"><system-err>16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 L2ProductP1: Integrate the products of the shape functions on each element
16:56 L2ProductP1: Determine global dofs ...
16:56 L2ProductP1: Boundary treatment ...
16:56 L2ProductP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 L2ProductP1: Integrate the products of the shape functions on each element
16:56 L2ProductP1: Determine global dofs ...
16:56 L2ProductP1: Boundary treatment ...
16:56 L2ProductP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;4]" time="0.2582364082336426"><system-err>16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 L2ProductP1: Integrate the products of the shape functions on each element
16:56 L2ProductP1: Determine global dofs ...
16:56 L2ProductP1: Boundary treatment ...
16:56 L2ProductP1: Assemble system matrix ...
16:56 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:56 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:56 DiffusionOperatorP1: Determine global dofs ...
16:56 DiffusionOperatorP1: Boundary treatment ...
16:56 DiffusionOperatorP1: Assemble system matrix ...
16:56 L2ProductP1: Integrate the products of the shape functions on each element
16:56 L2ProductP1: Determine global dofs ...
16:56 L2ProductP1: Boundary treatment ...
16:57 L2ProductP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;5]" time="0.26300716400146484"><system-err>16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 L2ProductP1: Integrate the products of the shape functions on each element
16:57 L2ProductP1: Determine global dofs ...
16:57 L2ProductP1: Boundary treatment ...
16:57 L2ProductP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 L2ProductP1: Integrate the products of the shape functions on each element
16:57 L2ProductP1: Determine global dofs ...
16:57 L2ProductP1: Boundary treatment ...
16:57 L2ProductP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;6]" time="0.2654716968536377"><system-err>16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 L2ProductP1: Integrate the products of the shape functions on each element
16:57 L2ProductP1: Determine global dofs ...
16:57 L2ProductP1: Boundary treatment ...
16:57 L2ProductP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 L2ProductP1: Integrate the products of the shape functions on each element
16:57 L2ProductP1: Determine global dofs ...
16:57 L2ProductP1: Boundary treatment ...
16:57 L2ProductP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;7]" time="0.26352596282958984"><system-err>16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 L2ProductP1: Integrate the products of the shape functions on each element
16:57 L2ProductP1: Determine global dofs ...
16:57 L2ProductP1: Boundary treatment ...
16:57 L2ProductP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
16:57 L2ProductP1: Integrate the products of the shape functions on each element
16:57 L2ProductP1: Determine global dofs ...
16:57 L2ProductP1: Boundary treatment ...
16:57 L2ProductP1: Assemble system matrix ...
16:57 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:57 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:57 DiffusionOperatorP1: Determine global dofs ...
16:57 DiffusionOperatorP1: Boundary treatment ...
16:57 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;8]" time="0.2591397762298584"><system-err>16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 L2ProductP1: Integrate the products of the shape functions on each element
16:58 L2ProductP1: Determine global dofs ...
16:58 L2ProductP1: Boundary treatment ...
16:58 L2ProductP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 L2ProductP1: Integrate the products of the shape functions on each element
16:58 L2ProductP1: Determine global dofs ...
16:58 L2ProductP1: Boundary treatment ...
16:58 L2ProductP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;9]" time="0.2625565528869629"><system-err>16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 L2ProductP1: Integrate the products of the shape functions on each element
16:58 L2ProductP1: Determine global dofs ...
16:58 L2ProductP1: Boundary treatment ...
16:58 L2ProductP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 L2ProductP1: Integrate the products of the shape functions on each element
16:58 L2ProductP1: Determine global dofs ...
16:58 L2ProductP1: Boundary treatment ...
16:58 L2ProductP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;10]" time="0.2657034397125244"><system-err>16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 L2ProductP1: Integrate the products of the shape functions on each element
16:58 L2ProductP1: Determine global dofs ...
16:58 L2ProductP1: Boundary treatment ...
16:58 L2ProductP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 L2ProductP1: Integrate the products of the shape functions on each element
16:58 L2ProductP1: Determine global dofs ...
16:58 L2ProductP1: Boundary treatment ...
16:58 L2ProductP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;11]" time="0.28731417655944824"><system-err>16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 L2ProductP1: Integrate the products of the shape functions on each element
16:58 L2ProductP1: Determine global dofs ...
16:58 L2ProductP1: Boundary treatment ...
16:58 L2ProductP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
16:58 L2ProductP1: Integrate the products of the shape functions on each element
16:58 L2ProductP1: Determine global dofs ...
16:58 L2ProductP1: Boundary treatment ...
16:58 L2ProductP1: Assemble system matrix ...
16:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:58 DiffusionOperatorP1: Determine global dofs ...
16:58 DiffusionOperatorP1: Boundary treatment ...
16:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;12]" time="0.2483994960784912"><system-err>16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 L2ProductP1: Integrate the products of the shape functions on each element
16:59 L2ProductP1: Determine global dofs ...
16:59 L2ProductP1: Boundary treatment ...
16:59 L2ProductP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 L2ProductP1: Integrate the products of the shape functions on each element
16:59 L2ProductP1: Determine global dofs ...
16:59 L2ProductP1: Boundary treatment ...
16:59 L2ProductP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;13]" time="0.2378373146057129"><system-err>16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 L2ProductP1: Integrate the products of the shape functions on each element
16:59 L2ProductP1: Determine global dofs ...
16:59 L2ProductP1: Boundary treatment ...
16:59 L2ProductP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 L2ProductP1: Integrate the products of the shape functions on each element
16:59 L2ProductP1: Determine global dofs ...
16:59 L2ProductP1: Boundary treatment ...
16:59 L2ProductP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;14]" time="0.2672762870788574"><system-err>16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 L2ProductP1: Integrate the products of the shape functions on each element
16:59 L2ProductP1: Determine global dofs ...
16:59 L2ProductP1: Boundary treatment ...
16:59 L2ProductP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 L2ProductP1: Integrate the products of the shape functions on each element
16:59 L2ProductP1: Determine global dofs ...
16:59 L2ProductP1: Boundary treatment ...
16:59 L2ProductP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;15]" time="0.27036452293395996"><system-err>16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 L2ProductP1: Integrate the products of the shape functions on each element
16:59 L2ProductP1: Determine global dofs ...
16:59 L2ProductP1: Boundary treatment ...
16:59 L2ProductP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
16:59 L2ProductP1: Integrate the products of the shape functions on each element
16:59 L2ProductP1: Determine global dofs ...
16:59 L2ProductP1: Boundary treatment ...
16:59 L2ProductP1: Assemble system matrix ...
16:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:59 DiffusionOperatorP1: Determine global dofs ...
16:59 DiffusionOperatorP1: Boundary treatment ...
16:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;16]" time="0.22698688507080078"><system-err>17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 L2ProductP1: Integrate the products of the shape functions on each element
17:00 L2ProductP1: Determine global dofs ...
17:00 L2ProductP1: Boundary treatment ...
17:00 L2ProductP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 L2ProductP1: Integrate the products of the shape functions on each element
17:00 L2ProductP1: Determine global dofs ...
17:00 L2ProductP1: Boundary treatment ...
17:00 L2ProductP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;17]" time="0.2239208221435547"><system-err>17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 L2ProductP1: Integrate the products of the shape functions on each element
17:00 L2ProductP1: Determine global dofs ...
17:00 L2ProductP1: Boundary treatment ...
17:00 L2ProductP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 L2ProductP1: Integrate the products of the shape functions on each element
17:00 L2ProductP1: Determine global dofs ...
17:00 L2ProductP1: Boundary treatment ...
17:00 L2ProductP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;18]" time="0.275738000869751"><system-err>17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 L2ProductP1: Integrate the products of the shape functions on each element
17:00 L2ProductP1: Determine global dofs ...
17:00 L2ProductP1: Boundary treatment ...
17:00 L2ProductP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 L2ProductP1: Integrate the products of the shape functions on each element
17:00 L2ProductP1: Determine global dofs ...
17:00 L2ProductP1: Boundary treatment ...
17:00 L2ProductP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;19]" time="0.2693145275115967"><system-err>17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 L2ProductP1: Integrate the products of the shape functions on each element
17:00 L2ProductP1: Determine global dofs ...
17:00 L2ProductP1: Boundary treatment ...
17:00 L2ProductP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
17:00 L2ProductP1: Integrate the products of the shape functions on each element
17:00 L2ProductP1: Determine global dofs ...
17:00 L2ProductP1: Boundary treatment ...
17:00 L2ProductP1: Assemble system matrix ...
17:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:00 DiffusionOperatorP1: Determine global dofs ...
17:00 DiffusionOperatorP1: Boundary treatment ...
17:00 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;20]" time="0.26627588272094727"><system-err>17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 L2ProductP1: Integrate the products of the shape functions on each element
17:01 L2ProductP1: Determine global dofs ...
17:01 L2ProductP1: Boundary treatment ...
17:01 L2ProductP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 L2ProductP1: Integrate the products of the shape functions on each element
17:01 L2ProductP1: Determine global dofs ...
17:01 L2ProductP1: Boundary treatment ...
17:01 L2ProductP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;21]" time="0.2680850028991699"><system-err>17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 L2ProductP1: Integrate the products of the shape functions on each element
17:01 L2ProductP1: Determine global dofs ...
17:01 L2ProductP1: Boundary treatment ...
17:01 L2ProductP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 L2ProductP1: Integrate the products of the shape functions on each element
17:01 L2ProductP1: Determine global dofs ...
17:01 L2ProductP1: Boundary treatment ...
17:01 L2ProductP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;22]" time="0.2707252502441406"><system-err>17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 L2ProductP1: Integrate the products of the shape functions on each element
17:01 L2ProductP1: Determine global dofs ...
17:01 L2ProductP1: Boundary treatment ...
17:01 L2ProductP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 L2ProductP1: Integrate the products of the shape functions on each element
17:01 L2ProductP1: Determine global dofs ...
17:01 L2ProductP1: Boundary treatment ...
17:01 L2ProductP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;23]" time="0.26706504821777344"><system-err>17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 L2ProductP1: Integrate the products of the shape functions on each element
17:01 L2ProductP1: Determine global dofs ...
17:01 L2ProductP1: Boundary treatment ...
17:01 L2ProductP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
17:01 L2ProductP1: Integrate the products of the shape functions on each element
17:01 L2ProductP1: Determine global dofs ...
17:01 L2ProductP1: Boundary treatment ...
17:01 L2ProductP1: Assemble system matrix ...
17:01 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:01 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:01 DiffusionOperatorP1: Determine global dofs ...
17:01 DiffusionOperatorP1: Boundary treatment ...
17:01 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;24]" time="0.2726631164550781"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;25]" time="0.2767491340637207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;26]" time="0.27043938636779785"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;27]" time="0.21207976341247559"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;28]" time="0.21511101722717285"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;29]" time="0.22539997100830078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;30]" time="0.22103452682495117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;31]" time="0.22183537483215332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;32]" time="0.7835400104522705"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;33]" time="0.5893018245697021"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;34]" time="0.2345290184020996"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;35]" time="0.5838873386383057"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;36]" time="0.26862525939941406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;0]" time="0.004509687423706055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;1]" time="0.0015320777893066406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;2]" time="0.005925893783569336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;3]" time="0.004717350006103516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;4]" time="0.005365848541259766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;5]" time="0.0026526451110839844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;6]" time="0.0014920234680175781"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;7]" time="0.005707979202270508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;8]" time="0.011325359344482422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;9]" time="0.018119096755981445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;10]" time="0.006865739822387695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;11]" time="0.002043008804321289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;12]" time="0.013810873031616211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;13]" time="0.010250329971313477"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;14]" time="0.016885042190551758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;15]" time="0.006385326385498047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;16]" time="0.002384185791015625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;17]" time="0.010151147842407227"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;18]" time="0.043915510177612305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;19]" time="0.04349565505981445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;20]" time="0.0035088062286376953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;21]" time="0.0024826526641845703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;22]" time="0.014233827590942383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;23]" time="0.1178431510925293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;24]" time="0.22415924072265625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.004172801971435547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0029723644256591797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0045964717864990234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0066204071044921875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.006597280502319336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.004907131195068359"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0030791759490966797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0032036304473876953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.015517234802246094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.03129291534423828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.10664176940917969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0070955753326416016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.004730939865112305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.008361101150512695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.007000923156738281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.008073091506958008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.011838912963867188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.01224374771118164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.004632234573364258"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0038650035858154297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.03959536552429199"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.04223370552062988"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.14344453811645508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.008059263229370117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0029964447021484375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0041425228118896484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.03649401664733887"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.06065726280212402"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.21218395233154297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.01011037826538086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.00434565544128418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0030918121337890625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.004679679870605469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.006427288055419922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0065419673919677734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.004899263381958008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.002988100051879883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.002963542938232422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.015712738037109375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.03326225280761719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.10754251480102539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.007133960723876953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0050046443939208984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.008539676666259766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0069882869720458984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.008194446563720703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.012354612350463867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.013669729232788086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.004923582077026367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0038199424743652344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.03913235664367676"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.041739463806152344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.1435084342956543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.008358001708984375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.00422978401184082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004289865493774414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.03623032569885254"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.05957603454589844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.21823573112487793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.00983119010925293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0033850669860839844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0029366016387939453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.004850149154663086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.006478548049926758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.006548404693603516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.004870414733886719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0029296875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.003071308135986328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.015317678451538086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.031595468521118164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.1063072681427002"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.007116556167602539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.004992961883544922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.008695840835571289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.007015705108642578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.008242130279541016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.012319087982177734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.013362884521484375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.004690647125244141"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0039098262786865234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.03937983512878418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.042275428771972656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.1414477825164795"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.008742570877075195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0041882991790771484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004233121871948242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.036963701248168945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.06310033798217773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.2135305404663086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.009998083114624023"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.003283262252807617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0030908584594726562"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.004721879959106445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.006545543670654297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.00670933723449707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0050547122955322266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0028989315032958984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0031838417053222656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.015453815460205078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.031737327575683594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.10710549354553223"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.007188558578491211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.005127429962158203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.008841753005981445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.006944417953491211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.00860142707824707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.012608051300048828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0132293701171875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0037407875061035156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0038967132568359375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.04012346267700195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.04276871681213379"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.14244747161865234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.008105993270874023"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0029349327087402344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0041370391845703125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.03583860397338867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.060036659240722656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.2125706672668457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.010574102401733398"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0035860538482666016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0032341480255126953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.004864215850830078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.006803274154663086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.006930112838745117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.005272388458251953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0031435489654541016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0030641555786132812"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.01608419418334961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.032614707946777344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.10744571685791016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.007292270660400391"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.00513005256652832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.008640050888061523"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0071375370025634766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.008405923843383789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.012681961059570312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.013795614242553711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0047550201416015625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004010677337646484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.03943371772766113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.04201984405517578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.14397740364074707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.008349418640136719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.003171205520629883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004626750946044922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.036507606506347656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.06243133544921875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.2251148223876953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.01086282730102539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.004540681838989258"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0032160282135009766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.004893064498901367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.006958484649658203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.007054328918457031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.00558018684387207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0031325817108154297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0030205249786376953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.016425132751464844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.03353548049926758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.10989022254943848"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.007328987121582031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.005193948745727539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.008819341659545898"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.007338047027587891"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.008493423461914062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.012629270553588867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.013457536697387695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0037882328033447266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.003828763961791992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.040743112564086914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.04279470443725586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.14658451080322266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.008324623107910156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0031952857971191406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004461765289306641"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.037882328033447266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.061398983001708984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.2113022804260254"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.01027226448059082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.004467487335205078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0031518936157226562"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.004751920700073242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0067195892333984375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.006758451461791992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.005085945129394531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0031380653381347656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0032012462615966797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.015753507614135742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0319819450378418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.10906004905700684"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.007417917251586914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.005045175552368164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.00876617431640625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.007041215896606445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.008311986923217773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.012628793716430664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.013532400131225586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.003866434097290039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.00394439697265625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.03970456123352051"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.04304003715515137"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.14285826683044434"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.008416891098022461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0031392574310302734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004400730133056641"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.036843299865722656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.06121492385864258"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.21444296836853027"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010773181915283203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.004506826400756836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0030832290649414062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.004997968673706055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.006918668746948242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.00703120231628418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0051381587982177734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.00301361083984375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0030677318572998047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.015841960906982422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.031935930252075195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.10848069190979004"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.00720667839050293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.005335569381713867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.008777141571044922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.007230997085571289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.008481025695800781"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.012725114822387695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.013904809951782227"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0050165653228759766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004242897033691406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.03995800018310547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.04248833656311035"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.1434171199798584"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.008722543716430664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0044291019439697266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.004850625991821289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.0370328426361084"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.06095623970031738"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.21804141998291016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.010721445083618164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0044803619384765625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0032575130462646484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0048716068267822266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0066602230072021484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.006842851638793945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.005120277404785156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0031576156616210938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.003124713897705078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.01562976837158203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.031835079193115234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.10797357559204102"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.00727534294128418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.00516510009765625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.008637189865112305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0073108673095703125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.008577585220336914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.012454986572265625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.013878107070922852"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0049288272857666016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.003987312316894531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.04029083251953125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.04290437698364258"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.14797544479370117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.00836038589477539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.004130125045776367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004270076751708984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.035840511322021484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.059983253479003906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.21284747123718262"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.010811805725097656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="178" name="test_project_array" time="0.0029938220977783203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="188" name="test_project_array_with_product" time="0.002655506134033203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;0]" time="0.002765178680419922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;1]" time="0.0024881362915039062"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;2]" time="0.002233743667602539"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;3]" time="0.10014510154724121"><system-err>17:15 gram_schmidt: Orthonormalizing vector 31 again
17:15 gram_schmidt: Removing linear dependent vector 32
17:15 gram_schmidt: Removing linear dependent vector 33
17:15 gram_schmidt: Removing linear dependent vector 34
17:15 gram_schmidt: Removing linear dependent vector 35
17:15 gram_schmidt: Removing linear dependent vector 36
17:15 gram_schmidt: Removing linear dependent vector 37
17:15 gram_schmidt: Removing linear dependent vector 38
17:15 gram_schmidt: Removing linear dependent vector 39
17:15 gram_schmidt: Removing linear dependent vector 40
17:15 gram_schmidt: Removing linear dependent vector 41
17:15 gram_schmidt: Removing linear dependent vector 42
17:15 gram_schmidt: Orthonormalizing vector 31 again
17:15 gram_schmidt: Removing linear dependent vector 32
17:15 gram_schmidt: Removing linear dependent vector 33
17:15 gram_schmidt: Removing linear dependent vector 34
17:15 gram_schmidt: Removing linear dependent vector 35
17:15 gram_schmidt: Removing linear dependent vector 36
17:15 gram_schmidt: Removing linear dependent vector 37
17:15 gram_schmidt: Removing linear dependent vector 38
17:15 gram_schmidt: Removing linear dependent vector 39
17:15 gram_schmidt: Removing linear dependent vector 40
17:15 gram_schmidt: Removing linear dependent vector 41
17:15 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;4]" time="0.021541833877563477"><system-err>17:15 gram_schmidt: Removing vector 0 of norm 0.0
17:15 gram_schmidt: Removing vector 1 of norm 0.0
17:15 gram_schmidt: Removing vector 2 of norm 0.0
17:15 gram_schmidt: Removing vector 3 of norm 0.0
17:15 gram_schmidt: Removing vector 4 of norm 0.0
17:15 gram_schmidt: Removing vector 5 of norm 0.0
17:15 gram_schmidt: Removing vector 6 of norm 0.0
17:15 gram_schmidt: Removing vector 7 of norm 0.0
17:15 gram_schmidt: Removing vector 8 of norm 0.0
17:15 gram_schmidt: Removing vector 9 of norm 0.0
17:15 gram_schmidt: Removing vector 10 of norm 0.0
17:15 gram_schmidt: Removing vector 11 of norm 0.0
17:15 gram_schmidt: Removing vector 12 of norm 0.0
17:15 gram_schmidt: Removing vector 13 of norm 0.0
17:15 gram_schmidt: Removing vector 14 of norm 0.0
17:15 gram_schmidt: Removing vector 15 of norm 0.0
17:15 gram_schmidt: Removing vector 16 of norm 0.0
17:15 gram_schmidt: Removing vector 17 of norm 0.0
17:15 gram_schmidt: Removing vector 18 of norm 0.0
17:15 gram_schmidt: Removing vector 19 of norm 0.0
17:15 gram_schmidt: Removing vector 20 of norm 0.0
17:15 gram_schmidt: Removing vector 21 of norm 0.0
17:15 gram_schmidt: Removing vector 22 of norm 0.0
17:15 gram_schmidt: Removing vector 23 of norm 0.0
17:15 gram_schmidt: Removing vector 24 of norm 0.0
17:15 gram_schmidt: Removing vector 25 of norm 0.0
17:15 gram_schmidt: Removing vector 26 of norm 0.0
17:15 gram_schmidt: Removing vector 27 of norm 0.0
17:15 gram_schmidt: Removing vector 28 of norm 0.0
17:15 gram_schmidt: Removing vector 29 of norm 0.0
17:15 gram_schmidt: Removing vector 30 of norm 0.0
17:15 gram_schmidt: Removing vector 31 of norm 0.0
17:15 gram_schmidt: Removing vector 32 of norm 0.0
17:15 gram_schmidt: Removing vector 33 of norm 0.0
17:15 gram_schmidt: Removing vector 34 of norm 0.0
17:15 gram_schmidt: Removing vector 35 of norm 0.0
17:15 gram_schmidt: Removing vector 36 of norm 0.0
17:15 gram_schmidt: Removing vector 37 of norm 0.0
17:15 gram_schmidt: Removing vector 38 of norm 0.0
17:15 gram_schmidt: Removing vector 39 of norm 0.0
17:15 gram_schmidt: Removing vector 40 of norm 0.0
17:15 gram_schmidt: Removing vector 41 of norm 0.0
17:15 gram_schmidt: Removing vector 42 of norm 0.0
17:15 gram_schmidt: Removing vector 43 of norm 0.0
17:15 gram_schmidt: Removing vector 44 of norm 0.0
17:15 gram_schmidt: Removing vector 45 of norm 0.0
17:15 gram_schmidt: Removing vector 46 of norm 0.0
17:15 gram_schmidt: Removing vector 47 of norm 0.0
17:15 gram_schmidt: Removing vector 48 of norm 0.0
17:15 gram_schmidt: Removing vector 49 of norm 0.0
17:15 gram_schmidt: Removing vector 50 of norm 0.0
17:15 gram_schmidt: Removing vector 51 of norm 0.0
17:15 gram_schmidt: Removing vector 52 of norm 0.0
17:15 gram_schmidt: Removing vector 53 of norm 0.0
17:15 gram_schmidt: Removing vector 54 of norm 0.0
17:15 gram_schmidt: Removing vector 55 of norm 0.0
17:15 gram_schmidt: Removing vector 56 of norm 0.0
17:15 gram_schmidt: Removing vector 57 of norm 0.0
17:15 gram_schmidt: Removing vector 58 of norm 0.0
17:15 gram_schmidt: Removing vector 59 of norm 0.0
17:15 gram_schmidt: Removing vector 60 of norm 0.0
17:15 gram_schmidt: Removing vector 61 of norm 0.0
17:15 gram_schmidt: Removing vector 62 of norm 0.0
17:15 gram_schmidt: Removing vector 63 of norm 0.0
17:15 gram_schmidt: Removing vector 64 of norm 0.0
17:15 gram_schmidt: Removing vector 65 of norm 0.0
17:15 gram_schmidt: Removing vector 66 of norm 0.0
17:15 gram_schmidt: Removing vector 67 of norm 0.0
17:15 gram_schmidt: Removing vector 68 of norm 0.0
17:15 gram_schmidt: Removing vector 69 of norm 0.0
17:15 gram_schmidt: Removing vector 70 of norm 0.0
17:15 gram_schmidt: Removing vector 71 of norm 0.0
17:15 gram_schmidt: Removing vector 72 of norm 0.0
17:15 gram_schmidt: Removing vector 73 of norm 0.0
17:15 gram_schmidt: Removing vector 74 of norm 0.0
17:15 gram_schmidt: Removing vector 75 of norm 0.0
17:15 gram_schmidt: Removing vector 76 of norm 0.0
17:15 gram_schmidt: Removing vector 77 of norm 0.0
17:15 gram_schmidt: Removing vector 78 of norm 0.0
17:15 gram_schmidt: Removing vector 79 of norm 0.0
17:15 gram_schmidt: Removing vector 80 of norm 0.0
17:15 gram_schmidt: Removing vector 81 of norm 0.0
17:15 gram_schmidt: Removing vector 82 of norm 0.0
17:15 gram_schmidt: Removing vector 83 of norm 0.0
17:15 gram_schmidt: Removing vector 84 of norm 0.0
17:15 gram_schmidt: Removing vector 85 of norm 0.0
17:15 gram_schmidt: Removing vector 86 of norm 0.0
17:15 gram_schmidt: Removing vector 87 of norm 0.0
17:15 gram_schmidt: Removing vector 88 of norm 0.0
17:15 gram_schmidt: Removing vector 89 of norm 0.0
17:15 gram_schmidt: Removing vector 90 of norm 0.0
17:15 gram_schmidt: Removing vector 91 of norm 0.0
17:15 gram_schmidt: Removing vector 92 of norm 0.0
17:15 gram_schmidt: Removing vector 93 of norm 0.0
17:15 gram_schmidt: Removing vector 94 of norm 0.0
17:15 gram_schmidt: Removing vector 95 of norm 0.0
17:15 gram_schmidt: Removing vector 96 of norm 0.0
17:15 gram_schmidt: Removing vector 97 of norm 0.0
17:15 gram_schmidt: Removing vector 98 of norm 0.0
17:15 gram_schmidt: Removing vector 99 of norm 0.0
17:15 gram_schmidt: Removing vector 100 of norm 0.0
17:15 gram_schmidt: Removing vector 101 of norm 0.0
17:15 gram_schmidt: Removing vector 0 of norm 0.0
17:15 gram_schmidt: Removing vector 1 of norm 0.0
17:15 gram_schmidt: Removing vector 2 of norm 0.0
17:15 gram_schmidt: Removing vector 3 of norm 0.0
17:15 gram_schmidt: Removing vector 4 of norm 0.0
17:15 gram_schmidt: Removing vector 5 of norm 0.0
17:15 gram_schmidt: Removing vector 6 of norm 0.0
17:15 gram_schmidt: Removing vector 7 of norm 0.0
17:15 gram_schmidt: Removing vector 8 of norm 0.0
17:15 gram_schmidt: Removing vector 9 of norm 0.0
17:15 gram_schmidt: Removing vector 10 of norm 0.0
17:15 gram_schmidt: Removing vector 11 of norm 0.0
17:15 gram_schmidt: Removing vector 12 of norm 0.0
17:15 gram_schmidt: Removing vector 13 of norm 0.0
17:15 gram_schmidt: Removing vector 14 of norm 0.0
17:15 gram_schmidt: Removing vector 15 of norm 0.0
17:15 gram_schmidt: Removing vector 16 of norm 0.0
17:15 gram_schmidt: Removing vector 17 of norm 0.0
17:15 gram_schmidt: Removing vector 18 of norm 0.0
17:15 gram_schmidt: Removing vector 19 of norm 0.0
17:15 gram_schmidt: Removing vector 20 of norm 0.0
17:15 gram_schmidt: Removing vector 21 of norm 0.0
17:15 gram_schmidt: Removing vector 22 of norm 0.0
17:15 gram_schmidt: Removing vector 23 of norm 0.0
17:15 gram_schmidt: Removing vector 24 of norm 0.0
17:15 gram_schmidt: Removing vector 25 of norm 0.0
17:15 gram_schmidt: Removing vector 26 of norm 0.0
17:15 gram_schmidt: Removing vector 27 of norm 0.0
17:15 gram_schmidt: Removing vector 28 of norm 0.0
17:15 gram_schmidt: Removing vector 29 of norm 0.0
17:15 gram_schmidt: Removing vector 30 of norm 0.0
17:15 gram_schmidt: Removing vector 31 of norm 0.0
17:15 gram_schmidt: Removing vector 32 of norm 0.0
17:15 gram_schmidt: Removing vector 33 of norm 0.0
17:15 gram_schmidt: Removing vector 34 of norm 0.0
17:15 gram_schmidt: Removing vector 35 of norm 0.0
17:15 gram_schmidt: Removing vector 36 of norm 0.0
17:15 gram_schmidt: Removing vector 37 of norm 0.0
17:15 gram_schmidt: Removing vector 38 of norm 0.0
17:15 gram_schmidt: Removing vector 39 of norm 0.0
17:15 gram_schmidt: Removing vector 40 of norm 0.0
17:15 gram_schmidt: Removing vector 41 of norm 0.0
17:15 gram_schmidt: Removing vector 42 of norm 0.0
17:15 gram_schmidt: Removing vector 43 of norm 0.0
17:15 gram_schmidt: Removing vector 44 of norm 0.0
17:15 gram_schmidt: Removing vector 45 of norm 0.0
17:15 gram_schmidt: Removing vector 46 of norm 0.0
17:15 gram_schmidt: Removing vector 47 of norm 0.0
17:15 gram_schmidt: Removing vector 48 of norm 0.0
17:15 gram_schmidt: Removing vector 49 of norm 0.0
17:15 gram_schmidt: Removing vector 50 of norm 0.0
17:15 gram_schmidt: Removing vector 51 of norm 0.0
17:15 gram_schmidt: Removing vector 52 of norm 0.0
17:15 gram_schmidt: Removing vector 53 of norm 0.0
17:15 gram_schmidt: Removing vector 54 of norm 0.0
17:15 gram_schmidt: Removing vector 55 of norm 0.0
17:15 gram_schmidt: Removing vector 56 of norm 0.0
17:15 gram_schmidt: Removing vector 57 of norm 0.0
17:15 gram_schmidt: Removing vector 58 of norm 0.0
17:15 gram_schmidt: Removing vector 59 of norm 0.0
17:15 gram_schmidt: Removing vector 60 of norm 0.0
17:15 gram_schmidt: Removing vector 61 of norm 0.0
17:15 gram_schmidt: Removing vector 62 of norm 0.0
17:15 gram_schmidt: Removing vector 63 of norm 0.0
17:15 gram_schmidt: Removing vector 64 of norm 0.0
17:15 gram_schmidt: Removing vector 65 of norm 0.0
17:15 gram_schmidt: Removing vector 66 of norm 0.0
17:15 gram_schmidt: Removing vector 67 of norm 0.0
17:15 gram_schmidt: Removing vector 68 of norm 0.0
17:15 gram_schmidt: Removing vector 69 of norm 0.0
17:15 gram_schmidt: Removing vector 70 of norm 0.0
17:15 gram_schmidt: Removing vector 71 of norm 0.0
17:15 gram_schmidt: Removing vector 72 of norm 0.0
17:15 gram_schmidt: Removing vector 73 of norm 0.0
17:15 gram_schmidt: Removing vector 74 of norm 0.0
17:15 gram_schmidt: Removing vector 75 of norm 0.0
17:15 gram_schmidt: Removing vector 76 of norm 0.0
17:15 gram_schmidt: Removing vector 77 of norm 0.0
17:15 gram_schmidt: Removing vector 78 of norm 0.0
17:15 gram_schmidt: Removing vector 79 of norm 0.0
17:15 gram_schmidt: Removing vector 80 of norm 0.0
17:15 gram_schmidt: Removing vector 81 of norm 0.0
17:15 gram_schmidt: Removing vector 82 of norm 0.0
17:15 gram_schmidt: Removing vector 83 of norm 0.0
17:15 gram_schmidt: Removing vector 84 of norm 0.0
17:15 gram_schmidt: Removing vector 85 of norm 0.0
17:15 gram_schmidt: Removing vector 86 of norm 0.0
17:15 gram_schmidt: Removing vector 87 of norm 0.0
17:15 gram_schmidt: Removing vector 88 of norm 0.0
17:15 gram_schmidt: Removing vector 89 of norm 0.0
17:15 gram_schmidt: Removing vector 90 of norm 0.0
17:15 gram_schmidt: Removing vector 91 of norm 0.0
17:15 gram_schmidt: Removing vector 92 of norm 0.0
17:15 gram_schmidt: Removing vector 93 of norm 0.0
17:15 gram_schmidt: Removing vector 94 of norm 0.0
17:15 gram_schmidt: Removing vector 95 of norm 0.0
17:15 gram_schmidt: Removing vector 96 of norm 0.0
17:15 gram_schmidt: Removing vector 97 of norm 0.0
17:15 gram_schmidt: Removing vector 98 of norm 0.0
17:15 gram_schmidt: Removing vector 99 of norm 0.0
17:15 gram_schmidt: Removing vector 100 of norm 0.0
17:15 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;5]" time="0.0025887489318847656"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;6]" time="0.0018863677978515625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;7]" time="0.002367734909057617"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;8]" time="0.1910092830657959"><system-err>17:15 gram_schmidt: Orthonormalizing vector 31 again
17:15 gram_schmidt: Removing linear dependent vector 32
17:15 gram_schmidt: Removing linear dependent vector 33
17:15 gram_schmidt: Removing linear dependent vector 34
17:15 gram_schmidt: Removing linear dependent vector 35
17:15 gram_schmidt: Removing linear dependent vector 36
17:15 gram_schmidt: Removing linear dependent vector 37
17:15 gram_schmidt: Removing linear dependent vector 38
17:15 gram_schmidt: Removing linear dependent vector 39
17:15 gram_schmidt: Removing linear dependent vector 40
17:15 gram_schmidt: Removing linear dependent vector 41
17:15 gram_schmidt: Removing linear dependent vector 42
17:15 gram_schmidt: Orthonormalizing vector 31 again
17:15 gram_schmidt: Removing linear dependent vector 32
17:15 gram_schmidt: Removing linear dependent vector 33
17:15 gram_schmidt: Removing linear dependent vector 34
17:15 gram_schmidt: Removing linear dependent vector 35
17:15 gram_schmidt: Removing linear dependent vector 36
17:15 gram_schmidt: Removing linear dependent vector 37
17:15 gram_schmidt: Removing linear dependent vector 38
17:15 gram_schmidt: Removing linear dependent vector 39
17:15 gram_schmidt: Removing linear dependent vector 40
17:15 gram_schmidt: Removing linear dependent vector 41
17:15 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;9]" time="0.026819467544555664"><system-err>17:15 gram_schmidt: Removing vector 0 of norm 0.0
17:15 gram_schmidt: Removing vector 1 of norm 0.0
17:15 gram_schmidt: Removing vector 2 of norm 0.0
17:15 gram_schmidt: Removing vector 3 of norm 0.0
17:15 gram_schmidt: Removing vector 4 of norm 0.0
17:15 gram_schmidt: Removing vector 5 of norm 0.0
17:15 gram_schmidt: Removing vector 6 of norm 0.0
17:15 gram_schmidt: Removing vector 7 of norm 0.0
17:15 gram_schmidt: Removing vector 8 of norm 0.0
17:15 gram_schmidt: Removing vector 9 of norm 0.0
17:15 gram_schmidt: Removing vector 10 of norm 0.0
17:15 gram_schmidt: Removing vector 11 of norm 0.0
17:15 gram_schmidt: Removing vector 12 of norm 0.0
17:15 gram_schmidt: Removing vector 13 of norm 0.0
17:15 gram_schmidt: Removing vector 14 of norm 0.0
17:15 gram_schmidt: Removing vector 15 of norm 0.0
17:15 gram_schmidt: Removing vector 16 of norm 0.0
17:15 gram_schmidt: Removing vector 17 of norm 0.0
17:15 gram_schmidt: Removing vector 18 of norm 0.0
17:15 gram_schmidt: Removing vector 19 of norm 0.0
17:15 gram_schmidt: Removing vector 20 of norm 0.0
17:15 gram_schmidt: Removing vector 21 of norm 0.0
17:15 gram_schmidt: Removing vector 22 of norm 0.0
17:15 gram_schmidt: Removing vector 23 of norm 0.0
17:15 gram_schmidt: Removing vector 24 of norm 0.0
17:15 gram_schmidt: Removing vector 25 of norm 0.0
17:15 gram_schmidt: Removing vector 26 of norm 0.0
17:15 gram_schmidt: Removing vector 27 of norm 0.0
17:15 gram_schmidt: Removing vector 28 of norm 0.0
17:15 gram_schmidt: Removing vector 29 of norm 0.0
17:15 gram_schmidt: Removing vector 30 of norm 0.0
17:15 gram_schmidt: Removing vector 31 of norm 0.0
17:15 gram_schmidt: Removing vector 32 of norm 0.0
17:15 gram_schmidt: Removing vector 33 of norm 0.0
17:15 gram_schmidt: Removing vector 34 of norm 0.0
17:15 gram_schmidt: Removing vector 35 of norm 0.0
17:15 gram_schmidt: Removing vector 36 of norm 0.0
17:15 gram_schmidt: Removing vector 37 of norm 0.0
17:15 gram_schmidt: Removing vector 38 of norm 0.0
17:15 gram_schmidt: Removing vector 39 of norm 0.0
17:15 gram_schmidt: Removing vector 40 of norm 0.0
17:15 gram_schmidt: Removing vector 41 of norm 0.0
17:15 gram_schmidt: Removing vector 42 of norm 0.0
17:15 gram_schmidt: Removing vector 43 of norm 0.0
17:15 gram_schmidt: Removing vector 44 of norm 0.0
17:15 gram_schmidt: Removing vector 45 of norm 0.0
17:15 gram_schmidt: Removing vector 46 of norm 0.0
17:15 gram_schmidt: Removing vector 47 of norm 0.0
17:15 gram_schmidt: Removing vector 48 of norm 0.0
17:15 gram_schmidt: Removing vector 49 of norm 0.0
17:15 gram_schmidt: Removing vector 50 of norm 0.0
17:15 gram_schmidt: Removing vector 51 of norm 0.0
17:15 gram_schmidt: Removing vector 52 of norm 0.0
17:15 gram_schmidt: Removing vector 53 of norm 0.0
17:15 gram_schmidt: Removing vector 54 of norm 0.0
17:15 gram_schmidt: Removing vector 55 of norm 0.0
17:15 gram_schmidt: Removing vector 56 of norm 0.0
17:15 gram_schmidt: Removing vector 57 of norm 0.0
17:15 gram_schmidt: Removing vector 58 of norm 0.0
17:15 gram_schmidt: Removing vector 59 of norm 0.0
17:15 gram_schmidt: Removing vector 60 of norm 0.0
17:15 gram_schmidt: Removing vector 61 of norm 0.0
17:15 gram_schmidt: Removing vector 62 of norm 0.0
17:15 gram_schmidt: Removing vector 63 of norm 0.0
17:15 gram_schmidt: Removing vector 64 of norm 0.0
17:15 gram_schmidt: Removing vector 65 of norm 0.0
17:15 gram_schmidt: Removing vector 66 of norm 0.0
17:15 gram_schmidt: Removing vector 67 of norm 0.0
17:15 gram_schmidt: Removing vector 68 of norm 0.0
17:15 gram_schmidt: Removing vector 69 of norm 0.0
17:15 gram_schmidt: Removing vector 70 of norm 0.0
17:15 gram_schmidt: Removing vector 71 of norm 0.0
17:15 gram_schmidt: Removing vector 72 of norm 0.0
17:15 gram_schmidt: Removing vector 73 of norm 0.0
17:15 gram_schmidt: Removing vector 74 of norm 0.0
17:15 gram_schmidt: Removing vector 75 of norm 0.0
17:15 gram_schmidt: Removing vector 76 of norm 0.0
17:15 gram_schmidt: Removing vector 77 of norm 0.0
17:15 gram_schmidt: Removing vector 78 of norm 0.0
17:15 gram_schmidt: Removing vector 79 of norm 0.0
17:15 gram_schmidt: Removing vector 80 of norm 0.0
17:15 gram_schmidt: Removing vector 81 of norm 0.0
17:15 gram_schmidt: Removing vector 82 of norm 0.0
17:15 gram_schmidt: Removing vector 83 of norm 0.0
17:15 gram_schmidt: Removing vector 84 of norm 0.0
17:15 gram_schmidt: Removing vector 85 of norm 0.0
17:15 gram_schmidt: Removing vector 86 of norm 0.0
17:15 gram_schmidt: Removing vector 87 of norm 0.0
17:15 gram_schmidt: Removing vector 88 of norm 0.0
17:15 gram_schmidt: Removing vector 89 of norm 0.0
17:15 gram_schmidt: Removing vector 90 of norm 0.0
17:15 gram_schmidt: Removing vector 91 of norm 0.0
17:15 gram_schmidt: Removing vector 92 of norm 0.0
17:15 gram_schmidt: Removing vector 93 of norm 0.0
17:15 gram_schmidt: Removing vector 94 of norm 0.0
17:15 gram_schmidt: Removing vector 95 of norm 0.0
17:15 gram_schmidt: Removing vector 96 of norm 0.0
17:15 gram_schmidt: Removing vector 97 of norm 0.0
17:15 gram_schmidt: Removing vector 98 of norm 0.0
17:15 gram_schmidt: Removing vector 99 of norm 0.0
17:15 gram_schmidt: Removing vector 100 of norm 0.0
17:15 gram_schmidt: Removing vector 101 of norm 0.0
17:15 gram_schmidt: Removing vector 0 of norm 0.0
17:15 gram_schmidt: Removing vector 1 of norm 0.0
17:15 gram_schmidt: Removing vector 2 of norm 0.0
17:15 gram_schmidt: Removing vector 3 of norm 0.0
17:15 gram_schmidt: Removing vector 4 of norm 0.0
17:15 gram_schmidt: Removing vector 5 of norm 0.0
17:15 gram_schmidt: Removing vector 6 of norm 0.0
17:15 gram_schmidt: Removing vector 7 of norm 0.0
17:15 gram_schmidt: Removing vector 8 of norm 0.0
17:15 gram_schmidt: Removing vector 9 of norm 0.0
17:15 gram_schmidt: Removing vector 10 of norm 0.0
17:15 gram_schmidt: Removing vector 11 of norm 0.0
17:15 gram_schmidt: Removing vector 12 of norm 0.0
17:15 gram_schmidt: Removing vector 13 of norm 0.0
17:15 gram_schmidt: Removing vector 14 of norm 0.0
17:15 gram_schmidt: Removing vector 15 of norm 0.0
17:15 gram_schmidt: Removing vector 16 of norm 0.0
17:15 gram_schmidt: Removing vector 17 of norm 0.0
17:15 gram_schmidt: Removing vector 18 of norm 0.0
17:15 gram_schmidt: Removing vector 19 of norm 0.0
17:15 gram_schmidt: Removing vector 20 of norm 0.0
17:15 gram_schmidt: Removing vector 21 of norm 0.0
17:15 gram_schmidt: Removing vector 22 of norm 0.0
17:15 gram_schmidt: Removing vector 23 of norm 0.0
17:15 gram_schmidt: Removing vector 24 of norm 0.0
17:15 gram_schmidt: Removing vector 25 of norm 0.0
17:15 gram_schmidt: Removing vector 26 of norm 0.0
17:15 gram_schmidt: Removing vector 27 of norm 0.0
17:15 gram_schmidt: Removing vector 28 of norm 0.0
17:15 gram_schmidt: Removing vector 29 of norm 0.0
17:15 gram_schmidt: Removing vector 30 of norm 0.0
17:15 gram_schmidt: Removing vector 31 of norm 0.0
17:15 gram_schmidt: Removing vector 32 of norm 0.0
17:15 gram_schmidt: Removing vector 33 of norm 0.0
17:15 gram_schmidt: Removing vector 34 of norm 0.0
17:15 gram_schmidt: Removing vector 35 of norm 0.0
17:15 gram_schmidt: Removing vector 36 of norm 0.0
17:15 gram_schmidt: Removing vector 37 of norm 0.0
17:15 gram_schmidt: Removing vector 38 of norm 0.0
17:15 gram_schmidt: Removing vector 39 of norm 0.0
17:15 gram_schmidt: Removing vector 40 of norm 0.0
17:15 gram_schmidt: Removing vector 41 of norm 0.0
17:15 gram_schmidt: Removing vector 42 of norm 0.0
17:15 gram_schmidt: Removing vector 43 of norm 0.0
17:15 gram_schmidt: Removing vector 44 of norm 0.0
17:15 gram_schmidt: Removing vector 45 of norm 0.0
17:15 gram_schmidt: Removing vector 46 of norm 0.0
17:15 gram_schmidt: Removing vector 47 of norm 0.0
17:15 gram_schmidt: Removing vector 48 of norm 0.0
17:15 gram_schmidt: Removing vector 49 of norm 0.0
17:15 gram_schmidt: Removing vector 50 of norm 0.0
17:15 gram_schmidt: Removing vector 51 of norm 0.0
17:15 gram_schmidt: Removing vector 52 of norm 0.0
17:15 gram_schmidt: Removing vector 53 of norm 0.0
17:15 gram_schmidt: Removing vector 54 of norm 0.0
17:15 gram_schmidt: Removing vector 55 of norm 0.0
17:15 gram_schmidt: Removing vector 56 of norm 0.0
17:15 gram_schmidt: Removing vector 57 of norm 0.0
17:15 gram_schmidt: Removing vector 58 of norm 0.0
17:15 gram_schmidt: Removing vector 59 of norm 0.0
17:15 gram_schmidt: Removing vector 60 of norm 0.0
17:15 gram_schmidt: Removing vector 61 of norm 0.0
17:15 gram_schmidt: Removing vector 62 of norm 0.0
17:15 gram_schmidt: Removing vector 63 of norm 0.0
17:15 gram_schmidt: Removing vector 64 of norm 0.0
17:15 gram_schmidt: Removing vector 65 of norm 0.0
17:15 gram_schmidt: Removing vector 66 of norm 0.0
17:15 gram_schmidt: Removing vector 67 of norm 0.0
17:15 gram_schmidt: Removing vector 68 of norm 0.0
17:15 gram_schmidt: Removing vector 69 of norm 0.0
17:15 gram_schmidt: Removing vector 70 of norm 0.0
17:15 gram_schmidt: Removing vector 71 of norm 0.0
17:15 gram_schmidt: Removing vector 72 of norm 0.0
17:15 gram_schmidt: Removing vector 73 of norm 0.0
17:15 gram_schmidt: Removing vector 74 of norm 0.0
17:15 gram_schmidt: Removing vector 75 of norm 0.0
17:15 gram_schmidt: Removing vector 76 of norm 0.0
17:15 gram_schmidt: Removing vector 77 of norm 0.0
17:15 gram_schmidt: Removing vector 78 of norm 0.0
17:15 gram_schmidt: Removing vector 79 of norm 0.0
17:15 gram_schmidt: Removing vector 80 of norm 0.0
17:15 gram_schmidt: Removing vector 81 of norm 0.0
17:15 gram_schmidt: Removing vector 82 of norm 0.0
17:15 gram_schmidt: Removing vector 83 of norm 0.0
17:15 gram_schmidt: Removing vector 84 of norm 0.0
17:15 gram_schmidt: Removing vector 85 of norm 0.0
17:15 gram_schmidt: Removing vector 86 of norm 0.0
17:15 gram_schmidt: Removing vector 87 of norm 0.0
17:15 gram_schmidt: Removing vector 88 of norm 0.0
17:15 gram_schmidt: Removing vector 89 of norm 0.0
17:15 gram_schmidt: Removing vector 90 of norm 0.0
17:15 gram_schmidt: Removing vector 91 of norm 0.0
17:15 gram_schmidt: Removing vector 92 of norm 0.0
17:15 gram_schmidt: Removing vector 93 of norm 0.0
17:15 gram_schmidt: Removing vector 94 of norm 0.0
17:15 gram_schmidt: Removing vector 95 of norm 0.0
17:15 gram_schmidt: Removing vector 96 of norm 0.0
17:15 gram_schmidt: Removing vector 97 of norm 0.0
17:15 gram_schmidt: Removing vector 98 of norm 0.0
17:15 gram_schmidt: Removing vector 99 of norm 0.0
17:15 gram_schmidt: Removing vector 100 of norm 0.0
17:15 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;10]" time="0.0034041404724121094"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;11]" time="0.00631403923034668"><system-err>17:15 gram_schmidt: Removing linear dependent vector 3
17:15 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;12]" time="0.0038330554962158203"><system-err>17:15 gram_schmidt: Removing vector 0 of norm 0.0
17:15 gram_schmidt: Removing vector 1 of norm 0.0
17:15 gram_schmidt: Removing vector 2 of norm 0.0
17:15 gram_schmidt: Removing vector 0 of norm 0.0
17:15 gram_schmidt: Removing vector 1 of norm 0.0
17:15 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;13]" time="0.002555370330810547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;14]" time="0.004630565643310547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;15]" time="0.37883567810058594"><system-err>17:15 gram_schmidt: Removing linear dependent vector 36
17:15 gram_schmidt: Removing linear dependent vector 37
17:15 gram_schmidt: Removing linear dependent vector 38
17:15 gram_schmidt: Removing linear dependent vector 39
17:15 gram_schmidt: Removing linear dependent vector 40
17:15 gram_schmidt: Removing linear dependent vector 41
17:15 gram_schmidt: Removing linear dependent vector 42
17:15 gram_schmidt: Removing linear dependent vector 36
17:15 gram_schmidt: Removing linear dependent vector 37
17:15 gram_schmidt: Removing linear dependent vector 38
17:15 gram_schmidt: Removing linear dependent vector 39
17:15 gram_schmidt: Removing linear dependent vector 40
17:15 gram_schmidt: Removing linear dependent vector 41
17:15 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;16]" time="0.1939990520477295"><system-err>17:15 gram_schmidt: Removing linear dependent vector 3
17:15 gram_schmidt: Removing linear dependent vector 4
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
17:15 gram_schmidt: Removing linear dependent vector 7
17:15 gram_schmidt: Removing linear dependent vector 8
17:15 gram_schmidt: Removing linear dependent vector 9
17:15 gram_schmidt: Removing linear dependent vector 10
17:15 gram_schmidt: Removing linear dependent vector 11
17:15 gram_schmidt: Removing linear dependent vector 12
17:15 gram_schmidt: Removing linear dependent vector 13
17:15 gram_schmidt: Removing linear dependent vector 14
17:15 gram_schmidt: Removing linear dependent vector 15
17:15 gram_schmidt: Removing linear dependent vector 16
17:15 gram_schmidt: Removing linear dependent vector 17
17:15 gram_schmidt: Removing linear dependent vector 18
17:15 gram_schmidt: Removing linear dependent vector 19
17:15 gram_schmidt: Removing linear dependent vector 20
17:15 gram_schmidt: Removing linear dependent vector 21
17:15 gram_schmidt: Removing linear dependent vector 22
17:15 gram_schmidt: Removing linear dependent vector 23
17:15 gram_schmidt: Removing linear dependent vector 24
17:15 gram_schmidt: Removing linear dependent vector 25
17:15 gram_schmidt: Removing linear dependent vector 26
17:15 gram_schmidt: Removing linear dependent vector 27
17:15 gram_schmidt: Removing linear dependent vector 28
17:15 gram_schmidt: Removing linear dependent vector 29
17:15 gram_schmidt: Removing linear dependent vector 30
17:15 gram_schmidt: Removing linear dependent vector 31
17:15 gram_schmidt: Removing linear dependent vector 32
17:15 gram_schmidt: Removing linear dependent vector 33
17:15 gram_schmidt: Removing linear dependent vector 34
17:15 gram_schmidt: Removing linear dependent vector 35
17:15 gram_schmidt: Removing linear dependent vector 36
17:15 gram_schmidt: Removing linear dependent vector 37
17:15 gram_schmidt: Removing linear dependent vector 38
17:15 gram_schmidt: Removing linear dependent vector 39
17:15 gram_schmidt: Removing linear dependent vector 40
17:15 gram_schmidt: Removing linear dependent vector 41
17:15 gram_schmidt: Removing linear dependent vector 42
17:15 gram_schmidt: Removing linear dependent vector 43
17:15 gram_schmidt: Removing linear dependent vector 44
17:15 gram_schmidt: Removing linear dependent vector 45
17:15 gram_schmidt: Removing linear dependent vector 46
17:15 gram_schmidt: Removing linear dependent vector 47
17:15 gram_schmidt: Removing linear dependent vector 48
17:15 gram_schmidt: Removing linear dependent vector 49
17:15 gram_schmidt: Removing linear dependent vector 50
17:15 gram_schmidt: Removing linear dependent vector 51
17:15 gram_schmidt: Removing linear dependent vector 52
17:15 gram_schmidt: Removing linear dependent vector 53
17:15 gram_schmidt: Removing linear dependent vector 54
17:15 gram_schmidt: Removing linear dependent vector 55
17:15 gram_schmidt: Removing linear dependent vector 56
17:15 gram_schmidt: Removing linear dependent vector 57
17:15 gram_schmidt: Removing linear dependent vector 58
17:15 gram_schmidt: Removing linear dependent vector 59
17:15 gram_schmidt: Removing linear dependent vector 60
17:15 gram_schmidt: Removing linear dependent vector 61
17:15 gram_schmidt: Removing linear dependent vector 62
17:15 gram_schmidt: Removing linear dependent vector 63
17:15 gram_schmidt: Removing linear dependent vector 64
17:15 gram_schmidt: Removing linear dependent vector 65
17:15 gram_schmidt: Removing linear dependent vector 66
17:15 gram_schmidt: Removing linear dependent vector 67
17:15 gram_schmidt: Removing linear dependent vector 68
17:15 gram_schmidt: Removing linear dependent vector 69
17:15 gram_schmidt: Removing linear dependent vector 70
17:15 gram_schmidt: Removing linear dependent vector 71
17:15 gram_schmidt: Removing linear dependent vector 72
17:15 gram_schmidt: Removing linear dependent vector 73
17:15 gram_schmidt: Removing linear dependent vector 74
17:16 gram_schmidt: Removing linear dependent vector 75
17:16 gram_schmidt: Removing linear dependent vector 76
17:16 gram_schmidt: Removing linear dependent vector 77
17:16 gram_schmidt: Removing linear dependent vector 78
17:16 gram_schmidt: Removing linear dependent vector 79
17:16 gram_schmidt: Removing linear dependent vector 80
17:16 gram_schmidt: Removing linear dependent vector 81
17:16 gram_schmidt: Removing linear dependent vector 82
17:16 gram_schmidt: Removing linear dependent vector 83
17:16 gram_schmidt: Removing linear dependent vector 84
17:16 gram_schmidt: Removing linear dependent vector 85
17:16 gram_schmidt: Removing linear dependent vector 86
17:16 gram_schmidt: Removing linear dependent vector 87
17:16 gram_schmidt: Removing linear dependent vector 88
17:16 gram_schmidt: Removing linear dependent vector 89
17:16 gram_schmidt: Removing linear dependent vector 90
17:16 gram_schmidt: Removing linear dependent vector 91
17:16 gram_schmidt: Removing linear dependent vector 92
17:16 gram_schmidt: Removing linear dependent vector 93
17:16 gram_schmidt: Removing linear dependent vector 94
17:16 gram_schmidt: Removing linear dependent vector 95
17:16 gram_schmidt: Removing linear dependent vector 96
17:16 gram_schmidt: Removing linear dependent vector 97
17:16 gram_schmidt: Removing linear dependent vector 98
17:16 gram_schmidt: Removing linear dependent vector 99
17:16 gram_schmidt: Removing linear dependent vector 100
17:16 gram_schmidt: Removing linear dependent vector 101
17:16 gram_schmidt: Removing linear dependent vector 3
17:16 gram_schmidt: Removing linear dependent vector 4
17:16 gram_schmidt: Removing linear dependent vector 5
17:16 gram_schmidt: Removing linear dependent vector 6
17:16 gram_schmidt: Removing linear dependent vector 7
17:16 gram_schmidt: Removing linear dependent vector 8
17:16 gram_schmidt: Removing linear dependent vector 9
17:16 gram_schmidt: Removing linear dependent vector 10
17:16 gram_schmidt: Removing linear dependent vector 11
17:16 gram_schmidt: Removing linear dependent vector 12
17:16 gram_schmidt: Removing linear dependent vector 13
17:16 gram_schmidt: Removing linear dependent vector 14
17:16 gram_schmidt: Removing linear dependent vector 15
17:16 gram_schmidt: Removing linear dependent vector 16
17:16 gram_schmidt: Removing linear dependent vector 17
17:16 gram_schmidt: Removing linear dependent vector 18
17:16 gram_schmidt: Removing linear dependent vector 19
17:16 gram_schmidt: Removing linear dependent vector 20
17:16 gram_schmidt: Removing linear dependent vector 21
17:16 gram_schmidt: Removing linear dependent vector 22
17:16 gram_schmidt: Removing linear dependent vector 23
17:16 gram_schmidt: Removing linear dependent vector 24
17:16 gram_schmidt: Removing linear dependent vector 25
17:16 gram_schmidt: Removing linear dependent vector 26
17:16 gram_schmidt: Removing linear dependent vector 27
17:16 gram_schmidt: Removing linear dependent vector 28
17:16 gram_schmidt: Removing linear dependent vector 29
17:16 gram_schmidt: Removing linear dependent vector 30
17:16 gram_schmidt: Removing linear dependent vector 31
17:16 gram_schmidt: Removing linear dependent vector 32
17:16 gram_schmidt: Removing linear dependent vector 33
17:16 gram_schmidt: Removing linear dependent vector 34
17:16 gram_schmidt: Removing linear dependent vector 35
17:16 gram_schmidt: Removing linear dependent vector 36
17:16 gram_schmidt: Removing linear dependent vector 37
17:16 gram_schmidt: Removing linear dependent vector 38
17:16 gram_schmidt: Removing linear dependent vector 39
17:16 gram_schmidt: Removing linear dependent vector 40
17:16 gram_schmidt: Removing linear dependent vector 41
17:16 gram_schmidt: Removing linear dependent vector 42
17:16 gram_schmidt: Removing linear dependent vector 43
17:16 gram_schmidt: Removing linear dependent vector 44
17:16 gram_schmidt: Removing linear dependent vector 45
17:16 gram_schmidt: Removing linear dependent vector 46
17:16 gram_schmidt: Removing linear dependent vector 47
17:16 gram_schmidt: Removing linear dependent vector 48
17:16 gram_schmidt: Removing linear dependent vector 49
17:16 gram_schmidt: Removing linear dependent vector 50
17:16 gram_schmidt: Removing linear dependent vector 51
17:16 gram_schmidt: Removing linear dependent vector 52
17:16 gram_schmidt: Removing linear dependent vector 53
17:16 gram_schmidt: Removing linear dependent vector 54
17:16 gram_schmidt: Removing linear dependent vector 55
17:16 gram_schmidt: Removing linear dependent vector 56
17:16 gram_schmidt: Removing linear dependent vector 57
17:16 gram_schmidt: Removing linear dependent vector 58
17:16 gram_schmidt: Removing linear dependent vector 59
17:16 gram_schmidt: Removing linear dependent vector 60
17:16 gram_schmidt: Removing linear dependent vector 61
17:16 gram_schmidt: Removing linear dependent vector 62
17:16 gram_schmidt: Removing linear dependent vector 63
17:16 gram_schmidt: Removing linear dependent vector 64
17:16 gram_schmidt: Removing linear dependent vector 65
17:16 gram_schmidt: Removing linear dependent vector 66
17:16 gram_schmidt: Removing linear dependent vector 67
17:16 gram_schmidt: Removing linear dependent vector 68
17:16 gram_schmidt: Removing linear dependent vector 69
17:16 gram_schmidt: Removing linear dependent vector 70
17:16 gram_schmidt: Removing linear dependent vector 71
17:16 gram_schmidt: Removing linear dependent vector 72
17:16 gram_schmidt: Removing linear dependent vector 73
17:16 gram_schmidt: Removing linear dependent vector 74
17:16 gram_schmidt: Removing linear dependent vector 75
17:16 gram_schmidt: Removing linear dependent vector 76
17:16 gram_schmidt: Removing linear dependent vector 77
17:16 gram_schmidt: Removing linear dependent vector 78
17:16 gram_schmidt: Removing linear dependent vector 79
17:16 gram_schmidt: Removing linear dependent vector 80
17:16 gram_schmidt: Removing linear dependent vector 81
17:16 gram_schmidt: Removing linear dependent vector 82
17:16 gram_schmidt: Removing linear dependent vector 83
17:16 gram_schmidt: Removing linear dependent vector 84
17:16 gram_schmidt: Removing linear dependent vector 85
17:16 gram_schmidt: Removing linear dependent vector 86
17:16 gram_schmidt: Removing linear dependent vector 87
17:16 gram_schmidt: Removing linear dependent vector 88
17:16 gram_schmidt: Removing linear dependent vector 89
17:16 gram_schmidt: Removing linear dependent vector 90
17:16 gram_schmidt: Removing linear dependent vector 91
17:16 gram_schmidt: Removing linear dependent vector 92
17:16 gram_schmidt: Removing linear dependent vector 93
17:16 gram_schmidt: Removing linear dependent vector 94
17:16 gram_schmidt: Removing linear dependent vector 95
17:16 gram_schmidt: Removing linear dependent vector 96
17:16 gram_schmidt: Removing linear dependent vector 97
17:16 gram_schmidt: Removing linear dependent vector 98
17:16 gram_schmidt: Removing linear dependent vector 99
17:16 gram_schmidt: Removing linear dependent vector 100
17:16 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;17]" time="0.003237485885620117"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;18]" time="0.002395153045654297"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;19]" time="0.004937171936035156"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;20]" time="0.2777736186981201"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;21]" time="1.4521021842956543"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;22]" time="0.0026090145111083984"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;23]" time="0.0018534660339355469"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;24]" time="0.00866556167602539"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;25]" time="0.4045400619506836"><system-err>17:17 gram_schmidt: Orthonormalizing vector 31 again
17:17 gram_schmidt: Removing linear dependent vector 32
17:17 gram_schmidt: Removing linear dependent vector 33
17:17 gram_schmidt: Removing linear dependent vector 34
17:18 gram_schmidt: Removing linear dependent vector 35
17:18 gram_schmidt: Removing linear dependent vector 36
17:18 gram_schmidt: Removing linear dependent vector 37
17:18 gram_schmidt: Removing linear dependent vector 38
17:18 gram_schmidt: Removing linear dependent vector 39
17:18 gram_schmidt: Removing linear dependent vector 40
17:18 gram_schmidt: Removing linear dependent vector 41
17:18 gram_schmidt: Removing linear dependent vector 42
17:18 gram_schmidt: Orthonormalizing vector 31 again
17:18 gram_schmidt: Removing linear dependent vector 32
17:18 gram_schmidt: Removing linear dependent vector 33
17:18 gram_schmidt: Removing linear dependent vector 34
17:18 gram_schmidt: Removing linear dependent vector 35
17:18 gram_schmidt: Removing linear dependent vector 36
17:18 gram_schmidt: Removing linear dependent vector 37
17:18 gram_schmidt: Removing linear dependent vector 38
17:18 gram_schmidt: Removing linear dependent vector 39
17:18 gram_schmidt: Removing linear dependent vector 40
17:18 gram_schmidt: Removing linear dependent vector 41
17:18 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;26]" time="0.23441505432128906"><system-err>17:18 gram_schmidt: Removing vector 0 of norm 0.0
17:18 gram_schmidt: Removing vector 1 of norm 0.0
17:18 gram_schmidt: Removing vector 2 of norm 0.0
17:18 gram_schmidt: Removing vector 3 of norm 0.0
17:18 gram_schmidt: Removing vector 4 of norm 0.0
17:18 gram_schmidt: Removing vector 5 of norm 0.0
17:18 gram_schmidt: Removing vector 6 of norm 0.0
17:18 gram_schmidt: Removing vector 7 of norm 0.0
17:18 gram_schmidt: Removing vector 8 of norm 0.0
17:18 gram_schmidt: Removing vector 9 of norm 0.0
17:18 gram_schmidt: Removing vector 10 of norm 0.0
17:18 gram_schmidt: Removing vector 11 of norm 0.0
17:18 gram_schmidt: Removing vector 12 of norm 0.0
17:18 gram_schmidt: Removing vector 13 of norm 0.0
17:18 gram_schmidt: Removing vector 14 of norm 0.0
17:18 gram_schmidt: Removing vector 15 of norm 0.0
17:18 gram_schmidt: Removing vector 16 of norm 0.0
17:18 gram_schmidt: Removing vector 17 of norm 0.0
17:18 gram_schmidt: Removing vector 18 of norm 0.0
17:18 gram_schmidt: Removing vector 19 of norm 0.0
17:18 gram_schmidt: Removing vector 20 of norm 0.0
17:18 gram_schmidt: Removing vector 21 of norm 0.0
17:18 gram_schmidt: Removing vector 22 of norm 0.0
17:18 gram_schmidt: Removing vector 23 of norm 0.0
17:18 gram_schmidt: Removing vector 24 of norm 0.0
17:18 gram_schmidt: Removing vector 25 of norm 0.0
17:18 gram_schmidt: Removing vector 26 of norm 0.0
17:18 gram_schmidt: Removing vector 27 of norm 0.0
17:18 gram_schmidt: Removing vector 28 of norm 0.0
17:18 gram_schmidt: Removing vector 29 of norm 0.0
17:18 gram_schmidt: Removing vector 30 of norm 0.0
17:18 gram_schmidt: Removing vector 31 of norm 0.0
17:18 gram_schmidt: Removing vector 32 of norm 0.0
17:18 gram_schmidt: Removing vector 33 of norm 0.0
17:18 gram_schmidt: Removing vector 34 of norm 0.0
17:18 gram_schmidt: Removing vector 35 of norm 0.0
17:18 gram_schmidt: Removing vector 36 of norm 0.0
17:18 gram_schmidt: Removing vector 37 of norm 0.0
17:18 gram_schmidt: Removing vector 38 of norm 0.0
17:18 gram_schmidt: Removing vector 39 of norm 0.0
17:18 gram_schmidt: Removing vector 40 of norm 0.0
17:18 gram_schmidt: Removing vector 41 of norm 0.0
17:18 gram_schmidt: Removing vector 42 of norm 0.0
17:18 gram_schmidt: Removing vector 43 of norm 0.0
17:18 gram_schmidt: Removing vector 44 of norm 0.0
17:18 gram_schmidt: Removing vector 45 of norm 0.0
17:18 gram_schmidt: Removing vector 46 of norm 0.0
17:18 gram_schmidt: Removing vector 47 of norm 0.0
17:18 gram_schmidt: Removing vector 48 of norm 0.0
17:18 gram_schmidt: Removing vector 49 of norm 0.0
17:18 gram_schmidt: Removing vector 50 of norm 0.0
17:18 gram_schmidt: Removing vector 51 of norm 0.0
17:18 gram_schmidt: Removing vector 52 of norm 0.0
17:18 gram_schmidt: Removing vector 53 of norm 0.0
17:18 gram_schmidt: Removing vector 54 of norm 0.0
17:18 gram_schmidt: Removing vector 55 of norm 0.0
17:18 gram_schmidt: Removing vector 56 of norm 0.0
17:18 gram_schmidt: Removing vector 57 of norm 0.0
17:18 gram_schmidt: Removing vector 58 of norm 0.0
17:18 gram_schmidt: Removing vector 59 of norm 0.0
17:18 gram_schmidt: Removing vector 60 of norm 0.0
17:18 gram_schmidt: Removing vector 61 of norm 0.0
17:18 gram_schmidt: Removing vector 62 of norm 0.0
17:18 gram_schmidt: Removing vector 63 of norm 0.0
17:18 gram_schmidt: Removing vector 64 of norm 0.0
17:18 gram_schmidt: Removing vector 65 of norm 0.0
17:18 gram_schmidt: Removing vector 66 of norm 0.0
17:18 gram_schmidt: Removing vector 67 of norm 0.0
17:18 gram_schmidt: Removing vector 68 of norm 0.0
17:18 gram_schmidt: Removing vector 69 of norm 0.0
17:18 gram_schmidt: Removing vector 70 of norm 0.0
17:18 gram_schmidt: Removing vector 71 of norm 0.0
17:18 gram_schmidt: Removing vector 72 of norm 0.0
17:18 gram_schmidt: Removing vector 73 of norm 0.0
17:18 gram_schmidt: Removing vector 74 of norm 0.0
17:18 gram_schmidt: Removing vector 75 of norm 0.0
17:18 gram_schmidt: Removing vector 76 of norm 0.0
17:18 gram_schmidt: Removing vector 77 of norm 0.0
17:18 gram_schmidt: Removing vector 78 of norm 0.0
17:18 gram_schmidt: Removing vector 79 of norm 0.0
17:18 gram_schmidt: Removing vector 80 of norm 0.0
17:18 gram_schmidt: Removing vector 81 of norm 0.0
17:18 gram_schmidt: Removing vector 82 of norm 0.0
17:18 gram_schmidt: Removing vector 83 of norm 0.0
17:18 gram_schmidt: Removing vector 84 of norm 0.0
17:18 gram_schmidt: Removing vector 85 of norm 0.0
17:18 gram_schmidt: Removing vector 86 of norm 0.0
17:18 gram_schmidt: Removing vector 87 of norm 0.0
17:18 gram_schmidt: Removing vector 88 of norm 0.0
17:18 gram_schmidt: Removing vector 89 of norm 0.0
17:18 gram_schmidt: Removing vector 90 of norm 0.0
17:18 gram_schmidt: Removing vector 91 of norm 0.0
17:18 gram_schmidt: Removing vector 92 of norm 0.0
17:18 gram_schmidt: Removing vector 93 of norm 0.0
17:18 gram_schmidt: Removing vector 94 of norm 0.0
17:18 gram_schmidt: Removing vector 95 of norm 0.0
17:18 gram_schmidt: Removing vector 96 of norm 0.0
17:18 gram_schmidt: Removing vector 97 of norm 0.0
17:18 gram_schmidt: Removing vector 98 of norm 0.0
17:18 gram_schmidt: Removing vector 99 of norm 0.0
17:18 gram_schmidt: Removing vector 100 of norm 0.0
17:18 gram_schmidt: Removing vector 101 of norm 0.0
17:18 gram_schmidt: Removing vector 0 of norm 0.0
17:18 gram_schmidt: Removing vector 1 of norm 0.0
17:18 gram_schmidt: Removing vector 2 of norm 0.0
17:18 gram_schmidt: Removing vector 3 of norm 0.0
17:18 gram_schmidt: Removing vector 4 of norm 0.0
17:18 gram_schmidt: Removing vector 5 of norm 0.0
17:18 gram_schmidt: Removing vector 6 of norm 0.0
17:18 gram_schmidt: Removing vector 7 of norm 0.0
17:18 gram_schmidt: Removing vector 8 of norm 0.0
17:18 gram_schmidt: Removing vector 9 of norm 0.0
17:18 gram_schmidt: Removing vector 10 of norm 0.0
17:18 gram_schmidt: Removing vector 11 of norm 0.0
17:18 gram_schmidt: Removing vector 12 of norm 0.0
17:18 gram_schmidt: Removing vector 13 of norm 0.0
17:18 gram_schmidt: Removing vector 14 of norm 0.0
17:18 gram_schmidt: Removing vector 15 of norm 0.0
17:18 gram_schmidt: Removing vector 16 of norm 0.0
17:18 gram_schmidt: Removing vector 17 of norm 0.0
17:18 gram_schmidt: Removing vector 18 of norm 0.0
17:18 gram_schmidt: Removing vector 19 of norm 0.0
17:18 gram_schmidt: Removing vector 20 of norm 0.0
17:18 gram_schmidt: Removing vector 21 of norm 0.0
17:18 gram_schmidt: Removing vector 22 of norm 0.0
17:18 gram_schmidt: Removing vector 23 of norm 0.0
17:18 gram_schmidt: Removing vector 24 of norm 0.0
17:18 gram_schmidt: Removing vector 25 of norm 0.0
17:18 gram_schmidt: Removing vector 26 of norm 0.0
17:18 gram_schmidt: Removing vector 27 of norm 0.0
17:18 gram_schmidt: Removing vector 28 of norm 0.0
17:18 gram_schmidt: Removing vector 29 of norm 0.0
17:18 gram_schmidt: Removing vector 30 of norm 0.0
17:18 gram_schmidt: Removing vector 31 of norm 0.0
17:18 gram_schmidt: Removing vector 32 of norm 0.0
17:18 gram_schmidt: Removing vector 33 of norm 0.0
17:18 gram_schmidt: Removing vector 34 of norm 0.0
17:18 gram_schmidt: Removing vector 35 of norm 0.0
17:18 gram_schmidt: Removing vector 36 of norm 0.0
17:18 gram_schmidt: Removing vector 37 of norm 0.0
17:18 gram_schmidt: Removing vector 38 of norm 0.0
17:18 gram_schmidt: Removing vector 39 of norm 0.0
17:18 gram_schmidt: Removing vector 40 of norm 0.0
17:18 gram_schmidt: Removing vector 41 of norm 0.0
17:18 gram_schmidt: Removing vector 42 of norm 0.0
17:18 gram_schmidt: Removing vector 43 of norm 0.0
17:18 gram_schmidt: Removing vector 44 of norm 0.0
17:18 gram_schmidt: Removing vector 45 of norm 0.0
17:18 gram_schmidt: Removing vector 46 of norm 0.0
17:18 gram_schmidt: Removing vector 47 of norm 0.0
17:18 gram_schmidt: Removing vector 48 of norm 0.0
17:18 gram_schmidt: Removing vector 49 of norm 0.0
17:18 gram_schmidt: Removing vector 50 of norm 0.0
17:18 gram_schmidt: Removing vector 51 of norm 0.0
17:18 gram_schmidt: Removing vector 52 of norm 0.0
17:18 gram_schmidt: Removing vector 53 of norm 0.0
17:18 gram_schmidt: Removing vector 54 of norm 0.0
17:18 gram_schmidt: Removing vector 55 of norm 0.0
17:18 gram_schmidt: Removing vector 56 of norm 0.0
17:18 gram_schmidt: Removing vector 57 of norm 0.0
17:18 gram_schmidt: Removing vector 58 of norm 0.0
17:18 gram_schmidt: Removing vector 59 of norm 0.0
17:18 gram_schmidt: Removing vector 60 of norm 0.0
17:18 gram_schmidt: Removing vector 61 of norm 0.0
17:18 gram_schmidt: Removing vector 62 of norm 0.0
17:18 gram_schmidt: Removing vector 63 of norm 0.0
17:18 gram_schmidt: Removing vector 64 of norm 0.0
17:18 gram_schmidt: Removing vector 65 of norm 0.0
17:18 gram_schmidt: Removing vector 66 of norm 0.0
17:18 gram_schmidt: Removing vector 67 of norm 0.0
17:18 gram_schmidt: Removing vector 68 of norm 0.0
17:18 gram_schmidt: Removing vector 69 of norm 0.0
17:18 gram_schmidt: Removing vector 70 of norm 0.0
17:18 gram_schmidt: Removing vector 71 of norm 0.0
17:18 gram_schmidt: Removing vector 72 of norm 0.0
17:18 gram_schmidt: Removing vector 73 of norm 0.0
17:18 gram_schmidt: Removing vector 74 of norm 0.0
17:18 gram_schmidt: Removing vector 75 of norm 0.0
17:18 gram_schmidt: Removing vector 76 of norm 0.0
17:18 gram_schmidt: Removing vector 77 of norm 0.0
17:18 gram_schmidt: Removing vector 78 of norm 0.0
17:18 gram_schmidt: Removing vector 79 of norm 0.0
17:18 gram_schmidt: Removing vector 80 of norm 0.0
17:18 gram_schmidt: Removing vector 81 of norm 0.0
17:18 gram_schmidt: Removing vector 82 of norm 0.0
17:18 gram_schmidt: Removing vector 83 of norm 0.0
17:18 gram_schmidt: Removing vector 84 of norm 0.0
17:18 gram_schmidt: Removing vector 85 of norm 0.0
17:18 gram_schmidt: Removing vector 86 of norm 0.0
17:18 gram_schmidt: Removing vector 87 of norm 0.0
17:18 gram_schmidt: Removing vector 88 of norm 0.0
17:18 gram_schmidt: Removing vector 89 of norm 0.0
17:18 gram_schmidt: Removing vector 90 of norm 0.0
17:18 gram_schmidt: Removing vector 91 of norm 0.0
17:18 gram_schmidt: Removing vector 92 of norm 0.0
17:18 gram_schmidt: Removing vector 93 of norm 0.0
17:18 gram_schmidt: Removing vector 94 of norm 0.0
17:18 gram_schmidt: Removing vector 95 of norm 0.0
17:18 gram_schmidt: Removing vector 96 of norm 0.0
17:18 gram_schmidt: Removing vector 97 of norm 0.0
17:18 gram_schmidt: Removing vector 98 of norm 0.0
17:18 gram_schmidt: Removing vector 99 of norm 0.0
17:18 gram_schmidt: Removing vector 100 of norm 0.0
17:18 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;0]" time="0.0023996829986572266"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;1]" time="0.001983165740966797"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;2]" time="0.0021677017211914062"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;3]" time="0.09952330589294434"><system-err>17:18 gram_schmidt: Orthonormalizing vector 31 again
17:18 gram_schmidt: Removing linear dependent vector 32
17:18 gram_schmidt: Removing linear dependent vector 33
17:18 gram_schmidt: Removing linear dependent vector 34
17:18 gram_schmidt: Removing linear dependent vector 35
17:18 gram_schmidt: Removing linear dependent vector 36
17:18 gram_schmidt: Removing linear dependent vector 37
17:18 gram_schmidt: Removing linear dependent vector 38
17:18 gram_schmidt: Removing linear dependent vector 39
17:18 gram_schmidt: Removing linear dependent vector 40
17:18 gram_schmidt: Removing linear dependent vector 41
17:18 gram_schmidt: Removing linear dependent vector 42
17:18 gram_schmidt: Orthonormalizing vector 31 again
17:18 gram_schmidt: Removing linear dependent vector 32
17:18 gram_schmidt: Removing linear dependent vector 33
17:18 gram_schmidt: Removing linear dependent vector 34
17:18 gram_schmidt: Removing linear dependent vector 35
17:18 gram_schmidt: Removing linear dependent vector 36
17:18 gram_schmidt: Removing linear dependent vector 37
17:18 gram_schmidt: Removing linear dependent vector 38
17:18 gram_schmidt: Removing linear dependent vector 39
17:18 gram_schmidt: Removing linear dependent vector 40
17:18 gram_schmidt: Removing linear dependent vector 41
17:18 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;4]" time="0.02090907096862793"><system-err>17:18 gram_schmidt: Removing vector 0 of norm 0.0
17:18 gram_schmidt: Removing vector 1 of norm 0.0
17:18 gram_schmidt: Removing vector 2 of norm 0.0
17:18 gram_schmidt: Removing vector 3 of norm 0.0
17:18 gram_schmidt: Removing vector 4 of norm 0.0
17:18 gram_schmidt: Removing vector 5 of norm 0.0
17:18 gram_schmidt: Removing vector 6 of norm 0.0
17:18 gram_schmidt: Removing vector 7 of norm 0.0
17:18 gram_schmidt: Removing vector 8 of norm 0.0
17:18 gram_schmidt: Removing vector 9 of norm 0.0
17:18 gram_schmidt: Removing vector 10 of norm 0.0
17:18 gram_schmidt: Removing vector 11 of norm 0.0
17:18 gram_schmidt: Removing vector 12 of norm 0.0
17:18 gram_schmidt: Removing vector 13 of norm 0.0
17:18 gram_schmidt: Removing vector 14 of norm 0.0
17:18 gram_schmidt: Removing vector 15 of norm 0.0
17:18 gram_schmidt: Removing vector 16 of norm 0.0
17:18 gram_schmidt: Removing vector 17 of norm 0.0
17:18 gram_schmidt: Removing vector 18 of norm 0.0
17:18 gram_schmidt: Removing vector 19 of norm 0.0
17:18 gram_schmidt: Removing vector 20 of norm 0.0
17:18 gram_schmidt: Removing vector 21 of norm 0.0
17:18 gram_schmidt: Removing vector 22 of norm 0.0
17:18 gram_schmidt: Removing vector 23 of norm 0.0
17:18 gram_schmidt: Removing vector 24 of norm 0.0
17:18 gram_schmidt: Removing vector 25 of norm 0.0
17:18 gram_schmidt: Removing vector 26 of norm 0.0
17:18 gram_schmidt: Removing vector 27 of norm 0.0
17:18 gram_schmidt: Removing vector 28 of norm 0.0
17:18 gram_schmidt: Removing vector 29 of norm 0.0
17:18 gram_schmidt: Removing vector 30 of norm 0.0
17:18 gram_schmidt: Removing vector 31 of norm 0.0
17:18 gram_schmidt: Removing vector 32 of norm 0.0
17:18 gram_schmidt: Removing vector 33 of norm 0.0
17:18 gram_schmidt: Removing vector 34 of norm 0.0
17:18 gram_schmidt: Removing vector 35 of norm 0.0
17:18 gram_schmidt: Removing vector 36 of norm 0.0
17:18 gram_schmidt: Removing vector 37 of norm 0.0
17:18 gram_schmidt: Removing vector 38 of norm 0.0
17:18 gram_schmidt: Removing vector 39 of norm 0.0
17:18 gram_schmidt: Removing vector 40 of norm 0.0
17:18 gram_schmidt: Removing vector 41 of norm 0.0
17:18 gram_schmidt: Removing vector 42 of norm 0.0
17:18 gram_schmidt: Removing vector 43 of norm 0.0
17:18 gram_schmidt: Removing vector 44 of norm 0.0
17:18 gram_schmidt: Removing vector 45 of norm 0.0
17:18 gram_schmidt: Removing vector 46 of norm 0.0
17:18 gram_schmidt: Removing vector 47 of norm 0.0
17:18 gram_schmidt: Removing vector 48 of norm 0.0
17:18 gram_schmidt: Removing vector 49 of norm 0.0
17:18 gram_schmidt: Removing vector 50 of norm 0.0
17:18 gram_schmidt: Removing vector 51 of norm 0.0
17:18 gram_schmidt: Removing vector 52 of norm 0.0
17:18 gram_schmidt: Removing vector 53 of norm 0.0
17:18 gram_schmidt: Removing vector 54 of norm 0.0
17:18 gram_schmidt: Removing vector 55 of norm 0.0
17:18 gram_schmidt: Removing vector 56 of norm 0.0
17:18 gram_schmidt: Removing vector 57 of norm 0.0
17:18 gram_schmidt: Removing vector 58 of norm 0.0
17:18 gram_schmidt: Removing vector 59 of norm 0.0
17:18 gram_schmidt: Removing vector 60 of norm 0.0
17:18 gram_schmidt: Removing vector 61 of norm 0.0
17:18 gram_schmidt: Removing vector 62 of norm 0.0
17:18 gram_schmidt: Removing vector 63 of norm 0.0
17:18 gram_schmidt: Removing vector 64 of norm 0.0
17:18 gram_schmidt: Removing vector 65 of norm 0.0
17:18 gram_schmidt: Removing vector 66 of norm 0.0
17:18 gram_schmidt: Removing vector 67 of norm 0.0
17:18 gram_schmidt: Removing vector 68 of norm 0.0
17:18 gram_schmidt: Removing vector 69 of norm 0.0
17:18 gram_schmidt: Removing vector 70 of norm 0.0
17:18 gram_schmidt: Removing vector 71 of norm 0.0
17:18 gram_schmidt: Removing vector 72 of norm 0.0
17:18 gram_schmidt: Removing vector 73 of norm 0.0
17:18 gram_schmidt: Removing vector 74 of norm 0.0
17:18 gram_schmidt: Removing vector 75 of norm 0.0
17:18 gram_schmidt: Removing vector 76 of norm 0.0
17:18 gram_schmidt: Removing vector 77 of norm 0.0
17:18 gram_schmidt: Removing vector 78 of norm 0.0
17:18 gram_schmidt: Removing vector 79 of norm 0.0
17:18 gram_schmidt: Removing vector 80 of norm 0.0
17:18 gram_schmidt: Removing vector 81 of norm 0.0
17:18 gram_schmidt: Removing vector 82 of norm 0.0
17:18 gram_schmidt: Removing vector 83 of norm 0.0
17:18 gram_schmidt: Removing vector 84 of norm 0.0
17:18 gram_schmidt: Removing vector 85 of norm 0.0
17:18 gram_schmidt: Removing vector 86 of norm 0.0
17:18 gram_schmidt: Removing vector 87 of norm 0.0
17:18 gram_schmidt: Removing vector 88 of norm 0.0
17:18 gram_schmidt: Removing vector 89 of norm 0.0
17:18 gram_schmidt: Removing vector 90 of norm 0.0
17:18 gram_schmidt: Removing vector 91 of norm 0.0
17:18 gram_schmidt: Removing vector 92 of norm 0.0
17:18 gram_schmidt: Removing vector 93 of norm 0.0
17:18 gram_schmidt: Removing vector 94 of norm 0.0
17:18 gram_schmidt: Removing vector 95 of norm 0.0
17:18 gram_schmidt: Removing vector 96 of norm 0.0
17:18 gram_schmidt: Removing vector 97 of norm 0.0
17:18 gram_schmidt: Removing vector 98 of norm 0.0
17:18 gram_schmidt: Removing vector 99 of norm 0.0
17:18 gram_schmidt: Removing vector 100 of norm 0.0
17:18 gram_schmidt: Removing vector 101 of norm 0.0
17:18 gram_schmidt: Removing vector 0 of norm 0.0
17:18 gram_schmidt: Removing vector 1 of norm 0.0
17:18 gram_schmidt: Removing vector 2 of norm 0.0
17:18 gram_schmidt: Removing vector 3 of norm 0.0
17:18 gram_schmidt: Removing vector 4 of norm 0.0
17:18 gram_schmidt: Removing vector 5 of norm 0.0
17:18 gram_schmidt: Removing vector 6 of norm 0.0
17:18 gram_schmidt: Removing vector 7 of norm 0.0
17:18 gram_schmidt: Removing vector 8 of norm 0.0
17:18 gram_schmidt: Removing vector 9 of norm 0.0
17:18 gram_schmidt: Removing vector 10 of norm 0.0
17:18 gram_schmidt: Removing vector 11 of norm 0.0
17:18 gram_schmidt: Removing vector 12 of norm 0.0
17:18 gram_schmidt: Removing vector 13 of norm 0.0
17:18 gram_schmidt: Removing vector 14 of norm 0.0
17:18 gram_schmidt: Removing vector 15 of norm 0.0
17:18 gram_schmidt: Removing vector 16 of norm 0.0
17:18 gram_schmidt: Removing vector 17 of norm 0.0
17:18 gram_schmidt: Removing vector 18 of norm 0.0
17:18 gram_schmidt: Removing vector 19 of norm 0.0
17:18 gram_schmidt: Removing vector 20 of norm 0.0
17:18 gram_schmidt: Removing vector 21 of norm 0.0
17:18 gram_schmidt: Removing vector 22 of norm 0.0
17:18 gram_schmidt: Removing vector 23 of norm 0.0
17:18 gram_schmidt: Removing vector 24 of norm 0.0
17:18 gram_schmidt: Removing vector 25 of norm 0.0
17:18 gram_schmidt: Removing vector 26 of norm 0.0
17:18 gram_schmidt: Removing vector 27 of norm 0.0
17:18 gram_schmidt: Removing vector 28 of norm 0.0
17:18 gram_schmidt: Removing vector 29 of norm 0.0
17:18 gram_schmidt: Removing vector 30 of norm 0.0
17:18 gram_schmidt: Removing vector 31 of norm 0.0
17:18 gram_schmidt: Removing vector 32 of norm 0.0
17:18 gram_schmidt: Removing vector 33 of norm 0.0
17:18 gram_schmidt: Removing vector 34 of norm 0.0
17:18 gram_schmidt: Removing vector 35 of norm 0.0
17:18 gram_schmidt: Removing vector 36 of norm 0.0
17:18 gram_schmidt: Removing vector 37 of norm 0.0
17:18 gram_schmidt: Removing vector 38 of norm 0.0
17:18 gram_schmidt: Removing vector 39 of norm 0.0
17:18 gram_schmidt: Removing vector 40 of norm 0.0
17:18 gram_schmidt: Removing vector 41 of norm 0.0
17:18 gram_schmidt: Removing vector 42 of norm 0.0
17:18 gram_schmidt: Removing vector 43 of norm 0.0
17:18 gram_schmidt: Removing vector 44 of norm 0.0
17:18 gram_schmidt: Removing vector 45 of norm 0.0
17:18 gram_schmidt: Removing vector 46 of norm 0.0
17:18 gram_schmidt: Removing vector 47 of norm 0.0
17:18 gram_schmidt: Removing vector 48 of norm 0.0
17:18 gram_schmidt: Removing vector 49 of norm 0.0
17:18 gram_schmidt: Removing vector 50 of norm 0.0
17:18 gram_schmidt: Removing vector 51 of norm 0.0
17:18 gram_schmidt: Removing vector 52 of norm 0.0
17:18 gram_schmidt: Removing vector 53 of norm 0.0
17:18 gram_schmidt: Removing vector 54 of norm 0.0
17:18 gram_schmidt: Removing vector 55 of norm 0.0
17:18 gram_schmidt: Removing vector 56 of norm 0.0
17:18 gram_schmidt: Removing vector 57 of norm 0.0
17:18 gram_schmidt: Removing vector 58 of norm 0.0
17:18 gram_schmidt: Removing vector 59 of norm 0.0
17:18 gram_schmidt: Removing vector 60 of norm 0.0
17:18 gram_schmidt: Removing vector 61 of norm 0.0
17:18 gram_schmidt: Removing vector 62 of norm 0.0
17:18 gram_schmidt: Removing vector 63 of norm 0.0
17:18 gram_schmidt: Removing vector 64 of norm 0.0
17:18 gram_schmidt: Removing vector 65 of norm 0.0
17:18 gram_schmidt: Removing vector 66 of norm 0.0
17:18 gram_schmidt: Removing vector 67 of norm 0.0
17:18 gram_schmidt: Removing vector 68 of norm 0.0
17:18 gram_schmidt: Removing vector 69 of norm 0.0
17:18 gram_schmidt: Removing vector 70 of norm 0.0
17:18 gram_schmidt: Removing vector 71 of norm 0.0
17:18 gram_schmidt: Removing vector 72 of norm 0.0
17:18 gram_schmidt: Removing vector 73 of norm 0.0
17:18 gram_schmidt: Removing vector 74 of norm 0.0
17:18 gram_schmidt: Removing vector 75 of norm 0.0
17:18 gram_schmidt: Removing vector 76 of norm 0.0
17:18 gram_schmidt: Removing vector 77 of norm 0.0
17:18 gram_schmidt: Removing vector 78 of norm 0.0
17:18 gram_schmidt: Removing vector 79 of norm 0.0
17:18 gram_schmidt: Removing vector 80 of norm 0.0
17:18 gram_schmidt: Removing vector 81 of norm 0.0
17:18 gram_schmidt: Removing vector 82 of norm 0.0
17:18 gram_schmidt: Removing vector 83 of norm 0.0
17:18 gram_schmidt: Removing vector 84 of norm 0.0
17:18 gram_schmidt: Removing vector 85 of norm 0.0
17:18 gram_schmidt: Removing vector 86 of norm 0.0
17:18 gram_schmidt: Removing vector 87 of norm 0.0
17:18 gram_schmidt: Removing vector 88 of norm 0.0
17:18 gram_schmidt: Removing vector 89 of norm 0.0
17:18 gram_schmidt: Removing vector 90 of norm 0.0
17:18 gram_schmidt: Removing vector 91 of norm 0.0
17:18 gram_schmidt: Removing vector 92 of norm 0.0
17:18 gram_schmidt: Removing vector 93 of norm 0.0
17:18 gram_schmidt: Removing vector 94 of norm 0.0
17:18 gram_schmidt: Removing vector 95 of norm 0.0
17:18 gram_schmidt: Removing vector 96 of norm 0.0
17:18 gram_schmidt: Removing vector 97 of norm 0.0
17:18 gram_schmidt: Removing vector 98 of norm 0.0
17:18 gram_schmidt: Removing vector 99 of norm 0.0
17:18 gram_schmidt: Removing vector 100 of norm 0.0
17:18 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;5]" time="0.002631664276123047"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;6]" time="0.001859426498413086"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;7]" time="0.002268552780151367"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;8]" time="0.19418120384216309"><system-err>17:18 gram_schmidt: Orthonormalizing vector 31 again
17:18 gram_schmidt: Removing linear dependent vector 32
17:18 gram_schmidt: Removing linear dependent vector 33
17:18 gram_schmidt: Removing linear dependent vector 34
17:18 gram_schmidt: Removing linear dependent vector 35
17:18 gram_schmidt: Removing linear dependent vector 36
17:18 gram_schmidt: Removing linear dependent vector 37
17:18 gram_schmidt: Removing linear dependent vector 38
17:18 gram_schmidt: Removing linear dependent vector 39
17:18 gram_schmidt: Removing linear dependent vector 40
17:18 gram_schmidt: Removing linear dependent vector 41
17:18 gram_schmidt: Removing linear dependent vector 42
17:18 gram_schmidt: Orthonormalizing vector 31 again
17:18 gram_schmidt: Removing linear dependent vector 32
17:18 gram_schmidt: Removing linear dependent vector 33
17:18 gram_schmidt: Removing linear dependent vector 34
17:18 gram_schmidt: Removing linear dependent vector 35
17:18 gram_schmidt: Removing linear dependent vector 36
17:18 gram_schmidt: Removing linear dependent vector 37
17:18 gram_schmidt: Removing linear dependent vector 38
17:18 gram_schmidt: Removing linear dependent vector 39
17:18 gram_schmidt: Removing linear dependent vector 40
17:18 gram_schmidt: Removing linear dependent vector 41
17:18 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;9]" time="0.026917457580566406"><system-err>17:18 gram_schmidt: Removing vector 0 of norm 0.0
17:18 gram_schmidt: Removing vector 1 of norm 0.0
17:18 gram_schmidt: Removing vector 2 of norm 0.0
17:18 gram_schmidt: Removing vector 3 of norm 0.0
17:18 gram_schmidt: Removing vector 4 of norm 0.0
17:18 gram_schmidt: Removing vector 5 of norm 0.0
17:18 gram_schmidt: Removing vector 6 of norm 0.0
17:18 gram_schmidt: Removing vector 7 of norm 0.0
17:18 gram_schmidt: Removing vector 8 of norm 0.0
17:18 gram_schmidt: Removing vector 9 of norm 0.0
17:18 gram_schmidt: Removing vector 10 of norm 0.0
17:18 gram_schmidt: Removing vector 11 of norm 0.0
17:18 gram_schmidt: Removing vector 12 of norm 0.0
17:18 gram_schmidt: Removing vector 13 of norm 0.0
17:18 gram_schmidt: Removing vector 14 of norm 0.0
17:18 gram_schmidt: Removing vector 15 of norm 0.0
17:18 gram_schmidt: Removing vector 16 of norm 0.0
17:18 gram_schmidt: Removing vector 17 of norm 0.0
17:18 gram_schmidt: Removing vector 18 of norm 0.0
17:18 gram_schmidt: Removing vector 19 of norm 0.0
17:18 gram_schmidt: Removing vector 20 of norm 0.0
17:18 gram_schmidt: Removing vector 21 of norm 0.0
17:18 gram_schmidt: Removing vector 22 of norm 0.0
17:18 gram_schmidt: Removing vector 23 of norm 0.0
17:18 gram_schmidt: Removing vector 24 of norm 0.0
17:18 gram_schmidt: Removing vector 25 of norm 0.0
17:18 gram_schmidt: Removing vector 26 of norm 0.0
17:18 gram_schmidt: Removing vector 27 of norm 0.0
17:18 gram_schmidt: Removing vector 28 of norm 0.0
17:18 gram_schmidt: Removing vector 29 of norm 0.0
17:18 gram_schmidt: Removing vector 30 of norm 0.0
17:18 gram_schmidt: Removing vector 31 of norm 0.0
17:18 gram_schmidt: Removing vector 32 of norm 0.0
17:18 gram_schmidt: Removing vector 33 of norm 0.0
17:18 gram_schmidt: Removing vector 34 of norm 0.0
17:18 gram_schmidt: Removing vector 35 of norm 0.0
17:18 gram_schmidt: Removing vector 36 of norm 0.0
17:18 gram_schmidt: Removing vector 37 of norm 0.0
17:18 gram_schmidt: Removing vector 38 of norm 0.0
17:18 gram_schmidt: Removing vector 39 of norm 0.0
17:18 gram_schmidt: Removing vector 40 of norm 0.0
17:18 gram_schmidt: Removing vector 41 of norm 0.0
17:18 gram_schmidt: Removing vector 42 of norm 0.0
17:18 gram_schmidt: Removing vector 43 of norm 0.0
17:18 gram_schmidt: Removing vector 44 of norm 0.0
17:18 gram_schmidt: Removing vector 45 of norm 0.0
17:18 gram_schmidt: Removing vector 46 of norm 0.0
17:18 gram_schmidt: Removing vector 47 of norm 0.0
17:18 gram_schmidt: Removing vector 48 of norm 0.0
17:18 gram_schmidt: Removing vector 49 of norm 0.0
17:18 gram_schmidt: Removing vector 50 of norm 0.0
17:18 gram_schmidt: Removing vector 51 of norm 0.0
17:18 gram_schmidt: Removing vector 52 of norm 0.0
17:18 gram_schmidt: Removing vector 53 of norm 0.0
17:18 gram_schmidt: Removing vector 54 of norm 0.0
17:18 gram_schmidt: Removing vector 55 of norm 0.0
17:18 gram_schmidt: Removing vector 56 of norm 0.0
17:18 gram_schmidt: Removing vector 57 of norm 0.0
17:18 gram_schmidt: Removing vector 58 of norm 0.0
17:18 gram_schmidt: Removing vector 59 of norm 0.0
17:18 gram_schmidt: Removing vector 60 of norm 0.0
17:18 gram_schmidt: Removing vector 61 of norm 0.0
17:18 gram_schmidt: Removing vector 62 of norm 0.0
17:18 gram_schmidt: Removing vector 63 of norm 0.0
17:18 gram_schmidt: Removing vector 64 of norm 0.0
17:18 gram_schmidt: Removing vector 65 of norm 0.0
17:18 gram_schmidt: Removing vector 66 of norm 0.0
17:18 gram_schmidt: Removing vector 67 of norm 0.0
17:18 gram_schmidt: Removing vector 68 of norm 0.0
17:18 gram_schmidt: Removing vector 69 of norm 0.0
17:18 gram_schmidt: Removing vector 70 of norm 0.0
17:18 gram_schmidt: Removing vector 71 of norm 0.0
17:18 gram_schmidt: Removing vector 72 of norm 0.0
17:18 gram_schmidt: Removing vector 73 of norm 0.0
17:18 gram_schmidt: Removing vector 74 of norm 0.0
17:18 gram_schmidt: Removing vector 75 of norm 0.0
17:18 gram_schmidt: Removing vector 76 of norm 0.0
17:18 gram_schmidt: Removing vector 77 of norm 0.0
17:18 gram_schmidt: Removing vector 78 of norm 0.0
17:18 gram_schmidt: Removing vector 79 of norm 0.0
17:18 gram_schmidt: Removing vector 80 of norm 0.0
17:18 gram_schmidt: Removing vector 81 of norm 0.0
17:18 gram_schmidt: Removing vector 82 of norm 0.0
17:18 gram_schmidt: Removing vector 83 of norm 0.0
17:18 gram_schmidt: Removing vector 84 of norm 0.0
17:18 gram_schmidt: Removing vector 85 of norm 0.0
17:18 gram_schmidt: Removing vector 86 of norm 0.0
17:18 gram_schmidt: Removing vector 87 of norm 0.0
17:18 gram_schmidt: Removing vector 88 of norm 0.0
17:18 gram_schmidt: Removing vector 89 of norm 0.0
17:18 gram_schmidt: Removing vector 90 of norm 0.0
17:18 gram_schmidt: Removing vector 91 of norm 0.0
17:18 gram_schmidt: Removing vector 92 of norm 0.0
17:18 gram_schmidt: Removing vector 93 of norm 0.0
17:18 gram_schmidt: Removing vector 94 of norm 0.0
17:18 gram_schmidt: Removing vector 95 of norm 0.0
17:18 gram_schmidt: Removing vector 96 of norm 0.0
17:18 gram_schmidt: Removing vector 97 of norm 0.0
17:18 gram_schmidt: Removing vector 98 of norm 0.0
17:18 gram_schmidt: Removing vector 99 of norm 0.0
17:18 gram_schmidt: Removing vector 100 of norm 0.0
17:18 gram_schmidt: Removing vector 101 of norm 0.0
17:18 gram_schmidt: Removing vector 0 of norm 0.0
17:18 gram_schmidt: Removing vector 1 of norm 0.0
17:18 gram_schmidt: Removing vector 2 of norm 0.0
17:18 gram_schmidt: Removing vector 3 of norm 0.0
17:18 gram_schmidt: Removing vector 4 of norm 0.0
17:18 gram_schmidt: Removing vector 5 of norm 0.0
17:18 gram_schmidt: Removing vector 6 of norm 0.0
17:18 gram_schmidt: Removing vector 7 of norm 0.0
17:18 gram_schmidt: Removing vector 8 of norm 0.0
17:18 gram_schmidt: Removing vector 9 of norm 0.0
17:18 gram_schmidt: Removing vector 10 of norm 0.0
17:18 gram_schmidt: Removing vector 11 of norm 0.0
17:18 gram_schmidt: Removing vector 12 of norm 0.0
17:18 gram_schmidt: Removing vector 13 of norm 0.0
17:18 gram_schmidt: Removing vector 14 of norm 0.0
17:18 gram_schmidt: Removing vector 15 of norm 0.0
17:18 gram_schmidt: Removing vector 16 of norm 0.0
17:18 gram_schmidt: Removing vector 17 of norm 0.0
17:18 gram_schmidt: Removing vector 18 of norm 0.0
17:18 gram_schmidt: Removing vector 19 of norm 0.0
17:18 gram_schmidt: Removing vector 20 of norm 0.0
17:18 gram_schmidt: Removing vector 21 of norm 0.0
17:18 gram_schmidt: Removing vector 22 of norm 0.0
17:18 gram_schmidt: Removing vector 23 of norm 0.0
17:18 gram_schmidt: Removing vector 24 of norm 0.0
17:18 gram_schmidt: Removing vector 25 of norm 0.0
17:18 gram_schmidt: Removing vector 26 of norm 0.0
17:18 gram_schmidt: Removing vector 27 of norm 0.0
17:18 gram_schmidt: Removing vector 28 of norm 0.0
17:18 gram_schmidt: Removing vector 29 of norm 0.0
17:18 gram_schmidt: Removing vector 30 of norm 0.0
17:18 gram_schmidt: Removing vector 31 of norm 0.0
17:18 gram_schmidt: Removing vector 32 of norm 0.0
17:18 gram_schmidt: Removing vector 33 of norm 0.0
17:18 gram_schmidt: Removing vector 34 of norm 0.0
17:18 gram_schmidt: Removing vector 35 of norm 0.0
17:18 gram_schmidt: Removing vector 36 of norm 0.0
17:18 gram_schmidt: Removing vector 37 of norm 0.0
17:18 gram_schmidt: Removing vector 38 of norm 0.0
17:18 gram_schmidt: Removing vector 39 of norm 0.0
17:18 gram_schmidt: Removing vector 40 of norm 0.0
17:18 gram_schmidt: Removing vector 41 of norm 0.0
17:18 gram_schmidt: Removing vector 42 of norm 0.0
17:18 gram_schmidt: Removing vector 43 of norm 0.0
17:18 gram_schmidt: Removing vector 44 of norm 0.0
17:18 gram_schmidt: Removing vector 45 of norm 0.0
17:18 gram_schmidt: Removing vector 46 of norm 0.0
17:18 gram_schmidt: Removing vector 47 of norm 0.0
17:18 gram_schmidt: Removing vector 48 of norm 0.0
17:18 gram_schmidt: Removing vector 49 of norm 0.0
17:18 gram_schmidt: Removing vector 50 of norm 0.0
17:18 gram_schmidt: Removing vector 51 of norm 0.0
17:18 gram_schmidt: Removing vector 52 of norm 0.0
17:18 gram_schmidt: Removing vector 53 of norm 0.0
17:18 gram_schmidt: Removing vector 54 of norm 0.0
17:18 gram_schmidt: Removing vector 55 of norm 0.0
17:18 gram_schmidt: Removing vector 56 of norm 0.0
17:18 gram_schmidt: Removing vector 57 of norm 0.0
17:18 gram_schmidt: Removing vector 58 of norm 0.0
17:18 gram_schmidt: Removing vector 59 of norm 0.0
17:18 gram_schmidt: Removing vector 60 of norm 0.0
17:18 gram_schmidt: Removing vector 61 of norm 0.0
17:18 gram_schmidt: Removing vector 62 of norm 0.0
17:18 gram_schmidt: Removing vector 63 of norm 0.0
17:18 gram_schmidt: Removing vector 64 of norm 0.0
17:18 gram_schmidt: Removing vector 65 of norm 0.0
17:18 gram_schmidt: Removing vector 66 of norm 0.0
17:18 gram_schmidt: Removing vector 67 of norm 0.0
17:18 gram_schmidt: Removing vector 68 of norm 0.0
17:18 gram_schmidt: Removing vector 69 of norm 0.0
17:18 gram_schmidt: Removing vector 70 of norm 0.0
17:18 gram_schmidt: Removing vector 71 of norm 0.0
17:18 gram_schmidt: Removing vector 72 of norm 0.0
17:18 gram_schmidt: Removing vector 73 of norm 0.0
17:18 gram_schmidt: Removing vector 74 of norm 0.0
17:18 gram_schmidt: Removing vector 75 of norm 0.0
17:18 gram_schmidt: Removing vector 76 of norm 0.0
17:18 gram_schmidt: Removing vector 77 of norm 0.0
17:18 gram_schmidt: Removing vector 78 of norm 0.0
17:18 gram_schmidt: Removing vector 79 of norm 0.0
17:18 gram_schmidt: Removing vector 80 of norm 0.0
17:18 gram_schmidt: Removing vector 81 of norm 0.0
17:18 gram_schmidt: Removing vector 82 of norm 0.0
17:18 gram_schmidt: Removing vector 83 of norm 0.0
17:18 gram_schmidt: Removing vector 84 of norm 0.0
17:18 gram_schmidt: Removing vector 85 of norm 0.0
17:18 gram_schmidt: Removing vector 86 of norm 0.0
17:18 gram_schmidt: Removing vector 87 of norm 0.0
17:18 gram_schmidt: Removing vector 88 of norm 0.0
17:18 gram_schmidt: Removing vector 89 of norm 0.0
17:18 gram_schmidt: Removing vector 90 of norm 0.0
17:18 gram_schmidt: Removing vector 91 of norm 0.0
17:18 gram_schmidt: Removing vector 92 of norm 0.0
17:18 gram_schmidt: Removing vector 93 of norm 0.0
17:18 gram_schmidt: Removing vector 94 of norm 0.0
17:18 gram_schmidt: Removing vector 95 of norm 0.0
17:18 gram_schmidt: Removing vector 96 of norm 0.0
17:18 gram_schmidt: Removing vector 97 of norm 0.0
17:18 gram_schmidt: Removing vector 98 of norm 0.0
17:18 gram_schmidt: Removing vector 99 of norm 0.0
17:18 gram_schmidt: Removing vector 100 of norm 0.0
17:18 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;10]" time="0.003396272659301758"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;11]" time="0.006474733352661133"><system-err>17:18 gram_schmidt: Removing linear dependent vector 3
17:18 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;12]" time="0.003877878189086914"><system-err>17:18 gram_schmidt: Removing vector 0 of norm 0.0
17:18 gram_schmidt: Removing vector 1 of norm 0.0
17:18 gram_schmidt: Removing vector 2 of norm 0.0
17:18 gram_schmidt: Removing vector 0 of norm 0.0
17:18 gram_schmidt: Removing vector 1 of norm 0.0
17:18 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;13]" time="0.0026657581329345703"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;14]" time="0.004656791687011719"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;15]" time="0.3713836669921875"><system-err>17:19 gram_schmidt: Removing linear dependent vector 36
17:19 gram_schmidt: Removing linear dependent vector 37
17:19 gram_schmidt: Removing linear dependent vector 38
17:19 gram_schmidt: Removing linear dependent vector 39
17:19 gram_schmidt: Removing linear dependent vector 40
17:19 gram_schmidt: Removing linear dependent vector 41
17:19 gram_schmidt: Removing linear dependent vector 42
17:19 gram_schmidt: Removing linear dependent vector 36
17:19 gram_schmidt: Removing linear dependent vector 37
17:19 gram_schmidt: Removing linear dependent vector 38
17:19 gram_schmidt: Removing linear dependent vector 39
17:19 gram_schmidt: Removing linear dependent vector 40
17:19 gram_schmidt: Removing linear dependent vector 41
17:19 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;16]" time="0.19194245338439941"><system-err>17:19 gram_schmidt: Removing linear dependent vector 3
17:19 gram_schmidt: Removing linear dependent vector 4
17:19 gram_schmidt: Removing linear dependent vector 5
17:19 gram_schmidt: Removing linear dependent vector 6
17:19 gram_schmidt: Removing linear dependent vector 7
17:19 gram_schmidt: Removing linear dependent vector 8
17:19 gram_schmidt: Removing linear dependent vector 9
17:19 gram_schmidt: Removing linear dependent vector 10
17:19 gram_schmidt: Removing linear dependent vector 11
17:19 gram_schmidt: Removing linear dependent vector 12
17:19 gram_schmidt: Removing linear dependent vector 13
17:19 gram_schmidt: Removing linear dependent vector 14
17:19 gram_schmidt: Removing linear dependent vector 15
17:19 gram_schmidt: Removing linear dependent vector 16
17:19 gram_schmidt: Removing linear dependent vector 17
17:19 gram_schmidt: Removing linear dependent vector 18
17:19 gram_schmidt: Removing linear dependent vector 19
17:19 gram_schmidt: Removing linear dependent vector 20
17:19 gram_schmidt: Removing linear dependent vector 21
17:19 gram_schmidt: Removing linear dependent vector 22
17:19 gram_schmidt: Removing linear dependent vector 23
17:19 gram_schmidt: Removing linear dependent vector 24
17:19 gram_schmidt: Removing linear dependent vector 25
17:19 gram_schmidt: Removing linear dependent vector 26
17:19 gram_schmidt: Removing linear dependent vector 27
17:19 gram_schmidt: Removing linear dependent vector 28
17:19 gram_schmidt: Removing linear dependent vector 29
17:19 gram_schmidt: Removing linear dependent vector 30
17:19 gram_schmidt: Removing linear dependent vector 31
17:19 gram_schmidt: Removing linear dependent vector 32
17:19 gram_schmidt: Removing linear dependent vector 33
17:19 gram_schmidt: Removing linear dependent vector 34
17:19 gram_schmidt: Removing linear dependent vector 35
17:19 gram_schmidt: Removing linear dependent vector 36
17:19 gram_schmidt: Removing linear dependent vector 37
17:19 gram_schmidt: Removing linear dependent vector 38
17:19 gram_schmidt: Removing linear dependent vector 39
17:19 gram_schmidt: Removing linear dependent vector 40
17:19 gram_schmidt: Removing linear dependent vector 41
17:19 gram_schmidt: Removing linear dependent vector 42
17:19 gram_schmidt: Removing linear dependent vector 43
17:19 gram_schmidt: Removing linear dependent vector 44
17:19 gram_schmidt: Removing linear dependent vector 45
17:19 gram_schmidt: Removing linear dependent vector 46
17:19 gram_schmidt: Removing linear dependent vector 47
17:19 gram_schmidt: Removing linear dependent vector 48
17:19 gram_schmidt: Removing linear dependent vector 49
17:19 gram_schmidt: Removing linear dependent vector 50
17:19 gram_schmidt: Removing linear dependent vector 51
17:19 gram_schmidt: Removing linear dependent vector 52
17:19 gram_schmidt: Removing linear dependent vector 53
17:19 gram_schmidt: Removing linear dependent vector 54
17:19 gram_schmidt: Removing linear dependent vector 55
17:19 gram_schmidt: Removing linear dependent vector 56
17:19 gram_schmidt: Removing linear dependent vector 57
17:19 gram_schmidt: Removing linear dependent vector 58
17:19 gram_schmidt: Removing linear dependent vector 59
17:19 gram_schmidt: Removing linear dependent vector 60
17:19 gram_schmidt: Removing linear dependent vector 61
17:19 gram_schmidt: Removing linear dependent vector 62
17:19 gram_schmidt: Removing linear dependent vector 63
17:19 gram_schmidt: Removing linear dependent vector 64
17:19 gram_schmidt: Removing linear dependent vector 65
17:19 gram_schmidt: Removing linear dependent vector 66
17:19 gram_schmidt: Removing linear dependent vector 67
17:19 gram_schmidt: Removing linear dependent vector 68
17:19 gram_schmidt: Removing linear dependent vector 69
17:19 gram_schmidt: Removing linear dependent vector 70
17:19 gram_schmidt: Removing linear dependent vector 71
17:19 gram_schmidt: Removing linear dependent vector 72
17:19 gram_schmidt: Removing linear dependent vector 73
17:19 gram_schmidt: Removing linear dependent vector 74
17:19 gram_schmidt: Removing linear dependent vector 75
17:19 gram_schmidt: Removing linear dependent vector 76
17:19 gram_schmidt: Removing linear dependent vector 77
17:19 gram_schmidt: Removing linear dependent vector 78
17:19 gram_schmidt: Removing linear dependent vector 79
17:19 gram_schmidt: Removing linear dependent vector 80
17:19 gram_schmidt: Removing linear dependent vector 81
17:19 gram_schmidt: Removing linear dependent vector 82
17:19 gram_schmidt: Removing linear dependent vector 83
17:19 gram_schmidt: Removing linear dependent vector 84
17:19 gram_schmidt: Removing linear dependent vector 85
17:19 gram_schmidt: Removing linear dependent vector 86
17:19 gram_schmidt: Removing linear dependent vector 87
17:19 gram_schmidt: Removing linear dependent vector 88
17:19 gram_schmidt: Removing linear dependent vector 89
17:19 gram_schmidt: Removing linear dependent vector 90
17:19 gram_schmidt: Removing linear dependent vector 91
17:19 gram_schmidt: Removing linear dependent vector 92
17:19 gram_schmidt: Removing linear dependent vector 93
17:19 gram_schmidt: Removing linear dependent vector 94
17:19 gram_schmidt: Removing linear dependent vector 95
17:19 gram_schmidt: Removing linear dependent vector 96
17:19 gram_schmidt: Removing linear dependent vector 97
17:19 gram_schmidt: Removing linear dependent vector 98
17:19 gram_schmidt: Removing linear dependent vector 99
17:19 gram_schmidt: Removing linear dependent vector 100
17:19 gram_schmidt: Removing linear dependent vector 101
17:19 gram_schmidt: Removing linear dependent vector 3
17:19 gram_schmidt: Removing linear dependent vector 4
17:19 gram_schmidt: Removing linear dependent vector 5
17:19 gram_schmidt: Removing linear dependent vector 6
17:19 gram_schmidt: Removing linear dependent vector 7
17:19 gram_schmidt: Removing linear dependent vector 8
17:19 gram_schmidt: Removing linear dependent vector 9
17:19 gram_schmidt: Removing linear dependent vector 10
17:19 gram_schmidt: Removing linear dependent vector 11
17:19 gram_schmidt: Removing linear dependent vector 12
17:19 gram_schmidt: Removing linear dependent vector 13
17:19 gram_schmidt: Removing linear dependent vector 14
17:19 gram_schmidt: Removing linear dependent vector 15
17:19 gram_schmidt: Removing linear dependent vector 16
17:19 gram_schmidt: Removing linear dependent vector 17
17:19 gram_schmidt: Removing linear dependent vector 18
17:19 gram_schmidt: Removing linear dependent vector 19
17:19 gram_schmidt: Removing linear dependent vector 20
17:19 gram_schmidt: Removing linear dependent vector 21
17:19 gram_schmidt: Removing linear dependent vector 22
17:19 gram_schmidt: Removing linear dependent vector 23
17:19 gram_schmidt: Removing linear dependent vector 24
17:19 gram_schmidt: Removing linear dependent vector 25
17:19 gram_schmidt: Removing linear dependent vector 26
17:19 gram_schmidt: Removing linear dependent vector 27
17:19 gram_schmidt: Removing linear dependent vector 28
17:19 gram_schmidt: Removing linear dependent vector 29
17:19 gram_schmidt: Removing linear dependent vector 30
17:19 gram_schmidt: Removing linear dependent vector 31
17:19 gram_schmidt: Removing linear dependent vector 32
17:19 gram_schmidt: Removing linear dependent vector 33
17:19 gram_schmidt: Removing linear dependent vector 34
17:19 gram_schmidt: Removing linear dependent vector 35
17:19 gram_schmidt: Removing linear dependent vector 36
17:19 gram_schmidt: Removing linear dependent vector 37
17:19 gram_schmidt: Removing linear dependent vector 38
17:19 gram_schmidt: Removing linear dependent vector 39
17:19 gram_schmidt: Removing linear dependent vector 40
17:19 gram_schmidt: Removing linear dependent vector 41
17:19 gram_schmidt: Removing linear dependent vector 42
17:19 gram_schmidt: Removing linear dependent vector 43
17:19 gram_schmidt: Removing linear dependent vector 44
17:19 gram_schmidt: Removing linear dependent vector 45
17:19 gram_schmidt: Removing linear dependent vector 46
17:19 gram_schmidt: Removing linear dependent vector 47
17:19 gram_schmidt: Removing linear dependent vector 48
17:19 gram_schmidt: Removing linear dependent vector 49
17:19 gram_schmidt: Removing linear dependent vector 50
17:19 gram_schmidt: Removing linear dependent vector 51
17:19 gram_schmidt: Removing linear dependent vector 52
17:19 gram_schmidt: Removing linear dependent vector 53
17:19 gram_schmidt: Removing linear dependent vector 54
17:19 gram_schmidt: Removing linear dependent vector 55
17:19 gram_schmidt: Removing linear dependent vector 56
17:19 gram_schmidt: Removing linear dependent vector 57
17:19 gram_schmidt: Removing linear dependent vector 58
17:19 gram_schmidt: Removing linear dependent vector 59
17:19 gram_schmidt: Removing linear dependent vector 60
17:19 gram_schmidt: Removing linear dependent vector 61
17:19 gram_schmidt: Removing linear dependent vector 62
17:19 gram_schmidt: Removing linear dependent vector 63
17:19 gram_schmidt: Removing linear dependent vector 64
17:19 gram_schmidt: Removing linear dependent vector 65
17:19 gram_schmidt: Removing linear dependent vector 66
17:19 gram_schmidt: Removing linear dependent vector 67
17:19 gram_schmidt: Removing linear dependent vector 68
17:19 gram_schmidt: Removing linear dependent vector 69
17:19 gram_schmidt: Removing linear dependent vector 70
17:19 gram_schmidt: Removing linear dependent vector 71
17:19 gram_schmidt: Removing linear dependent vector 72
17:19 gram_schmidt: Removing linear dependent vector 73
17:19 gram_schmidt: Removing linear dependent vector 74
17:19 gram_schmidt: Removing linear dependent vector 75
17:19 gram_schmidt: Removing linear dependent vector 76
17:19 gram_schmidt: Removing linear dependent vector 77
17:19 gram_schmidt: Removing linear dependent vector 78
17:19 gram_schmidt: Removing linear dependent vector 79
17:19 gram_schmidt: Removing linear dependent vector 80
17:19 gram_schmidt: Removing linear dependent vector 81
17:19 gram_schmidt: Removing linear dependent vector 82
17:19 gram_schmidt: Removing linear dependent vector 83
17:19 gram_schmidt: Removing linear dependent vector 84
17:19 gram_schmidt: Removing linear dependent vector 85
17:19 gram_schmidt: Removing linear dependent vector 86
17:19 gram_schmidt: Removing linear dependent vector 87
17:19 gram_schmidt: Removing linear dependent vector 88
17:19 gram_schmidt: Removing linear dependent vector 89
17:19 gram_schmidt: Removing linear dependent vector 90
17:19 gram_schmidt: Removing linear dependent vector 91
17:19 gram_schmidt: Removing linear dependent vector 92
17:19 gram_schmidt: Removing linear dependent vector 93
17:19 gram_schmidt: Removing linear dependent vector 94
17:19 gram_schmidt: Removing linear dependent vector 95
17:19 gram_schmidt: Removing linear dependent vector 96
17:19 gram_schmidt: Removing linear dependent vector 97
17:19 gram_schmidt: Removing linear dependent vector 98
17:19 gram_schmidt: Removing linear dependent vector 99
17:19 gram_schmidt: Removing linear dependent vector 100
17:19 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;17]" time="0.003238201141357422"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;18]" time="0.0023245811462402344"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;19]" time="0.0047419071197509766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;20]" time="0.27479076385498047"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;21]" time="1.439755916595459"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;22]" time="0.002555370330810547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;23]" time="0.0018458366394042969"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;24]" time="0.00834512710571289"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;25]" time="0.41240549087524414"><system-err>17:21 gram_schmidt: Orthonormalizing vector 31 again
17:21 gram_schmidt: Removing linear dependent vector 32
17:21 gram_schmidt: Removing linear dependent vector 33
17:21 gram_schmidt: Removing linear dependent vector 34
17:21 gram_schmidt: Removing linear dependent vector 35
17:21 gram_schmidt: Removing linear dependent vector 36
17:21 gram_schmidt: Removing linear dependent vector 37
17:21 gram_schmidt: Removing linear dependent vector 38
17:21 gram_schmidt: Removing linear dependent vector 39
17:21 gram_schmidt: Removing linear dependent vector 40
17:21 gram_schmidt: Removing linear dependent vector 41
17:21 gram_schmidt: Removing linear dependent vector 42
17:21 gram_schmidt: Orthonormalizing vector 31 again
17:21 gram_schmidt: Removing linear dependent vector 32
17:21 gram_schmidt: Removing linear dependent vector 33
17:21 gram_schmidt: Removing linear dependent vector 34
17:21 gram_schmidt: Removing linear dependent vector 35
17:21 gram_schmidt: Removing linear dependent vector 36
17:21 gram_schmidt: Removing linear dependent vector 37
17:21 gram_schmidt: Removing linear dependent vector 38
17:21 gram_schmidt: Removing linear dependent vector 39
17:21 gram_schmidt: Removing linear dependent vector 40
17:21 gram_schmidt: Removing linear dependent vector 41
17:21 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;26]" time="0.23510217666625977"><system-err>17:21 gram_schmidt: Removing vector 0 of norm 0.0
17:21 gram_schmidt: Removing vector 1 of norm 0.0
17:21 gram_schmidt: Removing vector 2 of norm 0.0
17:21 gram_schmidt: Removing vector 3 of norm 0.0
17:21 gram_schmidt: Removing vector 4 of norm 0.0
17:21 gram_schmidt: Removing vector 5 of norm 0.0
17:21 gram_schmidt: Removing vector 6 of norm 0.0
17:21 gram_schmidt: Removing vector 7 of norm 0.0
17:21 gram_schmidt: Removing vector 8 of norm 0.0
17:21 gram_schmidt: Removing vector 9 of norm 0.0
17:21 gram_schmidt: Removing vector 10 of norm 0.0
17:21 gram_schmidt: Removing vector 11 of norm 0.0
17:21 gram_schmidt: Removing vector 12 of norm 0.0
17:21 gram_schmidt: Removing vector 13 of norm 0.0
17:21 gram_schmidt: Removing vector 14 of norm 0.0
17:21 gram_schmidt: Removing vector 15 of norm 0.0
17:21 gram_schmidt: Removing vector 16 of norm 0.0
17:21 gram_schmidt: Removing vector 17 of norm 0.0
17:21 gram_schmidt: Removing vector 18 of norm 0.0
17:21 gram_schmidt: Removing vector 19 of norm 0.0
17:21 gram_schmidt: Removing vector 20 of norm 0.0
17:21 gram_schmidt: Removing vector 21 of norm 0.0
17:21 gram_schmidt: Removing vector 22 of norm 0.0
17:21 gram_schmidt: Removing vector 23 of norm 0.0
17:21 gram_schmidt: Removing vector 24 of norm 0.0
17:21 gram_schmidt: Removing vector 25 of norm 0.0
17:21 gram_schmidt: Removing vector 26 of norm 0.0
17:21 gram_schmidt: Removing vector 27 of norm 0.0
17:21 gram_schmidt: Removing vector 28 of norm 0.0
17:21 gram_schmidt: Removing vector 29 of norm 0.0
17:21 gram_schmidt: Removing vector 30 of norm 0.0
17:21 gram_schmidt: Removing vector 31 of norm 0.0
17:21 gram_schmidt: Removing vector 32 of norm 0.0
17:21 gram_schmidt: Removing vector 33 of norm 0.0
17:21 gram_schmidt: Removing vector 34 of norm 0.0
17:21 gram_schmidt: Removing vector 35 of norm 0.0
17:21 gram_schmidt: Removing vector 36 of norm 0.0
17:21 gram_schmidt: Removing vector 37 of norm 0.0
17:21 gram_schmidt: Removing vector 38 of norm 0.0
17:21 gram_schmidt: Removing vector 39 of norm 0.0
17:21 gram_schmidt: Removing vector 40 of norm 0.0
17:21 gram_schmidt: Removing vector 41 of norm 0.0
17:21 gram_schmidt: Removing vector 42 of norm 0.0
17:21 gram_schmidt: Removing vector 43 of norm 0.0
17:21 gram_schmidt: Removing vector 44 of norm 0.0
17:21 gram_schmidt: Removing vector 45 of norm 0.0
17:21 gram_schmidt: Removing vector 46 of norm 0.0
17:21 gram_schmidt: Removing vector 47 of norm 0.0
17:21 gram_schmidt: Removing vector 48 of norm 0.0
17:21 gram_schmidt: Removing vector 49 of norm 0.0
17:21 gram_schmidt: Removing vector 50 of norm 0.0
17:21 gram_schmidt: Removing vector 51 of norm 0.0
17:21 gram_schmidt: Removing vector 52 of norm 0.0
17:21 gram_schmidt: Removing vector 53 of norm 0.0
17:21 gram_schmidt: Removing vector 54 of norm 0.0
17:21 gram_schmidt: Removing vector 55 of norm 0.0
17:21 gram_schmidt: Removing vector 56 of norm 0.0
17:21 gram_schmidt: Removing vector 57 of norm 0.0
17:21 gram_schmidt: Removing vector 58 of norm 0.0
17:21 gram_schmidt: Removing vector 59 of norm 0.0
17:21 gram_schmidt: Removing vector 60 of norm 0.0
17:21 gram_schmidt: Removing vector 61 of norm 0.0
17:21 gram_schmidt: Removing vector 62 of norm 0.0
17:21 gram_schmidt: Removing vector 63 of norm 0.0
17:21 gram_schmidt: Removing vector 64 of norm 0.0
17:21 gram_schmidt: Removing vector 65 of norm 0.0
17:21 gram_schmidt: Removing vector 66 of norm 0.0
17:21 gram_schmidt: Removing vector 67 of norm 0.0
17:21 gram_schmidt: Removing vector 68 of norm 0.0
17:21 gram_schmidt: Removing vector 69 of norm 0.0
17:21 gram_schmidt: Removing vector 70 of norm 0.0
17:21 gram_schmidt: Removing vector 71 of norm 0.0
17:21 gram_schmidt: Removing vector 72 of norm 0.0
17:21 gram_schmidt: Removing vector 73 of norm 0.0
17:21 gram_schmidt: Removing vector 74 of norm 0.0
17:21 gram_schmidt: Removing vector 75 of norm 0.0
17:21 gram_schmidt: Removing vector 76 of norm 0.0
17:21 gram_schmidt: Removing vector 77 of norm 0.0
17:21 gram_schmidt: Removing vector 78 of norm 0.0
17:21 gram_schmidt: Removing vector 79 of norm 0.0
17:21 gram_schmidt: Removing vector 80 of norm 0.0
17:21 gram_schmidt: Removing vector 81 of norm 0.0
17:21 gram_schmidt: Removing vector 82 of norm 0.0
17:21 gram_schmidt: Removing vector 83 of norm 0.0
17:21 gram_schmidt: Removing vector 84 of norm 0.0
17:21 gram_schmidt: Removing vector 85 of norm 0.0
17:21 gram_schmidt: Removing vector 86 of norm 0.0
17:21 gram_schmidt: Removing vector 87 of norm 0.0
17:21 gram_schmidt: Removing vector 88 of norm 0.0
17:21 gram_schmidt: Removing vector 89 of norm 0.0
17:21 gram_schmidt: Removing vector 90 of norm 0.0
17:21 gram_schmidt: Removing vector 91 of norm 0.0
17:21 gram_schmidt: Removing vector 92 of norm 0.0
17:21 gram_schmidt: Removing vector 93 of norm 0.0
17:21 gram_schmidt: Removing vector 94 of norm 0.0
17:21 gram_schmidt: Removing vector 95 of norm 0.0
17:21 gram_schmidt: Removing vector 96 of norm 0.0
17:21 gram_schmidt: Removing vector 97 of norm 0.0
17:21 gram_schmidt: Removing vector 98 of norm 0.0
17:21 gram_schmidt: Removing vector 99 of norm 0.0
17:21 gram_schmidt: Removing vector 100 of norm 0.0
17:21 gram_schmidt: Removing vector 101 of norm 0.0
17:21 gram_schmidt: Removing vector 0 of norm 0.0
17:21 gram_schmidt: Removing vector 1 of norm 0.0
17:21 gram_schmidt: Removing vector 2 of norm 0.0
17:21 gram_schmidt: Removing vector 3 of norm 0.0
17:21 gram_schmidt: Removing vector 4 of norm 0.0
17:21 gram_schmidt: Removing vector 5 of norm 0.0
17:21 gram_schmidt: Removing vector 6 of norm 0.0
17:21 gram_schmidt: Removing vector 7 of norm 0.0
17:21 gram_schmidt: Removing vector 8 of norm 0.0
17:21 gram_schmidt: Removing vector 9 of norm 0.0
17:21 gram_schmidt: Removing vector 10 of norm 0.0
17:21 gram_schmidt: Removing vector 11 of norm 0.0
17:21 gram_schmidt: Removing vector 12 of norm 0.0
17:21 gram_schmidt: Removing vector 13 of norm 0.0
17:21 gram_schmidt: Removing vector 14 of norm 0.0
17:21 gram_schmidt: Removing vector 15 of norm 0.0
17:21 gram_schmidt: Removing vector 16 of norm 0.0
17:21 gram_schmidt: Removing vector 17 of norm 0.0
17:21 gram_schmidt: Removing vector 18 of norm 0.0
17:21 gram_schmidt: Removing vector 19 of norm 0.0
17:21 gram_schmidt: Removing vector 20 of norm 0.0
17:21 gram_schmidt: Removing vector 21 of norm 0.0
17:21 gram_schmidt: Removing vector 22 of norm 0.0
17:21 gram_schmidt: Removing vector 23 of norm 0.0
17:21 gram_schmidt: Removing vector 24 of norm 0.0
17:21 gram_schmidt: Removing vector 25 of norm 0.0
17:21 gram_schmidt: Removing vector 26 of norm 0.0
17:21 gram_schmidt: Removing vector 27 of norm 0.0
17:21 gram_schmidt: Removing vector 28 of norm 0.0
17:21 gram_schmidt: Removing vector 29 of norm 0.0
17:21 gram_schmidt: Removing vector 30 of norm 0.0
17:21 gram_schmidt: Removing vector 31 of norm 0.0
17:21 gram_schmidt: Removing vector 32 of norm 0.0
17:21 gram_schmidt: Removing vector 33 of norm 0.0
17:21 gram_schmidt: Removing vector 34 of norm 0.0
17:21 gram_schmidt: Removing vector 35 of norm 0.0
17:21 gram_schmidt: Removing vector 36 of norm 0.0
17:21 gram_schmidt: Removing vector 37 of norm 0.0
17:21 gram_schmidt: Removing vector 38 of norm 0.0
17:21 gram_schmidt: Removing vector 39 of norm 0.0
17:21 gram_schmidt: Removing vector 40 of norm 0.0
17:21 gram_schmidt: Removing vector 41 of norm 0.0
17:21 gram_schmidt: Removing vector 42 of norm 0.0
17:21 gram_schmidt: Removing vector 43 of norm 0.0
17:21 gram_schmidt: Removing vector 44 of norm 0.0
17:21 gram_schmidt: Removing vector 45 of norm 0.0
17:21 gram_schmidt: Removing vector 46 of norm 0.0
17:21 gram_schmidt: Removing vector 47 of norm 0.0
17:21 gram_schmidt: Removing vector 48 of norm 0.0
17:21 gram_schmidt: Removing vector 49 of norm 0.0
17:21 gram_schmidt: Removing vector 50 of norm 0.0
17:21 gram_schmidt: Removing vector 51 of norm 0.0
17:21 gram_schmidt: Removing vector 52 of norm 0.0
17:21 gram_schmidt: Removing vector 53 of norm 0.0
17:21 gram_schmidt: Removing vector 54 of norm 0.0
17:21 gram_schmidt: Removing vector 55 of norm 0.0
17:21 gram_schmidt: Removing vector 56 of norm 0.0
17:21 gram_schmidt: Removing vector 57 of norm 0.0
17:21 gram_schmidt: Removing vector 58 of norm 0.0
17:21 gram_schmidt: Removing vector 59 of norm 0.0
17:21 gram_schmidt: Removing vector 60 of norm 0.0
17:21 gram_schmidt: Removing vector 61 of norm 0.0
17:21 gram_schmidt: Removing vector 62 of norm 0.0
17:21 gram_schmidt: Removing vector 63 of norm 0.0
17:21 gram_schmidt: Removing vector 64 of norm 0.0
17:21 gram_schmidt: Removing vector 65 of norm 0.0
17:21 gram_schmidt: Removing vector 66 of norm 0.0
17:21 gram_schmidt: Removing vector 67 of norm 0.0
17:21 gram_schmidt: Removing vector 68 of norm 0.0
17:21 gram_schmidt: Removing vector 69 of norm 0.0
17:21 gram_schmidt: Removing vector 70 of norm 0.0
17:21 gram_schmidt: Removing vector 71 of norm 0.0
17:21 gram_schmidt: Removing vector 72 of norm 0.0
17:21 gram_schmidt: Removing vector 73 of norm 0.0
17:21 gram_schmidt: Removing vector 74 of norm 0.0
17:21 gram_schmidt: Removing vector 75 of norm 0.0
17:21 gram_schmidt: Removing vector 76 of norm 0.0
17:21 gram_schmidt: Removing vector 77 of norm 0.0
17:21 gram_schmidt: Removing vector 78 of norm 0.0
17:21 gram_schmidt: Removing vector 79 of norm 0.0
17:21 gram_schmidt: Removing vector 80 of norm 0.0
17:21 gram_schmidt: Removing vector 81 of norm 0.0
17:21 gram_schmidt: Removing vector 82 of norm 0.0
17:21 gram_schmidt: Removing vector 83 of norm 0.0
17:21 gram_schmidt: Removing vector 84 of norm 0.0
17:21 gram_schmidt: Removing vector 85 of norm 0.0
17:21 gram_schmidt: Removing vector 86 of norm 0.0
17:21 gram_schmidt: Removing vector 87 of norm 0.0
17:21 gram_schmidt: Removing vector 88 of norm 0.0
17:21 gram_schmidt: Removing vector 89 of norm 0.0
17:21 gram_schmidt: Removing vector 90 of norm 0.0
17:21 gram_schmidt: Removing vector 91 of norm 0.0
17:21 gram_schmidt: Removing vector 92 of norm 0.0
17:21 gram_schmidt: Removing vector 93 of norm 0.0
17:21 gram_schmidt: Removing vector 94 of norm 0.0
17:21 gram_schmidt: Removing vector 95 of norm 0.0
17:21 gram_schmidt: Removing vector 96 of norm 0.0
17:21 gram_schmidt: Removing vector 97 of norm 0.0
17:21 gram_schmidt: Removing vector 98 of norm 0.0
17:21 gram_schmidt: Removing vector 99 of norm 0.0
17:21 gram_schmidt: Removing vector 100 of norm 0.0
17:21 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;0]" time="0.0027010440826416016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;1]" time="0.0020139217376708984"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;2]" time="0.0023038387298583984"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;3]" time="0.09887528419494629"><system-err>17:21 gram_schmidt: Orthonormalizing vector 31 again
17:21 gram_schmidt: Removing linear dependent vector 32
17:21 gram_schmidt: Removing linear dependent vector 33
17:21 gram_schmidt: Removing linear dependent vector 34
17:21 gram_schmidt: Removing linear dependent vector 35
17:21 gram_schmidt: Removing linear dependent vector 36
17:21 gram_schmidt: Removing linear dependent vector 37
17:21 gram_schmidt: Removing linear dependent vector 38
17:21 gram_schmidt: Removing linear dependent vector 39
17:21 gram_schmidt: Removing linear dependent vector 40
17:21 gram_schmidt: Removing linear dependent vector 41
17:21 gram_schmidt: Removing linear dependent vector 42
17:21 gram_schmidt: Orthonormalizing vector 31 again
17:21 gram_schmidt: Removing linear dependent vector 32
17:21 gram_schmidt: Removing linear dependent vector 33
17:21 gram_schmidt: Removing linear dependent vector 34
17:21 gram_schmidt: Removing linear dependent vector 35
17:21 gram_schmidt: Removing linear dependent vector 36
17:21 gram_schmidt: Removing linear dependent vector 37
17:22 gram_schmidt: Removing linear dependent vector 38
17:22 gram_schmidt: Removing linear dependent vector 39
17:22 gram_schmidt: Removing linear dependent vector 40
17:22 gram_schmidt: Removing linear dependent vector 41
17:22 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;4]" time="0.021190881729125977"><system-err>17:22 gram_schmidt: Removing vector 0 of norm 0.0
17:22 gram_schmidt: Removing vector 1 of norm 0.0
17:22 gram_schmidt: Removing vector 2 of norm 0.0
17:22 gram_schmidt: Removing vector 3 of norm 0.0
17:22 gram_schmidt: Removing vector 4 of norm 0.0
17:22 gram_schmidt: Removing vector 5 of norm 0.0
17:22 gram_schmidt: Removing vector 6 of norm 0.0
17:22 gram_schmidt: Removing vector 7 of norm 0.0
17:22 gram_schmidt: Removing vector 8 of norm 0.0
17:22 gram_schmidt: Removing vector 9 of norm 0.0
17:22 gram_schmidt: Removing vector 10 of norm 0.0
17:22 gram_schmidt: Removing vector 11 of norm 0.0
17:22 gram_schmidt: Removing vector 12 of norm 0.0
17:22 gram_schmidt: Removing vector 13 of norm 0.0
17:22 gram_schmidt: Removing vector 14 of norm 0.0
17:22 gram_schmidt: Removing vector 15 of norm 0.0
17:22 gram_schmidt: Removing vector 16 of norm 0.0
17:22 gram_schmidt: Removing vector 17 of norm 0.0
17:22 gram_schmidt: Removing vector 18 of norm 0.0
17:22 gram_schmidt: Removing vector 19 of norm 0.0
17:22 gram_schmidt: Removing vector 20 of norm 0.0
17:22 gram_schmidt: Removing vector 21 of norm 0.0
17:22 gram_schmidt: Removing vector 22 of norm 0.0
17:22 gram_schmidt: Removing vector 23 of norm 0.0
17:22 gram_schmidt: Removing vector 24 of norm 0.0
17:22 gram_schmidt: Removing vector 25 of norm 0.0
17:22 gram_schmidt: Removing vector 26 of norm 0.0
17:22 gram_schmidt: Removing vector 27 of norm 0.0
17:22 gram_schmidt: Removing vector 28 of norm 0.0
17:22 gram_schmidt: Removing vector 29 of norm 0.0
17:22 gram_schmidt: Removing vector 30 of norm 0.0
17:22 gram_schmidt: Removing vector 31 of norm 0.0
17:22 gram_schmidt: Removing vector 32 of norm 0.0
17:22 gram_schmidt: Removing vector 33 of norm 0.0
17:22 gram_schmidt: Removing vector 34 of norm 0.0
17:22 gram_schmidt: Removing vector 35 of norm 0.0
17:22 gram_schmidt: Removing vector 36 of norm 0.0
17:22 gram_schmidt: Removing vector 37 of norm 0.0
17:22 gram_schmidt: Removing vector 38 of norm 0.0
17:22 gram_schmidt: Removing vector 39 of norm 0.0
17:22 gram_schmidt: Removing vector 40 of norm 0.0
17:22 gram_schmidt: Removing vector 41 of norm 0.0
17:22 gram_schmidt: Removing vector 42 of norm 0.0
17:22 gram_schmidt: Removing vector 43 of norm 0.0
17:22 gram_schmidt: Removing vector 44 of norm 0.0
17:22 gram_schmidt: Removing vector 45 of norm 0.0
17:22 gram_schmidt: Removing vector 46 of norm 0.0
17:22 gram_schmidt: Removing vector 47 of norm 0.0
17:22 gram_schmidt: Removing vector 48 of norm 0.0
17:22 gram_schmidt: Removing vector 49 of norm 0.0
17:22 gram_schmidt: Removing vector 50 of norm 0.0
17:22 gram_schmidt: Removing vector 51 of norm 0.0
17:22 gram_schmidt: Removing vector 52 of norm 0.0
17:22 gram_schmidt: Removing vector 53 of norm 0.0
17:22 gram_schmidt: Removing vector 54 of norm 0.0
17:22 gram_schmidt: Removing vector 55 of norm 0.0
17:22 gram_schmidt: Removing vector 56 of norm 0.0
17:22 gram_schmidt: Removing vector 57 of norm 0.0
17:22 gram_schmidt: Removing vector 58 of norm 0.0
17:22 gram_schmidt: Removing vector 59 of norm 0.0
17:22 gram_schmidt: Removing vector 60 of norm 0.0
17:22 gram_schmidt: Removing vector 61 of norm 0.0
17:22 gram_schmidt: Removing vector 62 of norm 0.0
17:22 gram_schmidt: Removing vector 63 of norm 0.0
17:22 gram_schmidt: Removing vector 64 of norm 0.0
17:22 gram_schmidt: Removing vector 65 of norm 0.0
17:22 gram_schmidt: Removing vector 66 of norm 0.0
17:22 gram_schmidt: Removing vector 67 of norm 0.0
17:22 gram_schmidt: Removing vector 68 of norm 0.0
17:22 gram_schmidt: Removing vector 69 of norm 0.0
17:22 gram_schmidt: Removing vector 70 of norm 0.0
17:22 gram_schmidt: Removing vector 71 of norm 0.0
17:22 gram_schmidt: Removing vector 72 of norm 0.0
17:22 gram_schmidt: Removing vector 73 of norm 0.0
17:22 gram_schmidt: Removing vector 74 of norm 0.0
17:22 gram_schmidt: Removing vector 75 of norm 0.0
17:22 gram_schmidt: Removing vector 76 of norm 0.0
17:22 gram_schmidt: Removing vector 77 of norm 0.0
17:22 gram_schmidt: Removing vector 78 of norm 0.0
17:22 gram_schmidt: Removing vector 79 of norm 0.0
17:22 gram_schmidt: Removing vector 80 of norm 0.0
17:22 gram_schmidt: Removing vector 81 of norm 0.0
17:22 gram_schmidt: Removing vector 82 of norm 0.0
17:22 gram_schmidt: Removing vector 83 of norm 0.0
17:22 gram_schmidt: Removing vector 84 of norm 0.0
17:22 gram_schmidt: Removing vector 85 of norm 0.0
17:22 gram_schmidt: Removing vector 86 of norm 0.0
17:22 gram_schmidt: Removing vector 87 of norm 0.0
17:22 gram_schmidt: Removing vector 88 of norm 0.0
17:22 gram_schmidt: Removing vector 89 of norm 0.0
17:22 gram_schmidt: Removing vector 90 of norm 0.0
17:22 gram_schmidt: Removing vector 91 of norm 0.0
17:22 gram_schmidt: Removing vector 92 of norm 0.0
17:22 gram_schmidt: Removing vector 93 of norm 0.0
17:22 gram_schmidt: Removing vector 94 of norm 0.0
17:22 gram_schmidt: Removing vector 95 of norm 0.0
17:22 gram_schmidt: Removing vector 96 of norm 0.0
17:22 gram_schmidt: Removing vector 97 of norm 0.0
17:22 gram_schmidt: Removing vector 98 of norm 0.0
17:22 gram_schmidt: Removing vector 99 of norm 0.0
17:22 gram_schmidt: Removing vector 100 of norm 0.0
17:22 gram_schmidt: Removing vector 101 of norm 0.0
17:22 gram_schmidt: Removing vector 0 of norm 0.0
17:22 gram_schmidt: Removing vector 1 of norm 0.0
17:22 gram_schmidt: Removing vector 2 of norm 0.0
17:22 gram_schmidt: Removing vector 3 of norm 0.0
17:22 gram_schmidt: Removing vector 4 of norm 0.0
17:22 gram_schmidt: Removing vector 5 of norm 0.0
17:22 gram_schmidt: Removing vector 6 of norm 0.0
17:22 gram_schmidt: Removing vector 7 of norm 0.0
17:22 gram_schmidt: Removing vector 8 of norm 0.0
17:22 gram_schmidt: Removing vector 9 of norm 0.0
17:22 gram_schmidt: Removing vector 10 of norm 0.0
17:22 gram_schmidt: Removing vector 11 of norm 0.0
17:22 gram_schmidt: Removing vector 12 of norm 0.0
17:22 gram_schmidt: Removing vector 13 of norm 0.0
17:22 gram_schmidt: Removing vector 14 of norm 0.0
17:22 gram_schmidt: Removing vector 15 of norm 0.0
17:22 gram_schmidt: Removing vector 16 of norm 0.0
17:22 gram_schmidt: Removing vector 17 of norm 0.0
17:22 gram_schmidt: Removing vector 18 of norm 0.0
17:22 gram_schmidt: Removing vector 19 of norm 0.0
17:22 gram_schmidt: Removing vector 20 of norm 0.0
17:22 gram_schmidt: Removing vector 21 of norm 0.0
17:22 gram_schmidt: Removing vector 22 of norm 0.0
17:22 gram_schmidt: Removing vector 23 of norm 0.0
17:22 gram_schmidt: Removing vector 24 of norm 0.0
17:22 gram_schmidt: Removing vector 25 of norm 0.0
17:22 gram_schmidt: Removing vector 26 of norm 0.0
17:22 gram_schmidt: Removing vector 27 of norm 0.0
17:22 gram_schmidt: Removing vector 28 of norm 0.0
17:22 gram_schmidt: Removing vector 29 of norm 0.0
17:22 gram_schmidt: Removing vector 30 of norm 0.0
17:22 gram_schmidt: Removing vector 31 of norm 0.0
17:22 gram_schmidt: Removing vector 32 of norm 0.0
17:22 gram_schmidt: Removing vector 33 of norm 0.0
17:22 gram_schmidt: Removing vector 34 of norm 0.0
17:22 gram_schmidt: Removing vector 35 of norm 0.0
17:22 gram_schmidt: Removing vector 36 of norm 0.0
17:22 gram_schmidt: Removing vector 37 of norm 0.0
17:22 gram_schmidt: Removing vector 38 of norm 0.0
17:22 gram_schmidt: Removing vector 39 of norm 0.0
17:22 gram_schmidt: Removing vector 40 of norm 0.0
17:22 gram_schmidt: Removing vector 41 of norm 0.0
17:22 gram_schmidt: Removing vector 42 of norm 0.0
17:22 gram_schmidt: Removing vector 43 of norm 0.0
17:22 gram_schmidt: Removing vector 44 of norm 0.0
17:22 gram_schmidt: Removing vector 45 of norm 0.0
17:22 gram_schmidt: Removing vector 46 of norm 0.0
17:22 gram_schmidt: Removing vector 47 of norm 0.0
17:22 gram_schmidt: Removing vector 48 of norm 0.0
17:22 gram_schmidt: Removing vector 49 of norm 0.0
17:22 gram_schmidt: Removing vector 50 of norm 0.0
17:22 gram_schmidt: Removing vector 51 of norm 0.0
17:22 gram_schmidt: Removing vector 52 of norm 0.0
17:22 gram_schmidt: Removing vector 53 of norm 0.0
17:22 gram_schmidt: Removing vector 54 of norm 0.0
17:22 gram_schmidt: Removing vector 55 of norm 0.0
17:22 gram_schmidt: Removing vector 56 of norm 0.0
17:22 gram_schmidt: Removing vector 57 of norm 0.0
17:22 gram_schmidt: Removing vector 58 of norm 0.0
17:22 gram_schmidt: Removing vector 59 of norm 0.0
17:22 gram_schmidt: Removing vector 60 of norm 0.0
17:22 gram_schmidt: Removing vector 61 of norm 0.0
17:22 gram_schmidt: Removing vector 62 of norm 0.0
17:22 gram_schmidt: Removing vector 63 of norm 0.0
17:22 gram_schmidt: Removing vector 64 of norm 0.0
17:22 gram_schmidt: Removing vector 65 of norm 0.0
17:22 gram_schmidt: Removing vector 66 of norm 0.0
17:22 gram_schmidt: Removing vector 67 of norm 0.0
17:22 gram_schmidt: Removing vector 68 of norm 0.0
17:22 gram_schmidt: Removing vector 69 of norm 0.0
17:22 gram_schmidt: Removing vector 70 of norm 0.0
17:22 gram_schmidt: Removing vector 71 of norm 0.0
17:22 gram_schmidt: Removing vector 72 of norm 0.0
17:22 gram_schmidt: Removing vector 73 of norm 0.0
17:22 gram_schmidt: Removing vector 74 of norm 0.0
17:22 gram_schmidt: Removing vector 75 of norm 0.0
17:22 gram_schmidt: Removing vector 76 of norm 0.0
17:22 gram_schmidt: Removing vector 77 of norm 0.0
17:22 gram_schmidt: Removing vector 78 of norm 0.0
17:22 gram_schmidt: Removing vector 79 of norm 0.0
17:22 gram_schmidt: Removing vector 80 of norm 0.0
17:22 gram_schmidt: Removing vector 81 of norm 0.0
17:22 gram_schmidt: Removing vector 82 of norm 0.0
17:22 gram_schmidt: Removing vector 83 of norm 0.0
17:22 gram_schmidt: Removing vector 84 of norm 0.0
17:22 gram_schmidt: Removing vector 85 of norm 0.0
17:22 gram_schmidt: Removing vector 86 of norm 0.0
17:22 gram_schmidt: Removing vector 87 of norm 0.0
17:22 gram_schmidt: Removing vector 88 of norm 0.0
17:22 gram_schmidt: Removing vector 89 of norm 0.0
17:22 gram_schmidt: Removing vector 90 of norm 0.0
17:22 gram_schmidt: Removing vector 91 of norm 0.0
17:22 gram_schmidt: Removing vector 92 of norm 0.0
17:22 gram_schmidt: Removing vector 93 of norm 0.0
17:22 gram_schmidt: Removing vector 94 of norm 0.0
17:22 gram_schmidt: Removing vector 95 of norm 0.0
17:22 gram_schmidt: Removing vector 96 of norm 0.0
17:22 gram_schmidt: Removing vector 97 of norm 0.0
17:22 gram_schmidt: Removing vector 98 of norm 0.0
17:22 gram_schmidt: Removing vector 99 of norm 0.0
17:22 gram_schmidt: Removing vector 100 of norm 0.0
17:22 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;5]" time="0.0027468204498291016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;6]" time="0.001975536346435547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;7]" time="0.0024340152740478516"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;8]" time="0.1914970874786377"><system-err>17:22 gram_schmidt: Orthonormalizing vector 31 again
17:22 gram_schmidt: Removing linear dependent vector 32
17:22 gram_schmidt: Removing linear dependent vector 33
17:22 gram_schmidt: Removing linear dependent vector 34
17:22 gram_schmidt: Removing linear dependent vector 35
17:22 gram_schmidt: Removing linear dependent vector 36
17:22 gram_schmidt: Removing linear dependent vector 37
17:22 gram_schmidt: Removing linear dependent vector 38
17:22 gram_schmidt: Removing linear dependent vector 39
17:22 gram_schmidt: Removing linear dependent vector 40
17:22 gram_schmidt: Removing linear dependent vector 41
17:22 gram_schmidt: Removing linear dependent vector 42
17:22 gram_schmidt: Orthonormalizing vector 31 again
17:22 gram_schmidt: Removing linear dependent vector 32
17:22 gram_schmidt: Removing linear dependent vector 33
17:22 gram_schmidt: Removing linear dependent vector 34
17:22 gram_schmidt: Removing linear dependent vector 35
17:22 gram_schmidt: Removing linear dependent vector 36
17:22 gram_schmidt: Removing linear dependent vector 37
17:22 gram_schmidt: Removing linear dependent vector 38
17:22 gram_schmidt: Removing linear dependent vector 39
17:22 gram_schmidt: Removing linear dependent vector 40
17:22 gram_schmidt: Removing linear dependent vector 41
17:22 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;9]" time="0.02740931510925293"><system-err>17:22 gram_schmidt: Removing vector 0 of norm 0.0
17:22 gram_schmidt: Removing vector 1 of norm 0.0
17:22 gram_schmidt: Removing vector 2 of norm 0.0
17:22 gram_schmidt: Removing vector 3 of norm 0.0
17:22 gram_schmidt: Removing vector 4 of norm 0.0
17:22 gram_schmidt: Removing vector 5 of norm 0.0
17:22 gram_schmidt: Removing vector 6 of norm 0.0
17:22 gram_schmidt: Removing vector 7 of norm 0.0
17:22 gram_schmidt: Removing vector 8 of norm 0.0
17:22 gram_schmidt: Removing vector 9 of norm 0.0
17:22 gram_schmidt: Removing vector 10 of norm 0.0
17:22 gram_schmidt: Removing vector 11 of norm 0.0
17:22 gram_schmidt: Removing vector 12 of norm 0.0
17:22 gram_schmidt: Removing vector 13 of norm 0.0
17:22 gram_schmidt: Removing vector 14 of norm 0.0
17:22 gram_schmidt: Removing vector 15 of norm 0.0
17:22 gram_schmidt: Removing vector 16 of norm 0.0
17:22 gram_schmidt: Removing vector 17 of norm 0.0
17:22 gram_schmidt: Removing vector 18 of norm 0.0
17:22 gram_schmidt: Removing vector 19 of norm 0.0
17:22 gram_schmidt: Removing vector 20 of norm 0.0
17:22 gram_schmidt: Removing vector 21 of norm 0.0
17:22 gram_schmidt: Removing vector 22 of norm 0.0
17:22 gram_schmidt: Removing vector 23 of norm 0.0
17:22 gram_schmidt: Removing vector 24 of norm 0.0
17:22 gram_schmidt: Removing vector 25 of norm 0.0
17:22 gram_schmidt: Removing vector 26 of norm 0.0
17:22 gram_schmidt: Removing vector 27 of norm 0.0
17:22 gram_schmidt: Removing vector 28 of norm 0.0
17:22 gram_schmidt: Removing vector 29 of norm 0.0
17:22 gram_schmidt: Removing vector 30 of norm 0.0
17:22 gram_schmidt: Removing vector 31 of norm 0.0
17:22 gram_schmidt: Removing vector 32 of norm 0.0
17:22 gram_schmidt: Removing vector 33 of norm 0.0
17:22 gram_schmidt: Removing vector 34 of norm 0.0
17:22 gram_schmidt: Removing vector 35 of norm 0.0
17:22 gram_schmidt: Removing vector 36 of norm 0.0
17:22 gram_schmidt: Removing vector 37 of norm 0.0
17:22 gram_schmidt: Removing vector 38 of norm 0.0
17:22 gram_schmidt: Removing vector 39 of norm 0.0
17:22 gram_schmidt: Removing vector 40 of norm 0.0
17:22 gram_schmidt: Removing vector 41 of norm 0.0
17:22 gram_schmidt: Removing vector 42 of norm 0.0
17:22 gram_schmidt: Removing vector 43 of norm 0.0
17:22 gram_schmidt: Removing vector 44 of norm 0.0
17:22 gram_schmidt: Removing vector 45 of norm 0.0
17:22 gram_schmidt: Removing vector 46 of norm 0.0
17:22 gram_schmidt: Removing vector 47 of norm 0.0
17:22 gram_schmidt: Removing vector 48 of norm 0.0
17:22 gram_schmidt: Removing vector 49 of norm 0.0
17:22 gram_schmidt: Removing vector 50 of norm 0.0
17:22 gram_schmidt: Removing vector 51 of norm 0.0
17:22 gram_schmidt: Removing vector 52 of norm 0.0
17:22 gram_schmidt: Removing vector 53 of norm 0.0
17:22 gram_schmidt: Removing vector 54 of norm 0.0
17:22 gram_schmidt: Removing vector 55 of norm 0.0
17:22 gram_schmidt: Removing vector 56 of norm 0.0
17:22 gram_schmidt: Removing vector 57 of norm 0.0
17:22 gram_schmidt: Removing vector 58 of norm 0.0
17:22 gram_schmidt: Removing vector 59 of norm 0.0
17:22 gram_schmidt: Removing vector 60 of norm 0.0
17:22 gram_schmidt: Removing vector 61 of norm 0.0
17:22 gram_schmidt: Removing vector 62 of norm 0.0
17:22 gram_schmidt: Removing vector 63 of norm 0.0
17:22 gram_schmidt: Removing vector 64 of norm 0.0
17:22 gram_schmidt: Removing vector 65 of norm 0.0
17:22 gram_schmidt: Removing vector 66 of norm 0.0
17:22 gram_schmidt: Removing vector 67 of norm 0.0
17:22 gram_schmidt: Removing vector 68 of norm 0.0
17:22 gram_schmidt: Removing vector 69 of norm 0.0
17:22 gram_schmidt: Removing vector 70 of norm 0.0
17:22 gram_schmidt: Removing vector 71 of norm 0.0
17:22 gram_schmidt: Removing vector 72 of norm 0.0
17:22 gram_schmidt: Removing vector 73 of norm 0.0
17:22 gram_schmidt: Removing vector 74 of norm 0.0
17:22 gram_schmidt: Removing vector 75 of norm 0.0
17:22 gram_schmidt: Removing vector 76 of norm 0.0
17:22 gram_schmidt: Removing vector 77 of norm 0.0
17:22 gram_schmidt: Removing vector 78 of norm 0.0
17:22 gram_schmidt: Removing vector 79 of norm 0.0
17:22 gram_schmidt: Removing vector 80 of norm 0.0
17:22 gram_schmidt: Removing vector 81 of norm 0.0
17:22 gram_schmidt: Removing vector 82 of norm 0.0
17:22 gram_schmidt: Removing vector 83 of norm 0.0
17:22 gram_schmidt: Removing vector 84 of norm 0.0
17:22 gram_schmidt: Removing vector 85 of norm 0.0
17:22 gram_schmidt: Removing vector 86 of norm 0.0
17:22 gram_schmidt: Removing vector 87 of norm 0.0
17:22 gram_schmidt: Removing vector 88 of norm 0.0
17:22 gram_schmidt: Removing vector 89 of norm 0.0
17:22 gram_schmidt: Removing vector 90 of norm 0.0
17:22 gram_schmidt: Removing vector 91 of norm 0.0
17:22 gram_schmidt: Removing vector 92 of norm 0.0
17:22 gram_schmidt: Removing vector 93 of norm 0.0
17:22 gram_schmidt: Removing vector 94 of norm 0.0
17:22 gram_schmidt: Removing vector 95 of norm 0.0
17:22 gram_schmidt: Removing vector 96 of norm 0.0
17:22 gram_schmidt: Removing vector 97 of norm 0.0
17:22 gram_schmidt: Removing vector 98 of norm 0.0
17:22 gram_schmidt: Removing vector 99 of norm 0.0
17:22 gram_schmidt: Removing vector 100 of norm 0.0
17:22 gram_schmidt: Removing vector 101 of norm 0.0
17:22 gram_schmidt: Removing vector 0 of norm 0.0
17:22 gram_schmidt: Removing vector 1 of norm 0.0
17:22 gram_schmidt: Removing vector 2 of norm 0.0
17:22 gram_schmidt: Removing vector 3 of norm 0.0
17:22 gram_schmidt: Removing vector 4 of norm 0.0
17:22 gram_schmidt: Removing vector 5 of norm 0.0
17:22 gram_schmidt: Removing vector 6 of norm 0.0
17:22 gram_schmidt: Removing vector 7 of norm 0.0
17:22 gram_schmidt: Removing vector 8 of norm 0.0
17:22 gram_schmidt: Removing vector 9 of norm 0.0
17:22 gram_schmidt: Removing vector 10 of norm 0.0
17:22 gram_schmidt: Removing vector 11 of norm 0.0
17:22 gram_schmidt: Removing vector 12 of norm 0.0
17:22 gram_schmidt: Removing vector 13 of norm 0.0
17:22 gram_schmidt: Removing vector 14 of norm 0.0
17:22 gram_schmidt: Removing vector 15 of norm 0.0
17:22 gram_schmidt: Removing vector 16 of norm 0.0
17:22 gram_schmidt: Removing vector 17 of norm 0.0
17:22 gram_schmidt: Removing vector 18 of norm 0.0
17:22 gram_schmidt: Removing vector 19 of norm 0.0
17:22 gram_schmidt: Removing vector 20 of norm 0.0
17:22 gram_schmidt: Removing vector 21 of norm 0.0
17:22 gram_schmidt: Removing vector 22 of norm 0.0
17:22 gram_schmidt: Removing vector 23 of norm 0.0
17:22 gram_schmidt: Removing vector 24 of norm 0.0
17:22 gram_schmidt: Removing vector 25 of norm 0.0
17:22 gram_schmidt: Removing vector 26 of norm 0.0
17:22 gram_schmidt: Removing vector 27 of norm 0.0
17:22 gram_schmidt: Removing vector 28 of norm 0.0
17:22 gram_schmidt: Removing vector 29 of norm 0.0
17:22 gram_schmidt: Removing vector 30 of norm 0.0
17:22 gram_schmidt: Removing vector 31 of norm 0.0
17:22 gram_schmidt: Removing vector 32 of norm 0.0
17:22 gram_schmidt: Removing vector 33 of norm 0.0
17:22 gram_schmidt: Removing vector 34 of norm 0.0
17:22 gram_schmidt: Removing vector 35 of norm 0.0
17:22 gram_schmidt: Removing vector 36 of norm 0.0
17:22 gram_schmidt: Removing vector 37 of norm 0.0
17:22 gram_schmidt: Removing vector 38 of norm 0.0
17:22 gram_schmidt: Removing vector 39 of norm 0.0
17:22 gram_schmidt: Removing vector 40 of norm 0.0
17:22 gram_schmidt: Removing vector 41 of norm 0.0
17:22 gram_schmidt: Removing vector 42 of norm 0.0
17:22 gram_schmidt: Removing vector 43 of norm 0.0
17:22 gram_schmidt: Removing vector 44 of norm 0.0
17:22 gram_schmidt: Removing vector 45 of norm 0.0
17:22 gram_schmidt: Removing vector 46 of norm 0.0
17:22 gram_schmidt: Removing vector 47 of norm 0.0
17:22 gram_schmidt: Removing vector 48 of norm 0.0
17:22 gram_schmidt: Removing vector 49 of norm 0.0
17:22 gram_schmidt: Removing vector 50 of norm 0.0
17:22 gram_schmidt: Removing vector 51 of norm 0.0
17:22 gram_schmidt: Removing vector 52 of norm 0.0
17:22 gram_schmidt: Removing vector 53 of norm 0.0
17:22 gram_schmidt: Removing vector 54 of norm 0.0
17:22 gram_schmidt: Removing vector 55 of norm 0.0
17:22 gram_schmidt: Removing vector 56 of norm 0.0
17:22 gram_schmidt: Removing vector 57 of norm 0.0
17:22 gram_schmidt: Removing vector 58 of norm 0.0
17:22 gram_schmidt: Removing vector 59 of norm 0.0
17:22 gram_schmidt: Removing vector 60 of norm 0.0
17:22 gram_schmidt: Removing vector 61 of norm 0.0
17:22 gram_schmidt: Removing vector 62 of norm 0.0
17:22 gram_schmidt: Removing vector 63 of norm 0.0
17:22 gram_schmidt: Removing vector 64 of norm 0.0
17:22 gram_schmidt: Removing vector 65 of norm 0.0
17:22 gram_schmidt: Removing vector 66 of norm 0.0
17:22 gram_schmidt: Removing vector 67 of norm 0.0
17:22 gram_schmidt: Removing vector 68 of norm 0.0
17:22 gram_schmidt: Removing vector 69 of norm 0.0
17:22 gram_schmidt: Removing vector 70 of norm 0.0
17:22 gram_schmidt: Removing vector 71 of norm 0.0
17:22 gram_schmidt: Removing vector 72 of norm 0.0
17:22 gram_schmidt: Removing vector 73 of norm 0.0
17:22 gram_schmidt: Removing vector 74 of norm 0.0
17:22 gram_schmidt: Removing vector 75 of norm 0.0
17:22 gram_schmidt: Removing vector 76 of norm 0.0
17:22 gram_schmidt: Removing vector 77 of norm 0.0
17:22 gram_schmidt: Removing vector 78 of norm 0.0
17:22 gram_schmidt: Removing vector 79 of norm 0.0
17:22 gram_schmidt: Removing vector 80 of norm 0.0
17:22 gram_schmidt: Removing vector 81 of norm 0.0
17:22 gram_schmidt: Removing vector 82 of norm 0.0
17:22 gram_schmidt: Removing vector 83 of norm 0.0
17:22 gram_schmidt: Removing vector 84 of norm 0.0
17:22 gram_schmidt: Removing vector 85 of norm 0.0
17:22 gram_schmidt: Removing vector 86 of norm 0.0
17:22 gram_schmidt: Removing vector 87 of norm 0.0
17:22 gram_schmidt: Removing vector 88 of norm 0.0
17:22 gram_schmidt: Removing vector 89 of norm 0.0
17:22 gram_schmidt: Removing vector 90 of norm 0.0
17:22 gram_schmidt: Removing vector 91 of norm 0.0
17:22 gram_schmidt: Removing vector 92 of norm 0.0
17:22 gram_schmidt: Removing vector 93 of norm 0.0
17:22 gram_schmidt: Removing vector 94 of norm 0.0
17:22 gram_schmidt: Removing vector 95 of norm 0.0
17:22 gram_schmidt: Removing vector 96 of norm 0.0
17:22 gram_schmidt: Removing vector 97 of norm 0.0
17:22 gram_schmidt: Removing vector 98 of norm 0.0
17:22 gram_schmidt: Removing vector 99 of norm 0.0
17:22 gram_schmidt: Removing vector 100 of norm 0.0
17:22 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;10]" time="0.0034542083740234375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;11]" time="0.0067174434661865234"><system-err>17:22 gram_schmidt: Removing linear dependent vector 3
17:22 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;12]" time="0.0038869380950927734"><system-err>17:22 gram_schmidt: Removing vector 0 of norm 0.0
17:22 gram_schmidt: Removing vector 1 of norm 0.0
17:22 gram_schmidt: Removing vector 2 of norm 0.0
17:22 gram_schmidt: Removing vector 0 of norm 0.0
17:22 gram_schmidt: Removing vector 1 of norm 0.0
17:22 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;13]" time="0.0026464462280273438"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;14]" time="0.004642009735107422"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;15]" time="0.36743998527526855"><system-err>17:22 gram_schmidt: Removing linear dependent vector 36
17:22 gram_schmidt: Removing linear dependent vector 37
17:22 gram_schmidt: Removing linear dependent vector 38
17:22 gram_schmidt: Removing linear dependent vector 39
17:22 gram_schmidt: Removing linear dependent vector 40
17:22 gram_schmidt: Removing linear dependent vector 41
17:22 gram_schmidt: Removing linear dependent vector 42
17:22 gram_schmidt: Removing linear dependent vector 36
17:22 gram_schmidt: Removing linear dependent vector 37
17:22 gram_schmidt: Removing linear dependent vector 38
17:22 gram_schmidt: Removing linear dependent vector 39
17:22 gram_schmidt: Removing linear dependent vector 40
17:22 gram_schmidt: Removing linear dependent vector 41
17:22 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;16]" time="0.19183087348937988"><system-err>17:22 gram_schmidt: Removing linear dependent vector 3
17:22 gram_schmidt: Removing linear dependent vector 4
17:22 gram_schmidt: Removing linear dependent vector 5
17:22 gram_schmidt: Removing linear dependent vector 6
17:22 gram_schmidt: Removing linear dependent vector 7
17:22 gram_schmidt: Removing linear dependent vector 8
17:22 gram_schmidt: Removing linear dependent vector 9
17:22 gram_schmidt: Removing linear dependent vector 10
17:22 gram_schmidt: Removing linear dependent vector 11
17:22 gram_schmidt: Removing linear dependent vector 12
17:22 gram_schmidt: Removing linear dependent vector 13
17:22 gram_schmidt: Removing linear dependent vector 14
17:22 gram_schmidt: Removing linear dependent vector 15
17:22 gram_schmidt: Removing linear dependent vector 16
17:22 gram_schmidt: Removing linear dependent vector 17
17:22 gram_schmidt: Removing linear dependent vector 18
17:22 gram_schmidt: Removing linear dependent vector 19
17:22 gram_schmidt: Removing linear dependent vector 20
17:22 gram_schmidt: Removing linear dependent vector 21
17:22 gram_schmidt: Removing linear dependent vector 22
17:22 gram_schmidt: Removing linear dependent vector 23
17:22 gram_schmidt: Removing linear dependent vector 24
17:22 gram_schmidt: Removing linear dependent vector 25
17:22 gram_schmidt: Removing linear dependent vector 26
17:22 gram_schmidt: Removing linear dependent vector 27
17:22 gram_schmidt: Removing linear dependent vector 28
17:22 gram_schmidt: Removing linear dependent vector 29
17:22 gram_schmidt: Removing linear dependent vector 30
17:22 gram_schmidt: Removing linear dependent vector 31
17:22 gram_schmidt: Removing linear dependent vector 32
17:22 gram_schmidt: Removing linear dependent vector 33
17:22 gram_schmidt: Removing linear dependent vector 34
17:22 gram_schmidt: Removing linear dependent vector 35
17:22 gram_schmidt: Removing linear dependent vector 36
17:22 gram_schmidt: Removing linear dependent vector 37
17:22 gram_schmidt: Removing linear dependent vector 38
17:22 gram_schmidt: Removing linear dependent vector 39
17:22 gram_schmidt: Removing linear dependent vector 40
17:22 gram_schmidt: Removing linear dependent vector 41
17:22 gram_schmidt: Removing linear dependent vector 42
17:22 gram_schmidt: Removing linear dependent vector 43
17:22 gram_schmidt: Removing linear dependent vector 44
17:22 gram_schmidt: Removing linear dependent vector 45
17:22 gram_schmidt: Removing linear dependent vector 46
17:22 gram_schmidt: Removing linear dependent vector 47
17:22 gram_schmidt: Removing linear dependent vector 48
17:22 gram_schmidt: Removing linear dependent vector 49
17:22 gram_schmidt: Removing linear dependent vector 50
17:22 gram_schmidt: Removing linear dependent vector 51
17:22 gram_schmidt: Removing linear dependent vector 52
17:22 gram_schmidt: Removing linear dependent vector 53
17:22 gram_schmidt: Removing linear dependent vector 54
17:22 gram_schmidt: Removing linear dependent vector 55
17:22 gram_schmidt: Removing linear dependent vector 56
17:22 gram_schmidt: Removing linear dependent vector 57
17:22 gram_schmidt: Removing linear dependent vector 58
17:22 gram_schmidt: Removing linear dependent vector 59
17:22 gram_schmidt: Removing linear dependent vector 60
17:22 gram_schmidt: Removing linear dependent vector 61
17:22 gram_schmidt: Removing linear dependent vector 62
17:22 gram_schmidt: Removing linear dependent vector 63
17:22 gram_schmidt: Removing linear dependent vector 64
17:22 gram_schmidt: Removing linear dependent vector 65
17:22 gram_schmidt: Removing linear dependent vector 66
17:22 gram_schmidt: Removing linear dependent vector 67
17:22 gram_schmidt: Removing linear dependent vector 68
17:22 gram_schmidt: Removing linear dependent vector 69
17:22 gram_schmidt: Removing linear dependent vector 70
17:22 gram_schmidt: Removing linear dependent vector 71
17:22 gram_schmidt: Removing linear dependent vector 72
17:22 gram_schmidt: Removing linear dependent vector 73
17:22 gram_schmidt: Removing linear dependent vector 74
17:22 gram_schmidt: Removing linear dependent vector 75
17:22 gram_schmidt: Removing linear dependent vector 76
17:22 gram_schmidt: Removing linear dependent vector 77
17:22 gram_schmidt: Removing linear dependent vector 78
17:22 gram_schmidt: Removing linear dependent vector 79
17:22 gram_schmidt: Removing linear dependent vector 80
17:22 gram_schmidt: Removing linear dependent vector 81
17:22 gram_schmidt: Removing linear dependent vector 82
17:22 gram_schmidt: Removing linear dependent vector 83
17:22 gram_schmidt: Removing linear dependent vector 84
17:22 gram_schmidt: Removing linear dependent vector 85
17:22 gram_schmidt: Removing linear dependent vector 86
17:22 gram_schmidt: Removing linear dependent vector 87
17:22 gram_schmidt: Removing linear dependent vector 88
17:22 gram_schmidt: Removing linear dependent vector 89
17:22 gram_schmidt: Removing linear dependent vector 90
17:22 gram_schmidt: Removing linear dependent vector 91
17:22 gram_schmidt: Removing linear dependent vector 92
17:22 gram_schmidt: Removing linear dependent vector 93
17:22 gram_schmidt: Removing linear dependent vector 94
17:22 gram_schmidt: Removing linear dependent vector 95
17:22 gram_schmidt: Removing linear dependent vector 96
17:22 gram_schmidt: Removing linear dependent vector 97
17:22 gram_schmidt: Removing linear dependent vector 98
17:22 gram_schmidt: Removing linear dependent vector 99
17:22 gram_schmidt: Removing linear dependent vector 100
17:22 gram_schmidt: Removing linear dependent vector 101
17:22 gram_schmidt: Removing linear dependent vector 3
17:22 gram_schmidt: Removing linear dependent vector 4
17:22 gram_schmidt: Removing linear dependent vector 5
17:22 gram_schmidt: Removing linear dependent vector 6
17:22 gram_schmidt: Removing linear dependent vector 7
17:22 gram_schmidt: Removing linear dependent vector 8
17:22 gram_schmidt: Removing linear dependent vector 9
17:22 gram_schmidt: Removing linear dependent vector 10
17:22 gram_schmidt: Removing linear dependent vector 11
17:22 gram_schmidt: Removing linear dependent vector 12
17:22 gram_schmidt: Removing linear dependent vector 13
17:22 gram_schmidt: Removing linear dependent vector 14
17:22 gram_schmidt: Removing linear dependent vector 15
17:22 gram_schmidt: Removing linear dependent vector 16
17:22 gram_schmidt: Removing linear dependent vector 17
17:22 gram_schmidt: Removing linear dependent vector 18
17:22 gram_schmidt: Removing linear dependent vector 19
17:22 gram_schmidt: Removing linear dependent vector 20
17:22 gram_schmidt: Removing linear dependent vector 21
17:22 gram_schmidt: Removing linear dependent vector 22
17:22 gram_schmidt: Removing linear dependent vector 23
17:22 gram_schmidt: Removing linear dependent vector 24
17:22 gram_schmidt: Removing linear dependent vector 25
17:22 gram_schmidt: Removing linear dependent vector 26
17:22 gram_schmidt: Removing linear dependent vector 27
17:22 gram_schmidt: Removing linear dependent vector 28
17:22 gram_schmidt: Removing linear dependent vector 29
17:22 gram_schmidt: Removing linear dependent vector 30
17:22 gram_schmidt: Removing linear dependent vector 31
17:22 gram_schmidt: Removing linear dependent vector 32
17:22 gram_schmidt: Removing linear dependent vector 33
17:22 gram_schmidt: Removing linear dependent vector 34
17:22 gram_schmidt: Removing linear dependent vector 35
17:22 gram_schmidt: Removing linear dependent vector 36
17:22 gram_schmidt: Removing linear dependent vector 37
17:22 gram_schmidt: Removing linear dependent vector 38
17:22 gram_schmidt: Removing linear dependent vector 39
17:22 gram_schmidt: Removing linear dependent vector 40
17:22 gram_schmidt: Removing linear dependent vector 41
17:22 gram_schmidt: Removing linear dependent vector 42
17:22 gram_schmidt: Removing linear dependent vector 43
17:22 gram_schmidt: Removing linear dependent vector 44
17:22 gram_schmidt: Removing linear dependent vector 45
17:22 gram_schmidt: Removing linear dependent vector 46
17:22 gram_schmidt: Removing linear dependent vector 47
17:22 gram_schmidt: Removing linear dependent vector 48
17:22 gram_schmidt: Removing linear dependent vector 49
17:22 gram_schmidt: Removing linear dependent vector 50
17:22 gram_schmidt: Removing linear dependent vector 51
17:22 gram_schmidt: Removing linear dependent vector 52
17:22 gram_schmidt: Removing linear dependent vector 53
17:22 gram_schmidt: Removing linear dependent vector 54
17:22 gram_schmidt: Removing linear dependent vector 55
17:22 gram_schmidt: Removing linear dependent vector 56
17:22 gram_schmidt: Removing linear dependent vector 57
17:22 gram_schmidt: Removing linear dependent vector 58
17:22 gram_schmidt: Removing linear dependent vector 59
17:22 gram_schmidt: Removing linear dependent vector 60
17:22 gram_schmidt: Removing linear dependent vector 61
17:22 gram_schmidt: Removing linear dependent vector 62
17:22 gram_schmidt: Removing linear dependent vector 63
17:22 gram_schmidt: Removing linear dependent vector 64
17:22 gram_schmidt: Removing linear dependent vector 65
17:22 gram_schmidt: Removing linear dependent vector 66
17:22 gram_schmidt: Removing linear dependent vector 67
17:22 gram_schmidt: Removing linear dependent vector 68
17:22 gram_schmidt: Removing linear dependent vector 69
17:22 gram_schmidt: Removing linear dependent vector 70
17:22 gram_schmidt: Removing linear dependent vector 71
17:22 gram_schmidt: Removing linear dependent vector 72
17:22 gram_schmidt: Removing linear dependent vector 73
17:22 gram_schmidt: Removing linear dependent vector 74
17:22 gram_schmidt: Removing linear dependent vector 75
17:22 gram_schmidt: Removing linear dependent vector 76
17:22 gram_schmidt: Removing linear dependent vector 77
17:22 gram_schmidt: Removing linear dependent vector 78
17:22 gram_schmidt: Removing linear dependent vector 79
17:22 gram_schmidt: Removing linear dependent vector 80
17:22 gram_schmidt: Removing linear dependent vector 81
17:22 gram_schmidt: Removing linear dependent vector 82
17:22 gram_schmidt: Removing linear dependent vector 83
17:22 gram_schmidt: Removing linear dependent vector 84
17:22 gram_schmidt: Removing linear dependent vector 85
17:22 gram_schmidt: Removing linear dependent vector 86
17:22 gram_schmidt: Removing linear dependent vector 87
17:22 gram_schmidt: Removing linear dependent vector 88
17:22 gram_schmidt: Removing linear dependent vector 89
17:22 gram_schmidt: Removing linear dependent vector 90
17:22 gram_schmidt: Removing linear dependent vector 91
17:22 gram_schmidt: Removing linear dependent vector 92
17:22 gram_schmidt: Removing linear dependent vector 93
17:22 gram_schmidt: Removing linear dependent vector 94
17:22 gram_schmidt: Removing linear dependent vector 95
17:22 gram_schmidt: Removing linear dependent vector 96
17:22 gram_schmidt: Removing linear dependent vector 97
17:22 gram_schmidt: Removing linear dependent vector 98
17:22 gram_schmidt: Removing linear dependent vector 99
17:22 gram_schmidt: Removing linear dependent vector 100
17:22 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;17]" time="0.0032227039337158203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;18]" time="0.0023818016052246094"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;19]" time="0.0049343109130859375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;20]" time="0.2716062068939209"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;21]" time="1.4417290687561035"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;22]" time="0.0024776458740234375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;23]" time="0.0018036365509033203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;24]" time="0.008695363998413086"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;25]" time="0.40332746505737305"><system-err>17:24 gram_schmidt: Orthonormalizing vector 31 again
17:24 gram_schmidt: Removing linear dependent vector 32
17:24 gram_schmidt: Removing linear dependent vector 33
17:24 gram_schmidt: Removing linear dependent vector 34
17:24 gram_schmidt: Removing linear dependent vector 35
17:24 gram_schmidt: Removing linear dependent vector 36
17:24 gram_schmidt: Removing linear dependent vector 37
17:24 gram_schmidt: Removing linear dependent vector 38
17:24 gram_schmidt: Removing linear dependent vector 39
17:24 gram_schmidt: Removing linear dependent vector 40
17:24 gram_schmidt: Removing linear dependent vector 41
17:24 gram_schmidt: Removing linear dependent vector 42
17:24 gram_schmidt: Orthonormalizing vector 31 again
17:24 gram_schmidt: Removing linear dependent vector 32
17:24 gram_schmidt: Removing linear dependent vector 33
17:24 gram_schmidt: Removing linear dependent vector 34
17:24 gram_schmidt: Removing linear dependent vector 35
17:24 gram_schmidt: Removing linear dependent vector 36
17:24 gram_schmidt: Removing linear dependent vector 37
17:24 gram_schmidt: Removing linear dependent vector 38
17:24 gram_schmidt: Removing linear dependent vector 39
17:24 gram_schmidt: Removing linear dependent vector 40
17:24 gram_schmidt: Removing linear dependent vector 41
17:24 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;26]" time="0.23310160636901855"><system-err>17:25 gram_schmidt: Removing vector 0 of norm 0.0
17:25 gram_schmidt: Removing vector 1 of norm 0.0
17:25 gram_schmidt: Removing vector 2 of norm 0.0
17:25 gram_schmidt: Removing vector 3 of norm 0.0
17:25 gram_schmidt: Removing vector 4 of norm 0.0
17:25 gram_schmidt: Removing vector 5 of norm 0.0
17:25 gram_schmidt: Removing vector 6 of norm 0.0
17:25 gram_schmidt: Removing vector 7 of norm 0.0
17:25 gram_schmidt: Removing vector 8 of norm 0.0
17:25 gram_schmidt: Removing vector 9 of norm 0.0
17:25 gram_schmidt: Removing vector 10 of norm 0.0
17:25 gram_schmidt: Removing vector 11 of norm 0.0
17:25 gram_schmidt: Removing vector 12 of norm 0.0
17:25 gram_schmidt: Removing vector 13 of norm 0.0
17:25 gram_schmidt: Removing vector 14 of norm 0.0
17:25 gram_schmidt: Removing vector 15 of norm 0.0
17:25 gram_schmidt: Removing vector 16 of norm 0.0
17:25 gram_schmidt: Removing vector 17 of norm 0.0
17:25 gram_schmidt: Removing vector 18 of norm 0.0
17:25 gram_schmidt: Removing vector 19 of norm 0.0
17:25 gram_schmidt: Removing vector 20 of norm 0.0
17:25 gram_schmidt: Removing vector 21 of norm 0.0
17:25 gram_schmidt: Removing vector 22 of norm 0.0
17:25 gram_schmidt: Removing vector 23 of norm 0.0
17:25 gram_schmidt: Removing vector 24 of norm 0.0
17:25 gram_schmidt: Removing vector 25 of norm 0.0
17:25 gram_schmidt: Removing vector 26 of norm 0.0
17:25 gram_schmidt: Removing vector 27 of norm 0.0
17:25 gram_schmidt: Removing vector 28 of norm 0.0
17:25 gram_schmidt: Removing vector 29 of norm 0.0
17:25 gram_schmidt: Removing vector 30 of norm 0.0
17:25 gram_schmidt: Removing vector 31 of norm 0.0
17:25 gram_schmidt: Removing vector 32 of norm 0.0
17:25 gram_schmidt: Removing vector 33 of norm 0.0
17:25 gram_schmidt: Removing vector 34 of norm 0.0
17:25 gram_schmidt: Removing vector 35 of norm 0.0
17:25 gram_schmidt: Removing vector 36 of norm 0.0
17:25 gram_schmidt: Removing vector 37 of norm 0.0
17:25 gram_schmidt: Removing vector 38 of norm 0.0
17:25 gram_schmidt: Removing vector 39 of norm 0.0
17:25 gram_schmidt: Removing vector 40 of norm 0.0
17:25 gram_schmidt: Removing vector 41 of norm 0.0
17:25 gram_schmidt: Removing vector 42 of norm 0.0
17:25 gram_schmidt: Removing vector 43 of norm 0.0
17:25 gram_schmidt: Removing vector 44 of norm 0.0
17:25 gram_schmidt: Removing vector 45 of norm 0.0
17:25 gram_schmidt: Removing vector 46 of norm 0.0
17:25 gram_schmidt: Removing vector 47 of norm 0.0
17:25 gram_schmidt: Removing vector 48 of norm 0.0
17:25 gram_schmidt: Removing vector 49 of norm 0.0
17:25 gram_schmidt: Removing vector 50 of norm 0.0
17:25 gram_schmidt: Removing vector 51 of norm 0.0
17:25 gram_schmidt: Removing vector 52 of norm 0.0
17:25 gram_schmidt: Removing vector 53 of norm 0.0
17:25 gram_schmidt: Removing vector 54 of norm 0.0
17:25 gram_schmidt: Removing vector 55 of norm 0.0
17:25 gram_schmidt: Removing vector 56 of norm 0.0
17:25 gram_schmidt: Removing vector 57 of norm 0.0
17:25 gram_schmidt: Removing vector 58 of norm 0.0
17:25 gram_schmidt: Removing vector 59 of norm 0.0
17:25 gram_schmidt: Removing vector 60 of norm 0.0
17:25 gram_schmidt: Removing vector 61 of norm 0.0
17:25 gram_schmidt: Removing vector 62 of norm 0.0
17:25 gram_schmidt: Removing vector 63 of norm 0.0
17:25 gram_schmidt: Removing vector 64 of norm 0.0
17:25 gram_schmidt: Removing vector 65 of norm 0.0
17:25 gram_schmidt: Removing vector 66 of norm 0.0
17:25 gram_schmidt: Removing vector 67 of norm 0.0
17:25 gram_schmidt: Removing vector 68 of norm 0.0
17:25 gram_schmidt: Removing vector 69 of norm 0.0
17:25 gram_schmidt: Removing vector 70 of norm 0.0
17:25 gram_schmidt: Removing vector 71 of norm 0.0
17:25 gram_schmidt: Removing vector 72 of norm 0.0
17:25 gram_schmidt: Removing vector 73 of norm 0.0
17:25 gram_schmidt: Removing vector 74 of norm 0.0
17:25 gram_schmidt: Removing vector 75 of norm 0.0
17:25 gram_schmidt: Removing vector 76 of norm 0.0
17:25 gram_schmidt: Removing vector 77 of norm 0.0
17:25 gram_schmidt: Removing vector 78 of norm 0.0
17:25 gram_schmidt: Removing vector 79 of norm 0.0
17:25 gram_schmidt: Removing vector 80 of norm 0.0
17:25 gram_schmidt: Removing vector 81 of norm 0.0
17:25 gram_schmidt: Removing vector 82 of norm 0.0
17:25 gram_schmidt: Removing vector 83 of norm 0.0
17:25 gram_schmidt: Removing vector 84 of norm 0.0
17:25 gram_schmidt: Removing vector 85 of norm 0.0
17:25 gram_schmidt: Removing vector 86 of norm 0.0
17:25 gram_schmidt: Removing vector 87 of norm 0.0
17:25 gram_schmidt: Removing vector 88 of norm 0.0
17:25 gram_schmidt: Removing vector 89 of norm 0.0
17:25 gram_schmidt: Removing vector 90 of norm 0.0
17:25 gram_schmidt: Removing vector 91 of norm 0.0
17:25 gram_schmidt: Removing vector 92 of norm 0.0
17:25 gram_schmidt: Removing vector 93 of norm 0.0
17:25 gram_schmidt: Removing vector 94 of norm 0.0
17:25 gram_schmidt: Removing vector 95 of norm 0.0
17:25 gram_schmidt: Removing vector 96 of norm 0.0
17:25 gram_schmidt: Removing vector 97 of norm 0.0
17:25 gram_schmidt: Removing vector 98 of norm 0.0
17:25 gram_schmidt: Removing vector 99 of norm 0.0
17:25 gram_schmidt: Removing vector 100 of norm 0.0
17:25 gram_schmidt: Removing vector 101 of norm 0.0
17:25 gram_schmidt: Removing vector 0 of norm 0.0
17:25 gram_schmidt: Removing vector 1 of norm 0.0
17:25 gram_schmidt: Removing vector 2 of norm 0.0
17:25 gram_schmidt: Removing vector 3 of norm 0.0
17:25 gram_schmidt: Removing vector 4 of norm 0.0
17:25 gram_schmidt: Removing vector 5 of norm 0.0
17:25 gram_schmidt: Removing vector 6 of norm 0.0
17:25 gram_schmidt: Removing vector 7 of norm 0.0
17:25 gram_schmidt: Removing vector 8 of norm 0.0
17:25 gram_schmidt: Removing vector 9 of norm 0.0
17:25 gram_schmidt: Removing vector 10 of norm 0.0
17:25 gram_schmidt: Removing vector 11 of norm 0.0
17:25 gram_schmidt: Removing vector 12 of norm 0.0
17:25 gram_schmidt: Removing vector 13 of norm 0.0
17:25 gram_schmidt: Removing vector 14 of norm 0.0
17:25 gram_schmidt: Removing vector 15 of norm 0.0
17:25 gram_schmidt: Removing vector 16 of norm 0.0
17:25 gram_schmidt: Removing vector 17 of norm 0.0
17:25 gram_schmidt: Removing vector 18 of norm 0.0
17:25 gram_schmidt: Removing vector 19 of norm 0.0
17:25 gram_schmidt: Removing vector 20 of norm 0.0
17:25 gram_schmidt: Removing vector 21 of norm 0.0
17:25 gram_schmidt: Removing vector 22 of norm 0.0
17:25 gram_schmidt: Removing vector 23 of norm 0.0
17:25 gram_schmidt: Removing vector 24 of norm 0.0
17:25 gram_schmidt: Removing vector 25 of norm 0.0
17:25 gram_schmidt: Removing vector 26 of norm 0.0
17:25 gram_schmidt: Removing vector 27 of norm 0.0
17:25 gram_schmidt: Removing vector 28 of norm 0.0
17:25 gram_schmidt: Removing vector 29 of norm 0.0
17:25 gram_schmidt: Removing vector 30 of norm 0.0
17:25 gram_schmidt: Removing vector 31 of norm 0.0
17:25 gram_schmidt: Removing vector 32 of norm 0.0
17:25 gram_schmidt: Removing vector 33 of norm 0.0
17:25 gram_schmidt: Removing vector 34 of norm 0.0
17:25 gram_schmidt: Removing vector 35 of norm 0.0
17:25 gram_schmidt: Removing vector 36 of norm 0.0
17:25 gram_schmidt: Removing vector 37 of norm 0.0
17:25 gram_schmidt: Removing vector 38 of norm 0.0
17:25 gram_schmidt: Removing vector 39 of norm 0.0
17:25 gram_schmidt: Removing vector 40 of norm 0.0
17:25 gram_schmidt: Removing vector 41 of norm 0.0
17:25 gram_schmidt: Removing vector 42 of norm 0.0
17:25 gram_schmidt: Removing vector 43 of norm 0.0
17:25 gram_schmidt: Removing vector 44 of norm 0.0
17:25 gram_schmidt: Removing vector 45 of norm 0.0
17:25 gram_schmidt: Removing vector 46 of norm 0.0
17:25 gram_schmidt: Removing vector 47 of norm 0.0
17:25 gram_schmidt: Removing vector 48 of norm 0.0
17:25 gram_schmidt: Removing vector 49 of norm 0.0
17:25 gram_schmidt: Removing vector 50 of norm 0.0
17:25 gram_schmidt: Removing vector 51 of norm 0.0
17:25 gram_schmidt: Removing vector 52 of norm 0.0
17:25 gram_schmidt: Removing vector 53 of norm 0.0
17:25 gram_schmidt: Removing vector 54 of norm 0.0
17:25 gram_schmidt: Removing vector 55 of norm 0.0
17:25 gram_schmidt: Removing vector 56 of norm 0.0
17:25 gram_schmidt: Removing vector 57 of norm 0.0
17:25 gram_schmidt: Removing vector 58 of norm 0.0
17:25 gram_schmidt: Removing vector 59 of norm 0.0
17:25 gram_schmidt: Removing vector 60 of norm 0.0
17:25 gram_schmidt: Removing vector 61 of norm 0.0
17:25 gram_schmidt: Removing vector 62 of norm 0.0
17:25 gram_schmidt: Removing vector 63 of norm 0.0
17:25 gram_schmidt: Removing vector 64 of norm 0.0
17:25 gram_schmidt: Removing vector 65 of norm 0.0
17:25 gram_schmidt: Removing vector 66 of norm 0.0
17:25 gram_schmidt: Removing vector 67 of norm 0.0
17:25 gram_schmidt: Removing vector 68 of norm 0.0
17:25 gram_schmidt: Removing vector 69 of norm 0.0
17:25 gram_schmidt: Removing vector 70 of norm 0.0
17:25 gram_schmidt: Removing vector 71 of norm 0.0
17:25 gram_schmidt: Removing vector 72 of norm 0.0
17:25 gram_schmidt: Removing vector 73 of norm 0.0
17:25 gram_schmidt: Removing vector 74 of norm 0.0
17:25 gram_schmidt: Removing vector 75 of norm 0.0
17:25 gram_schmidt: Removing vector 76 of norm 0.0
17:25 gram_schmidt: Removing vector 77 of norm 0.0
17:25 gram_schmidt: Removing vector 78 of norm 0.0
17:25 gram_schmidt: Removing vector 79 of norm 0.0
17:25 gram_schmidt: Removing vector 80 of norm 0.0
17:25 gram_schmidt: Removing vector 81 of norm 0.0
17:25 gram_schmidt: Removing vector 82 of norm 0.0
17:25 gram_schmidt: Removing vector 83 of norm 0.0
17:25 gram_schmidt: Removing vector 84 of norm 0.0
17:25 gram_schmidt: Removing vector 85 of norm 0.0
17:25 gram_schmidt: Removing vector 86 of norm 0.0
17:25 gram_schmidt: Removing vector 87 of norm 0.0
17:25 gram_schmidt: Removing vector 88 of norm 0.0
17:25 gram_schmidt: Removing vector 89 of norm 0.0
17:25 gram_schmidt: Removing vector 90 of norm 0.0
17:25 gram_schmidt: Removing vector 91 of norm 0.0
17:25 gram_schmidt: Removing vector 92 of norm 0.0
17:25 gram_schmidt: Removing vector 93 of norm 0.0
17:25 gram_schmidt: Removing vector 94 of norm 0.0
17:25 gram_schmidt: Removing vector 95 of norm 0.0
17:25 gram_schmidt: Removing vector 96 of norm 0.0
17:25 gram_schmidt: Removing vector 97 of norm 0.0
17:25 gram_schmidt: Removing vector 98 of norm 0.0
17:25 gram_schmidt: Removing vector 99 of norm 0.0
17:25 gram_schmidt: Removing vector 100 of norm 0.0
17:25 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;0]" time="0.0351412296295166"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;1]" time="0.0330960750579834"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;2]" time="0.03713536262512207"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;3]" time="0.03341317176818848"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;4]" time="0.035420894622802734"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;5]" time="0.03293585777282715"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;6]" time="0.03576850891113281"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;7]" time="0.03270769119262695"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;8]" time="0.03586387634277344"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;9]" time="0.03327345848083496"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;10]" time="0.03509950637817383"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;11]" time="0.03261923789978027"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;12]" time="0.03588461875915527"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Removing linear dependent vector 5
17:25 gram_schmidt: Removing linear dependent vector 6
17:25 gram_schmidt: Removing linear dependent vector 5
17:25 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;13]" time="0.03244280815124512"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Removing linear dependent vector 5
17:25 gram_schmidt: Removing linear dependent vector 6
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Removing linear dependent vector 5
17:25 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;14]" time="0.038674116134643555"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Removing linear dependent vector 5
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;15]" time="0.035774946212768555"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 5 again
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;16]" time="0.03402590751647949"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Removing linear dependent vector 1
17:25 gram_schmidt: Removing linear dependent vector 2
17:25 gram_schmidt: Removing linear dependent vector 3
17:25 gram_schmidt: Removing linear dependent vector 4
17:25 gram_schmidt: Removing linear dependent vector 5
17:25 gram_schmidt: Removing linear dependent vector 6
17:25 gram_schmidt: Removing linear dependent vector 1
17:25 gram_schmidt: Removing linear dependent vector 2
17:25 gram_schmidt: Removing linear dependent vector 3
17:25 gram_schmidt: Removing linear dependent vector 4
17:25 gram_schmidt: Removing linear dependent vector 5
17:25 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;17]" time="0.029506206512451172"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Removing linear dependent vector 1
17:25 gram_schmidt: Removing linear dependent vector 2
17:25 gram_schmidt: Removing linear dependent vector 3
17:25 gram_schmidt: Removing linear dependent vector 4
17:25 gram_schmidt: Removing linear dependent vector 5
17:25 gram_schmidt: Removing linear dependent vector 6
17:25 gram_schmidt: Removing linear dependent vector 1
17:25 gram_schmidt: Removing linear dependent vector 2
17:25 gram_schmidt: Removing linear dependent vector 3
17:25 gram_schmidt: Removing linear dependent vector 4
17:25 gram_schmidt: Removing linear dependent vector 5
17:25 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;18]" time="0.038266658782958984"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Removing linear dependent vector 5
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;19]" time="0.035099029541015625"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 5 again
17:25 gram_schmidt: Orthonormalizing vector 1 again
17:25 gram_schmidt: Orthonormalizing vector 2 again
17:25 gram_schmidt: Orthonormalizing vector 3 again
17:25 gram_schmidt: Orthonormalizing vector 4 again
17:25 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;20]" time="0.03888559341430664"><system-err>17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:25 L2ProductP1: Integrate the products of the shape functions on each element
17:25 L2ProductP1: Determine global dofs ...
17:25 L2ProductP1: Boundary treatment ...
17:25 L2ProductP1: Assemble system matrix ...
17:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:25 DiffusionOperatorP1: Determine global dofs ...
17:25 DiffusionOperatorP1: Boundary treatment ...
17:25 DiffusionOperatorP1: Assemble system matrix ...
17:26 L2ProductP1: Integrate the products of the shape functions on each element
17:26 L2ProductP1: Determine global dofs ...
17:26 L2ProductP1: Boundary treatment ...
17:26 L2ProductP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 4 again
17:26 gram_schmidt: Removing linear dependent vector 5
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 4 again
17:26 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;21]" time="0.03557634353637695"><system-err>17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 L2ProductP1: Integrate the products of the shape functions on each element
17:26 L2ProductP1: Determine global dofs ...
17:26 L2ProductP1: Boundary treatment ...
17:26 L2ProductP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 L2ProductP1: Integrate the products of the shape functions on each element
17:26 L2ProductP1: Determine global dofs ...
17:26 L2ProductP1: Boundary treatment ...
17:26 L2ProductP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 4 again
17:26 gram_schmidt: Orthonormalizing vector 5 again
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 4 again
17:26 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;22]" time="0.03569746017456055"><system-err>17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 L2ProductP1: Integrate the products of the shape functions on each element
17:26 L2ProductP1: Determine global dofs ...
17:26 L2ProductP1: Boundary treatment ...
17:26 L2ProductP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 L2ProductP1: Integrate the products of the shape functions on each element
17:26 L2ProductP1: Determine global dofs ...
17:26 L2ProductP1: Boundary treatment ...
17:26 L2ProductP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 4 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;23]" time="0.03330278396606445"><system-err>17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 L2ProductP1: Integrate the products of the shape functions on each element
17:26 L2ProductP1: Determine global dofs ...
17:26 L2ProductP1: Boundary treatment ...
17:26 L2ProductP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 L2ProductP1: Integrate the products of the shape functions on each element
17:26 L2ProductP1: Determine global dofs ...
17:26 L2ProductP1: Boundary treatment ...
17:26 L2ProductP1: Assemble system matrix ...
17:26 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:26 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:26 DiffusionOperatorP1: Determine global dofs ...
17:26 DiffusionOperatorP1: Boundary treatment ...
17:26 DiffusionOperatorP1: Assemble system matrix ...
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 4 again
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;24]" time="0.010159015655517578"><system-err>17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;25]" time="0.010072708129882812"><system-err>17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;26]" time="0.010247945785522461"><system-err>17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;27]" time="0.0064296722412109375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;28]" time="0.0070264339447021484"><system-err>17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;29]" time="0.006588459014892578"><system-err>17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;30]" time="0.00618743896484375"><system-err>17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;31]" time="0.006741046905517578"><system-err>17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;32]" time="0.02074599266052246"><system-err>17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;33]" time="0.017307043075561523"><system-err>17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;34]" time="0.010488748550415039"><system-err>17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;35]" time="0.018986225128173828"><system-err>17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;36]" time="0.01009368896484375"><system-err>17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
17:26 gram_schmidt: Orthonormalizing vector 1 again
17:26 gram_schmidt: Orthonormalizing vector 2 again
17:26 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;0]" time="0.001621246337890625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;1]" time="0.001359701156616211"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;2]" time="0.0010917186737060547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;3]" time="0.0520167350769043"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;4]" time="0.001630544662475586"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;5]" time="0.0013260841369628906"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;6]" time="0.0011553764343261719"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;7]" time="0.001161813735961914"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;8]" time="0.10225629806518555"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;9]" time="0.002264261245727539"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;10]" time="0.0015072822570800781"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;11]" time="0.0058863162994384766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;12]" time="0.0013570785522460938"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;13]" time="0.0012328624725341797"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;14]" time="0.004354953765869141"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;15]" time="0.19238662719726562"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;16]" time="0.008587837219238281"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;17]" time="0.0023038387298583984"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;18]" time="0.0020647048950195312"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;19]" time="0.0034563541412353516"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;20]" time="0.1461935043334961"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;21]" time="0.7257952690124512"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;22]" time="0.001613616943359375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;23]" time="0.0012357234954833984"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;24]" time="0.0025277137756347656"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;25]" time="0.2958340644836426"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;26]" time="0.05319070816040039"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;0]" time="0.0017294883728027344"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;1]" time="0.0011734962463378906"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;2]" time="0.001190185546875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;3]" time="0.051697492599487305"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;4]" time="0.0016937255859375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;5]" time="0.0014269351959228516"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;6]" time="0.0011477470397949219"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;7]" time="0.0011768341064453125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;8]" time="0.10061478614807129"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;9]" time="0.002713441848754883"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;10]" time="0.0014297962188720703"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;11]" time="0.005983591079711914"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;12]" time="0.0014612674713134766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;13]" time="0.001291036605834961"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;14]" time="0.004361152648925781"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;15]" time="0.1907961368560791"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;16]" time="0.008297443389892578"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;17]" time="0.002202749252319336"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;18]" time="0.002103090286254883"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;19]" time="0.0033578872680664062"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;20]" time="0.14079809188842773"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;21]" time="0.7200429439544678"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;22]" time="0.001828908920288086"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;23]" time="0.0013027191162109375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;24]" time="0.0022842884063720703"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;25]" time="0.2950296401977539"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;26]" time="0.05370330810546875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;0]" time="0.001455545425415039"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;1]" time="0.0012969970703125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;2]" time="0.0011587142944335938"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;3]" time="0.052588701248168945"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;4]" time="0.0017232894897460938"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;5]" time="0.0013031959533691406"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;6]" time="0.0011630058288574219"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;7]" time="0.0011370182037353516"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;8]" time="0.10093855857849121"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;9]" time="0.0028030872344970703"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;10]" time="0.001474618911743164"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;11]" time="0.006245136260986328"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;12]" time="0.001344442367553711"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;13]" time="0.0012998580932617188"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;14]" time="0.0043604373931884766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;15]" time="0.19042658805847168"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;16]" time="0.008429527282714844"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;17]" time="0.002291440963745117"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;18]" time="0.0020275115966796875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;19]" time="0.0035262107849121094"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;20]" time="0.14154791831970215"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;21]" time="0.7224202156066895"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;22]" time="0.001756429672241211"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;23]" time="0.0011801719665527344"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;24]" time="0.0022127628326416016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;25]" time="0.29514527320861816"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;26]" time="0.05374622344970703"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;0]" time="0.03153872489929199"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;1]" time="0.028351783752441406"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;2]" time="0.03267812728881836"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;3]" time="0.02890181541442871"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;4]" time="0.03116917610168457"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;5]" time="0.028407812118530273"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;6]" time="0.032389163970947266"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;7]" time="0.02857232093811035"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;8]" time="0.031827688217163086"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;9]" time="0.02880239486694336"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;10]" time="0.03293418884277344"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;11]" time="0.02924942970275879"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;12]" time="0.0320127010345459"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;13]" time="0.02905440330505371"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;14]" time="0.03799748420715332"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;15]" time="0.03235960006713867"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;16]" time="0.027536392211914062"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;17]" time="0.023874759674072266"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;18]" time="0.03558921813964844"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;19]" time="0.03155970573425293"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;20]" time="0.036110877990722656"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;21]" time="0.03243112564086914"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
17:31 gram_schmidt_biorth: Projecting vector V[1] again
17:31 gram_schmidt_biorth: Projecting vector W[1] again
17:31 gram_schmidt_biorth: Projecting vector V[2] again
17:31 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;22]" time="0.032495975494384766"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;23]" time="0.029081106185913086"><system-err>17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:31 DiffusionOperatorP1: Boundary treatment ...
17:31 DiffusionOperatorP1: Assemble system matrix ...
17:31 L2ProductP1: Integrate the products of the shape functions on each element
17:31 L2ProductP1: Determine global dofs ...
17:31 L2ProductP1: Boundary treatment ...
17:31 L2ProductP1: Assemble system matrix ...
17:31 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:31 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:31 DiffusionOperatorP1: Determine global dofs ...
17:32 DiffusionOperatorP1: Boundary treatment ...
17:32 DiffusionOperatorP1: Assemble system matrix ...
17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;24]" time="0.009041786193847656"><system-err>17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;25]" time="0.009047985076904297"><system-err>17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;26]" time="0.00891733169555664"><system-err>17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;27]" time="0.006002664566040039"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;28]" time="0.00505518913269043"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;29]" time="0.004228115081787109"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;30]" time="0.004274845123291016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;31]" time="0.004243612289428711"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;32]" time="0.01604437828063965"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;33]" time="0.014079809188842773"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;34]" time="0.0093231201171875"><system-err>17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;35]" time="0.013494014739990234"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;36]" time="0.009134054183959961"><system-err>17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
17:32 gram_schmidt_biorth: Projecting vector V[1] again
17:32 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[1]" time="0.0031728744506835938"><system-err>17:32 newton:       Initial Residual: 1.000000e+00
17:32 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:32 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[2]" time="0.0022466182708740234"><system-err>17:32 newton:       Initial Residual: 1.000000e+00
17:32 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:32 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[3]" time="0.0021049976348876953"><system-err>17:32 newton:       Initial Residual: 1.000000e+00
17:32 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:32 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[4]" time="0.0021054744720458984"><system-err>17:32 newton:       Initial Residual: 1.000000e+00
17:32 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:32 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[5]" time="0.0023691654205322266"><system-err>17:32 newton:       Initial Residual: 1.000000e+00
17:32 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:32 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[6]" time="0.002061128616333008"><system-err>17:32 newton:       Initial Residual: 1.000000e+00
17:32 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:32 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[7]" time="0.001985788345336914"><system-err>17:32 newton:       Initial Residual: 1.000000e+00
17:32 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:32 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="26" name="test_newton_fail" time="0.004548311233520508"><system-err>17:32 newton:       Initial Residual: 1.000000e+00
17:32 newton: Iteration  1: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:32 newton: Iteration  2: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:32 newton: Iteration  3: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:32 newton: Iteration  4: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:32 newton: Iteration  5: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:32 newton: Iteration  6: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:32 newton: Iteration  7: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:32 newton: Iteration  8: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:32 newton: Iteration  9: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:32 newton: Iteration 10: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
</system-err></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="8" name="test_repr" time="0.02774643898010254"></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="12" name="test_entries" time="0.0011603832244873047"></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="19" name="test_dir" time="0.0011529922485351562"></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="14" name="test_defaults" time="0.001196146011352539"></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="30" name="test_print_defaults" time="0.05066800117492676"><system-out>                                                       defaults affecting state id calcuation                                                       
                                                       ======================================                                                       

path (shortened)                                                       value                                                                  source
---------------------------------------------------------------------  ---------------------------------------------------------------------  ------
basic.almost_equal.atol                                                1e-14                                                                  code  
basic.almost_equal.rtol                                                1e-14                                                                  code  
genericsolvers.apply_inverse.check_finite                              True                                                                   code  
genericsolvers.apply_inverse.default_least_squares_solver              &apos;generic_least_squares_lsmr&apos;                                           code  
genericsolvers.apply_inverse.default_solver                            &apos;generic_lgmres&apos;                                                       code  
genericsolvers.solver_options.least_squares_lsmr_atol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsmr_btol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsmr_conlim                100000000.0                                                            code  
genericsolvers.solver_options.least_squares_lsmr_damp                  0.0                                                                    code  
genericsolvers.solver_options.least_squares_lsmr_maxiter               None                                                                   code  
genericsolvers.solver_options.least_squares_lsqr_atol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsqr_btol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsqr_conlim                100000000.0                                                            code  
genericsolvers.solver_options.least_squares_lsqr_iter_lim              None                                                                   code  
genericsolvers.solver_options.lgmres_inner_m                           39                                                                     code  
genericsolvers.solver_options.lgmres_maxiter                           1000                                                                   code  
genericsolvers.solver_options.lgmres_outer_k                           3                                                                      code  
genericsolvers.solver_options.lgmres_tol                               1e-05                                                                  code  
gram_schmidt.gram_schmidt.atol                                         1e-13                                                                  code  
gram_schmidt.gram_schmidt.check                                        True                                                                   code  
gram_schmidt.gram_schmidt.check_tol                                    0.001                                                                  code  
gram_schmidt.gram_schmidt.reiterate                                    True                                                                   code  
gram_schmidt.gram_schmidt.reiteration_threshold                        0.1                                                                    code  
gram_schmidt.gram_schmidt.rtol                                         1e-13                                                                  code  
newton.newton.atol                                                     -1.0                                                                   code  
newton.newton.maxiter                                                  100                                                                    code  
newton.newton.miniter                                                  0                                                                      code  
newton.newton.rtol                                                     -1.0                                                                   code  
newton.newton.stagnation_threshold                                     0.9                                                                    code  
newton.newton.stagnation_window                                        3                                                                      code  
pod.pod.atol                                                           0.0                                                                    code  
pod.pod.check                                                          True                                                                   code  
pod.pod.check_tol                                                      1e-10                                                                  code  
pod.pod.l2_err                                                         0.0                                                                    code  
pod.pod.orthonormalize                                                 True                                                                   code  
pod.pod.rtol                                                           4e-08                                                                  code  
pod.pod.symmetrize                                                     False                                                                  code  
text.text_problem.font_name                                            None                                                                   code  
fenics._solver_options.preconditioner                                  &apos;amg&apos;                                                                  code  
fenics._solver_options.solver                                          &apos;bicgstab&apos;                                                             code  
ngsolve.NGSolveMatrixOperator.apply_inverse.default_solver             &apos;&apos;                                                                     code  
pyamg.apply_inverse.check_finite                                       True                                                                   code  
pyamg.apply_inverse.default_solver                                     &apos;pyamg_solve&apos;                                                          code  
pyamg.solver_options.maxiter                                           400                                                                    code  
pyamg.solver_options.rs_CF                                             &apos;RS&apos;                                                                   code  
pyamg.solver_options.rs_accel                                          None                                                                   code  
pyamg.solver_options.rs_coarse_solver                                  &apos;pinv2&apos;                                                                code  
pyamg.solver_options.rs_cycle                                          &apos;V&apos;                                                                    code  
pyamg.solver_options.rs_max_coarse                                     500                                                                    code  
pyamg.solver_options.rs_max_levels                                     10                                                                     code  
pyamg.solver_options.rs_maxiter                                        100                                                                    code  
pyamg.solver_options.rs_postsmoother                                   (&apos;gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                               code  
pyamg.solver_options.rs_strength                                       (&apos;classical&apos;, {&apos;theta&apos;: 0.25})                                         code  
pyamg.solver_options.rs_tol                                            1e-05                                                                  code  
pyamg.solver_options.sa_accel                                          None                                                                   code  
pyamg.solver_options.sa_aggregate                                      &apos;standard&apos;                                                             code  
pyamg.solver_options.sa_coarse_solver                                  &apos;pinv2&apos;                                                                code  
pyamg.solver_options.sa_cycle                                          &apos;V&apos;                                                                    code  
pyamg.solver_options.sa_diagonal_dominance                             False                                                                  code  
pyamg.solver_options.sa_improve_candidates                             ((&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;, &apos;iterations&apos;: 4}),      code  
                                                                       None)                                                                        
pyamg.solver_options.sa_max_coarse                                     500                                                                    code  
pyamg.solver_options.sa_max_levels                                     10                                                                     code  
pyamg.solver_options.sa_maxiter                                        100                                                                    code  
pyamg.solver_options.sa_postsmoother                                   (&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                         code  
pyamg.solver_options.sa_presmoother                                    (&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                         code  
pyamg.solver_options.sa_smooth                                         (&apos;jacobi&apos;, {&apos;omega&apos;: 1.3333333333333333})                              code  
pyamg.solver_options.sa_strength                                       &apos;symmetric&apos;                                                            code  
pyamg.solver_options.sa_symmetry                                       &apos;hermitian&apos;                                                            code  
pyamg.solver_options.sa_tol                                            1e-05                                                                  code  
pyamg.solver_options.tol                                               1e-05                                                                  code  
pymess.solve_lyap.default_solver                                       &apos;pymess&apos;                                                               code  
pymess.solve_ricc.default_solver                                       &apos;pymess&apos;                                                               code  
scipy.apply_inverse.check_finite                                       True                                                                   code  
scipy.apply_inverse.default_least_squares_solver                       &apos;scipy_least_squares_lsmr&apos;                                             code  
scipy.apply_inverse.default_solver                                     &apos;scipy_spsolve&apos;                                                        code  
scipy.solver_options.bicgstab_maxiter                                  None                                                                   code  
scipy.solver_options.bicgstab_tol                                      1e-15                                                                  code  
scipy.solver_options.least_squares_lsmr_atol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsmr_btol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsmr_conlim                         100000000.0                                                            code  
scipy.solver_options.least_squares_lsmr_damp                           0.0                                                                    code  
scipy.solver_options.least_squares_lsmr_maxiter                        None                                                                   code  
scipy.solver_options.least_squares_lsqr_atol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsqr_btol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsqr_conlim                         100000000.0                                                            code  
scipy.solver_options.least_squares_lsqr_iter_lim                       None                                                                   code  
scipy.solver_options.lgmres_inner_m                                    39                                                                     code  
scipy.solver_options.lgmres_maxiter                                    1000                                                                   code  
scipy.solver_options.lgmres_outer_k                                    3                                                                      code  
scipy.solver_options.lgmres_tol                                        1e-05                                                                  code  
scipy.solver_options.spilu_drop_rule                                   None                                                                   code  
scipy.solver_options.spilu_drop_tol                                    0.0001                                                                 code  
scipy.solver_options.spilu_fill_factor                                 10                                                                     code  
scipy.solver_options.spilu_permc_spec                                  &apos;COLAMD&apos;                                                               code  
scipy.solver_options.spsolve_keep_factorization                        True                                                                   code  
scipy.solver_options.spsolve_permc_spec                                &apos;COLAMD&apos;                                                               code  
iosys.LTISystem._lyap_solver.default_solver_backend                    &apos;pymess&apos;                                                               code  
constructions.induced_norm.raise_negative                              True                                                                   code  
constructions.induced_norm.tol                                         1e-10                                                                  code  
fv.jacobian_options.delta                                              1e-07                                                                  code  
numpy.NumpyMatrixOperator.apply_inverse.check_finite                   True                                                                   code  
numpy.NumpyMatrixOperator.apply_inverse.default_sparse_solver_backend  &apos;scipy&apos;                                                                code  
default.new_parallel_pool.allow_mpi                                    True                                                                   code  
default.new_parallel_pool.ipython_num_engines                          None                                                                   code  
default.new_parallel_pool.ipython_profile                              None                                                                   code  
bt.BRBTReductor._ricc_solver.default_solver_backend                    &apos;slycot&apos;                                                               code  
bt.LQGBTReductor._ricc_solver.default_solver_backend                   &apos;pymess&apos;                                                               code  
floatcmp.float_cmp.atol                                                1e-14                                                                  code  
floatcmp.float_cmp.rtol                                                1e-14                                                                  code  
mpi.event_loop_settings.auto_launch                                    True                                                                   code  
random.new_random_state.seed                                           42                                                                     code  
defaults.func.c                                                        43                                                                     user  
defaults.func.d                                                        3                                                                      code  



                  defaults not affecting state id calculation                   
                  ===========================================                   

path (shortened)                     value                                source
-----------------------------------  -----------------------------------  ------
genericsolvers.solver_options.least  False                                code  
_squares_lsmr_show                                                              
genericsolvers.solver_options.least  False                                code  
_squares_lsqr_show                                                              
pyamg.solver_options.verb            False                                code  
scipy.solver_options.least_squares_  False                                code  
lsmr_show                                                                       
scipy.solver_options.least_squares_  False                                code  
lsqr_show                                                                       
cache.default_regions.disk_max_size  1073741824                           code  
cache.default_regions.disk_path      &apos;/tmp/pymor.cache.pymor&apos;             code  
cache.default_regions.memory_max_ke  1000                                 code  
ys                                                                              
cache.default_regions.persistent_ma  1073741824                           code  
x_size                                                                          
cache.default_regions.persistent_pa  &apos;/tmp/pymor.persistent.cache.pymor&apos;  code  
th                                                                              
logger.getLogger.filename            &apos;&apos;                                   code  
logger.set_log_format.block_timings  False                                code  
logger.set_log_format.indent_blocks  True                                 code  
logger.set_log_format.max_hierarchy  1                                    code  
_level                                                                          
logger.set_log_levels.levels         None                                 code  
gl.colormap_texture.name             &apos;viridis&apos;                            code  
qt.visualize_patch.backend           &apos;gl&apos;                                 code  
pprint.format_array.compact_print    False                                code  

</system-out></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="34" name="test_write_defaults_to_file" time="0.012948751449584961"><system-out>Written defaults to file /tmp/tmpbbk3uiqu/defaults.py
</system-out></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="39" name="test_load_defaults_from_file" time="0.013333559036254883"><system-out>Written defaults to file /tmp/tmpluq_0ihm/defaults.py
</system-out></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="18" name="testImplementorlist" time="0.0013034343719482422"></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="24" name="testAbstractMethods" time="0.0026450157165527344"></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="56" name="testVersion" time="0.0007410049438476562"></testcase><testcase classname="src.pymortests.core.interface" file="src/pymortests/core/interface.py" line="78" name="test_withcopy_implementors" time="0.007731199264526367"></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[RuleTable]" time="0.0021347999572753906"><system-err>17:32 |WARNING|RuleTable: warning -- logger &lt;Logger pymor.algorithms.rules.RuleTable (INFO)&gt;
17:32 |ERROR|RuleTable: error -- logger &lt;Logger pymor.algorithms.rules.RuleTable (INFO)&gt;
17:32 RuleTable: info -- logger &lt;Logger pymor.algorithms.rules.RuleTable (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[PatchVisualizer]" time="0.0018506050109863281"><system-err>17:32 |WARNING|PatchVisualizer: warning -- logger &lt;Logger pymor.gui.visualizers.PatchVisualizer (INFO)&gt;
17:32 |ERROR|PatchVisualizer: error -- logger &lt;Logger pymor.gui.visualizers.PatchVisualizer (INFO)&gt;
17:32 PatchVisualizer: info -- logger &lt;Logger pymor.gui.visualizers.PatchVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[OnedVisualizer]" time="0.0018384456634521484"><system-err>17:32 |WARNING|OnedVisualizer: warning -- logger &lt;Logger pymor.gui.visualizers.OnedVisualizer (INFO)&gt;
17:32 |ERROR|OnedVisualizer: error -- logger &lt;Logger pymor.gui.visualizers.OnedVisualizer (INFO)&gt;
17:32 OnedVisualizer: info -- logger &lt;Logger pymor.gui.visualizers.OnedVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[FenicsVisualizer]" time="0.0021219253540039062"><system-err>17:32 |WARNING|FenicsVisualizer: warning -- logger &lt;Logger pymor.bindings.fenics.FenicsVisualizer (INFO)&gt;
17:32 |ERROR|FenicsVisualizer: error -- logger &lt;Logger pymor.bindings.fenics.FenicsVisualizer (INFO)&gt;
17:32 FenicsVisualizer: info -- logger &lt;Logger pymor.bindings.fenics.FenicsVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BoringTestClass]" time="0.0018780231475830078"><system-err>17:32 |WARNING|BoringTestClass: warning -- logger &lt;Logger pymortests.core.dummies.BoringTestClass (INFO)&gt;
17:32 |ERROR|BoringTestClass: error -- logger &lt;Logger pymortests.core.dummies.BoringTestClass (INFO)&gt;
17:32 BoringTestClass: info -- logger &lt;Logger pymortests.core.dummies.BoringTestClass (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[RemoteObjectManager]" time="0.0018200874328613281"><system-err>17:32 |WARNING|RemoteObjectManager: warning -- logger &lt;Logger pymor.parallel.manager.RemoteObjectManager (INFO)&gt;
17:32 |ERROR|RemoteObjectManager: error -- logger &lt;Logger pymor.parallel.manager.RemoteObjectManager (INFO)&gt;
17:32 RemoteObjectManager: info -- logger &lt;Logger pymor.parallel.manager.RemoteObjectManager (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AdaptiveSampleSet]" time="0.0017986297607421875"><system-err>17:32 |WARNING|AdaptiveSampleSet: warning -- logger &lt;Logger pymor.algorithms.adaptivegreedy.AdaptiveSampleSet (INFO)&gt;
17:32 |ERROR|AdaptiveSampleSet: error -- logger &lt;Logger pymor.algorithms.adaptivegreedy.AdaptiveSampleSet (INFO)&gt;
17:32 AdaptiveSampleSet: info -- logger &lt;Logger pymor.algorithms.adaptivegreedy.AdaptiveSampleSet (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[Tree]" time="0.0018346309661865234"><system-err>17:32 |WARNING|Tree: warning -- logger &lt;Logger pymor.algorithms.hapod.Tree (INFO)&gt;
17:32 |ERROR|Tree: error -- logger &lt;Logger pymor.algorithms.hapod.Tree (INFO)&gt;
17:32 Tree: info -- logger &lt;Logger pymor.algorithms.hapod.Tree (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericRBReductor]" time="0.0017940998077392578"><system-err>17:32 |WARNING|GenericRBReductor: warning -- logger &lt;Logger pymor.reductors.basic.GenericRBReductor (INFO)&gt;
17:32 |ERROR|GenericRBReductor: error -- logger &lt;Logger pymor.reductors.basic.GenericRBReductor (INFO)&gt;
17:32 GenericRBReductor: info -- logger &lt;Logger pymor.reductors.basic.GenericRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericPGReductor]" time="0.0017657279968261719"><system-err>17:32 |WARNING|GenericPGReductor: warning -- logger &lt;Logger pymor.reductors.basic.GenericPGReductor (INFO)&gt;
17:32 |ERROR|GenericPGReductor: error -- logger &lt;Logger pymor.reductors.basic.GenericPGReductor (INFO)&gt;
17:32 GenericPGReductor: info -- logger &lt;Logger pymor.reductors.basic.GenericPGReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericBTReductor]" time="0.0018131732940673828"><system-err>17:32 |WARNING|GenericBTReductor: warning -- logger &lt;Logger pymor.reductors.bt.GenericBTReductor (INFO)&gt;
17:32 |ERROR|GenericBTReductor: error -- logger &lt;Logger pymor.reductors.bt.GenericBTReductor (INFO)&gt;
17:32 GenericBTReductor: info -- logger &lt;Logger pymor.reductors.bt.GenericBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ResidualReductor]" time="0.0019207000732421875"><system-err>17:32 |WARNING|ResidualReductor: warning -- logger &lt;Logger pymor.reductors.residual.ResidualReductor (INFO)&gt;
17:32 |ERROR|ResidualReductor: error -- logger &lt;Logger pymor.reductors.residual.ResidualReductor (INFO)&gt;
17:32 ResidualReductor: info -- logger &lt;Logger pymor.reductors.residual.ResidualReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ImplicitEulerResidualReductor]" time="0.0017364025115966797"><system-err>17:32 |WARNING|ImplicitEulerResidualReductor: warning -- logger &lt;Logger pymor.reductors.residual.ImplicitEulerResidualReductor (INFO)&gt;
17:32 |ERROR|ImplicitEulerResidualReductor: error -- logger &lt;Logger pymor.reductors.residual.ImplicitEulerResidualReductor (INFO)&gt;
17:32 ImplicitEulerResidualReductor: info -- logger &lt;Logger pymor.reductors.residual.ImplicitEulerResidualReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericBHIReductor]" time="0.0017185211181640625"><system-err>17:32 |WARNING|GenericBHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.GenericBHIReductor (INFO)&gt;
17:32 |ERROR|GenericBHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.GenericBHIReductor (INFO)&gt;
17:32 GenericBHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.GenericBHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TFInterpReductor]" time="0.0017342567443847656"><system-err>17:32 |WARNING|TFInterpReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.TFInterpReductor (INFO)&gt;
17:32 |ERROR|TFInterpReductor: error -- logger &lt;Logger pymor.reductors.interpolation.TFInterpReductor (INFO)&gt;
17:32 TFInterpReductor: info -- logger &lt;Logger pymor.reductors.interpolation.TFInterpReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[IRKAReductor]" time="0.001680612564086914"><system-err>17:32 |WARNING|IRKAReductor: warning -- logger &lt;Logger pymor.reductors.h2.IRKAReductor (INFO)&gt;
17:32 |ERROR|IRKAReductor: error -- logger &lt;Logger pymor.reductors.h2.IRKAReductor (INFO)&gt;
17:32 IRKAReductor: info -- logger &lt;Logger pymor.reductors.h2.IRKAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TSIAReductor]" time="0.0017604827880859375"><system-err>17:32 |WARNING|TSIAReductor: warning -- logger &lt;Logger pymor.reductors.h2.TSIAReductor (INFO)&gt;
17:32 |ERROR|TSIAReductor: error -- logger &lt;Logger pymor.reductors.h2.TSIAReductor (INFO)&gt;
17:32 TSIAReductor: info -- logger &lt;Logger pymor.reductors.h2.TSIAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TF_IRKAReductor]" time="0.0017018318176269531"><system-err>17:32 |WARNING|TF_IRKAReductor: warning -- logger &lt;Logger pymor.reductors.h2.TF_IRKAReductor (INFO)&gt;
17:32 |ERROR|TF_IRKAReductor: error -- logger &lt;Logger pymor.reductors.h2.TF_IRKAReductor (INFO)&gt;
17:32 TF_IRKAReductor: info -- logger &lt;Logger pymor.reductors.h2.TF_IRKAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericSOBTpvReductor]" time="0.0017080307006835938"><system-err>17:32 |WARNING|GenericSOBTpvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.GenericSOBTpvReductor (INFO)&gt;
17:32 |ERROR|GenericSOBTpvReductor: error -- logger &lt;Logger pymor.reductors.sobt.GenericSOBTpvReductor (INFO)&gt;
17:32 GenericSOBTpvReductor: info -- logger &lt;Logger pymor.reductors.sobt.GenericSOBTpvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTfvReductor]" time="0.001695394515991211"><system-err>17:32 |WARNING|SOBTfvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTfvReductor (INFO)&gt;
17:32 |ERROR|SOBTfvReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTfvReductor (INFO)&gt;
17:32 SOBTfvReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTfvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTReductor]" time="0.0016362667083740234"><system-err>17:32 |WARNING|SOBTReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTReductor (INFO)&gt;
17:32 |ERROR|SOBTReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTReductor (INFO)&gt;
17:32 SOBTReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOR_IRKAReductor]" time="0.0017275810241699219"><system-err>17:32 |WARNING|SOR_IRKAReductor: warning -- logger &lt;Logger pymor.reductors.sor_irka.SOR_IRKAReductor (INFO)&gt;
17:32 |ERROR|SOR_IRKAReductor: error -- logger &lt;Logger pymor.reductors.sor_irka.SOR_IRKAReductor (INFO)&gt;
17:32 SOR_IRKAReductor: info -- logger &lt;Logger pymor.reductors.sor_irka.SOR_IRKAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[new_ipcluster_pool]" time="0.001711130142211914"><system-err>17:32 |WARNING|new_ipcluster_pool: warning -- logger &lt;Logger pymor.parallel.ipython.new_ipcluster_pool (INFO)&gt;
17:32 |ERROR|new_ipcluster_pool: error -- logger &lt;Logger pymor.parallel.ipython.new_ipcluster_pool (INFO)&gt;
17:32 new_ipcluster_pool: info -- logger &lt;Logger pymor.parallel.ipython.new_ipcluster_pool (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[StationaryProblem]" time="0.0017046928405761719"><system-err>17:32 |WARNING|StationaryProblem: warning -- logger &lt;Logger pymor.analyticalproblems.elliptic.StationaryProblem (INFO)&gt;
17:32 |ERROR|StationaryProblem: error -- logger &lt;Logger pymor.analyticalproblems.elliptic.StationaryProblem (INFO)&gt;
17:32 StationaryProblem: info -- logger &lt;Logger pymor.analyticalproblems.elliptic.StationaryProblem (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[InstationaryProblem]" time="0.0016777515411376953"><system-err>17:32 |WARNING|InstationaryProblem: warning -- logger &lt;Logger pymor.analyticalproblems.instationary.InstationaryProblem (INFO)&gt;
17:32 |ERROR|InstationaryProblem: error -- logger &lt;Logger pymor.analyticalproblems.instationary.InstationaryProblem (INFO)&gt;
17:32 InstationaryProblem: info -- logger &lt;Logger pymor.analyticalproblems.instationary.InstationaryProblem (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[InducedNorm]" time="0.00171661376953125"><system-err>17:32 |WARNING|InducedNorm: warning -- logger &lt;Logger pymor.operators.constructions.InducedNorm (INFO)&gt;
17:32 |ERROR|InducedNorm: error -- logger &lt;Logger pymor.operators.constructions.InducedNorm (INFO)&gt;
17:32 InducedNorm: info -- logger &lt;Logger pymor.operators.constructions.InducedNorm (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[NGSolveVisualizer]" time="0.0017232894897460938"><system-err>17:32 |WARNING|NGSolveVisualizer: warning -- logger &lt;Logger pymor.bindings.ngsolve.NGSolveVisualizer (INFO)&gt;
17:32 |ERROR|NGSolveVisualizer: error -- logger &lt;Logger pymor.bindings.ngsolve.NGSolveVisualizer (INFO)&gt;
17:32 NGSolveVisualizer: info -- logger &lt;Logger pymor.bindings.ngsolve.NGSolveVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CoerciveRBEstimator]" time="0.0021944046020507812"><system-err>17:32 |WARNING|CoerciveRBEstimator: warning -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBEstimator (INFO)&gt;
17:32 |ERROR|CoerciveRBEstimator: error -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBEstimator (INFO)&gt;
17:32 CoerciveRBEstimator: info -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBEstimator (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SimpleCoerciveRBEstimator]" time="0.0017037391662597656"><system-err>17:32 |WARNING|SimpleCoerciveRBEstimator: warning -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBEstimator (INFO)&gt;
17:32 |ERROR|SimpleCoerciveRBEstimator: error -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBEstimator (INFO)&gt;
17:32 SimpleCoerciveRBEstimator: info -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBEstimator (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ParabolicRBEstimator]" time="0.0016646385192871094"><system-err>17:32 |WARNING|ParabolicRBEstimator: warning -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBEstimator (INFO)&gt;
17:32 |ERROR|ParabolicRBEstimator: error -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBEstimator (INFO)&gt;
17:32 ParabolicRBEstimator: info -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBEstimator (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[MPIVisualizer]" time="0.0016942024230957031"><system-err>17:32 |WARNING|MPIVisualizer: warning -- logger &lt;Logger pymor.discretizations.mpi.MPIVisualizer (INFO)&gt;
17:32 |ERROR|MPIVisualizer: error -- logger &lt;Logger pymor.discretizations.mpi.MPIVisualizer (INFO)&gt;
17:32 MPIVisualizer: info -- logger &lt;Logger pymor.discretizations.mpi.MPIVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[NumpyVectorArray]" time="0.0017328262329101562"><system-err>17:32 |WARNING|NumpyVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.numpy.NumpyVectorArray (INFO)&gt;
17:32 |ERROR|NumpyVectorArray: error -- logger &lt;Logger pymor.vectorarrays.numpy.NumpyVectorArray (INFO)&gt;
17:32 NumpyVectorArray: info -- logger &lt;Logger pymor.vectorarrays.numpy.NumpyVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BlockVectorArray]" time="0.001791238784790039"><system-err>17:32 |WARNING|BlockVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.block.BlockVectorArray (INFO)&gt;
17:32 |ERROR|BlockVectorArray: error -- logger &lt;Logger pymor.vectorarrays.block.BlockVectorArray (INFO)&gt;
17:32 BlockVectorArray: info -- logger &lt;Logger pymor.vectorarrays.block.BlockVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ListVectorArray]" time="0.0017626285552978516"><system-err>17:32 |WARNING|ListVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.list.ListVectorArray (INFO)&gt;
17:32 |ERROR|ListVectorArray: error -- logger &lt;Logger pymor.vectorarrays.list.ListVectorArray (INFO)&gt;
17:32 ListVectorArray: info -- logger &lt;Logger pymor.vectorarrays.list.ListVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[MPIVectorArray]" time="0.0018010139465332031"><system-err>17:32 |WARNING|MPIVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.mpi.MPIVectorArray (INFO)&gt;
17:32 |ERROR|MPIVectorArray: error -- logger &lt;Logger pymor.vectorarrays.mpi.MPIVectorArray (INFO)&gt;
17:32 MPIVectorArray: info -- logger &lt;Logger pymor.vectorarrays.mpi.MPIVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[PreAssembleRules]" time="0.0017192363739013672"><system-err>17:32 |WARNING|PreAssembleRules: warning -- logger &lt;Logger pymor.algorithms.preassemble.PreAssembleRules (INFO)&gt;
17:32 |ERROR|PreAssembleRules: error -- logger &lt;Logger pymor.algorithms.preassemble.PreAssembleRules (INFO)&gt;
17:32 PreAssembleRules: info -- logger &lt;Logger pymor.algorithms.preassemble.PreAssembleRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ProjectRules]" time="0.0017762184143066406"><system-err>17:32 |WARNING|ProjectRules: warning -- logger &lt;Logger pymor.algorithms.projection.ProjectRules (INFO)&gt;
17:32 |ERROR|ProjectRules: error -- logger &lt;Logger pymor.algorithms.projection.ProjectRules (INFO)&gt;
17:32 ProjectRules: info -- logger &lt;Logger pymor.algorithms.projection.ProjectRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ProjectToSubbasisRules]" time="0.0018117427825927734"><system-err>17:32 |WARNING|ProjectToSubbasisRules: warning -- logger &lt;Logger pymor.algorithms.projection.ProjectToSubbasisRules (INFO)&gt;
17:32 |ERROR|ProjectToSubbasisRules: error -- logger &lt;Logger pymor.algorithms.projection.ProjectToSubbasisRules (INFO)&gt;
17:32 ProjectToSubbasisRules: info -- logger &lt;Logger pymor.algorithms.projection.ProjectToSubbasisRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ToMatrixRules]" time="0.0017478466033935547"><system-err>17:32 |WARNING|ToMatrixRules: warning -- logger &lt;Logger pymor.algorithms.to_matrix.ToMatrixRules (INFO)&gt;
17:32 |ERROR|ToMatrixRules: error -- logger &lt;Logger pymor.algorithms.to_matrix.ToMatrixRules (INFO)&gt;
17:32 ToMatrixRules: info -- logger &lt;Logger pymor.algorithms.to_matrix.ToMatrixRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CollectOperatorRangeRules]" time="0.00185394287109375"><system-err>17:32 |WARNING|CollectOperatorRangeRules: warning -- logger &lt;Logger pymor.algorithms.image.CollectOperatorRangeRules (INFO)&gt;
17:32 |ERROR|CollectOperatorRangeRules: error -- logger &lt;Logger pymor.algorithms.image.CollectOperatorRangeRules (INFO)&gt;
17:32 CollectOperatorRangeRules: info -- logger &lt;Logger pymor.algorithms.image.CollectOperatorRangeRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CollectVectorRangeRules]" time="0.0017306804656982422"><system-err>17:32 |WARNING|CollectVectorRangeRules: warning -- logger &lt;Logger pymor.algorithms.image.CollectVectorRangeRules (INFO)&gt;
17:32 |ERROR|CollectVectorRangeRules: error -- logger &lt;Logger pymor.algorithms.image.CollectVectorRangeRules (INFO)&gt;
17:32 CollectVectorRangeRules: info -- logger &lt;Logger pymor.algorithms.image.CollectVectorRangeRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CopyOnWriteVector]" time="0.0017485618591308594"><system-err>17:32 |WARNING|CopyOnWriteVector: warning -- logger &lt;Logger pymor.vectorarrays.list.CopyOnWriteVector (INFO)&gt;
17:32 |ERROR|CopyOnWriteVector: error -- logger &lt;Logger pymor.vectorarrays.list.CopyOnWriteVector (INFO)&gt;
17:32 CopyOnWriteVector: info -- logger &lt;Logger pymor.vectorarrays.list.CopyOnWriteVector (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AllDirichletBoundaryInfo]" time="0.001725912094116211"><system-err>17:32 |WARNING|AllDirichletBoundaryInfo: warning -- logger &lt;Logger pymortests.core.dummies.AllDirichletBoundaryInfo (INFO)&gt;
17:32 |ERROR|AllDirichletBoundaryInfo: error -- logger &lt;Logger pymortests.core.dummies.AllDirichletBoundaryInfo (INFO)&gt;
17:32 AllDirichletBoundaryInfo: info -- logger &lt;Logger pymortests.core.dummies.AllDirichletBoundaryInfo (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[StupidImplementer]" time="0.0017690658569335938"><system-err>17:32 |WARNING|StupidImplementer: warning -- logger &lt;Logger pymortests.core.dummies.StupidImplementer (INFO)&gt;
17:32 |ERROR|StupidImplementer: error -- logger &lt;Logger pymortests.core.dummies.StupidImplementer (INFO)&gt;
17:32 StupidImplementer: info -- logger &lt;Logger pymortests.core.dummies.StupidImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AverageImplementer0]" time="0.00171661376953125"><system-err>17:32 |WARNING|AverageImplementer: warning -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
17:32 |ERROR|AverageImplementer: error -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
17:32 AverageImplementer: info -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[FailImplementer]" time="0.0017616748809814453"><system-err>17:32 |WARNING|FailImplementer: warning -- logger &lt;Logger pymortests.core.dummies.FailImplementer (INFO)&gt;
17:32 |ERROR|FailImplementer: error -- logger &lt;Logger pymortests.core.dummies.FailImplementer (INFO)&gt;
17:32 FailImplementer: info -- logger &lt;Logger pymortests.core.dummies.FailImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AverageImplementer1]" time="0.0017342567443847656"><system-err>17:32 |WARNING|AverageImplementer: warning -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
17:32 |ERROR|AverageImplementer: error -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
17:32 AverageImplementer: info -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DummyPool]" time="0.0017795562744140625"><system-err>17:32 |WARNING|DummyPool: warning -- logger &lt;Logger pymor.parallel.dummy.DummyPool (INFO)&gt;
17:32 |ERROR|DummyPool: error -- logger &lt;Logger pymor.parallel.dummy.DummyPool (INFO)&gt;
17:32 DummyPool: info -- logger &lt;Logger pymor.parallel.dummy.DummyPool (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[WorkerPoolBase]" time="0.0018134117126464844"><system-err>17:32 |WARNING|WorkerPoolBase: warning -- logger &lt;Logger pymor.parallel.basic.WorkerPoolBase (INFO)&gt;
17:32 |ERROR|WorkerPoolBase: error -- logger &lt;Logger pymor.parallel.basic.WorkerPoolBase (INFO)&gt;
17:32 WorkerPoolBase: info -- logger &lt;Logger pymor.parallel.basic.WorkerPoolBase (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[IncHAPODTree]" time="0.0017671585083007812"><system-err>17:32 |WARNING|IncHAPODTree: warning -- logger &lt;Logger pymor.algorithms.hapod.IncHAPODTree (INFO)&gt;
17:32 |ERROR|IncHAPODTree: error -- logger &lt;Logger pymor.algorithms.hapod.IncHAPODTree (INFO)&gt;
17:32 IncHAPODTree: info -- logger &lt;Logger pymor.algorithms.hapod.IncHAPODTree (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DistHAPODTree]" time="0.0018620491027832031"><system-err>17:32 |WARNING|DistHAPODTree: warning -- logger &lt;Logger pymor.algorithms.hapod.DistHAPODTree (INFO)&gt;
17:32 |ERROR|DistHAPODTree: error -- logger &lt;Logger pymor.algorithms.hapod.DistHAPODTree (INFO)&gt;
17:32 DistHAPODTree: info -- logger &lt;Logger pymor.algorithms.hapod.DistHAPODTree (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CoerciveRBReductor]" time="0.002047300338745117"><system-err>17:32 |WARNING|CoerciveRBReductor: warning -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBReductor (INFO)&gt;
17:32 |ERROR|CoerciveRBReductor: error -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBReductor (INFO)&gt;
17:32 CoerciveRBReductor: info -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SimpleCoerciveRBReductor]" time="0.0017330646514892578"><system-err>17:32 |WARNING|SimpleCoerciveRBReductor: warning -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBReductor (INFO)&gt;
17:32 |ERROR|SimpleCoerciveRBReductor: error -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBReductor (INFO)&gt;
17:32 SimpleCoerciveRBReductor: info -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ParabolicRBReductor]" time="0.0017135143280029297"><system-err>17:32 |WARNING|ParabolicRBReductor: warning -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBReductor (INFO)&gt;
17:32 |ERROR|ParabolicRBReductor: error -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBReductor (INFO)&gt;
17:32 ParabolicRBReductor: info -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BTReductor]" time="0.0016913414001464844"><system-err>17:32 |WARNING|BTReductor: warning -- logger &lt;Logger pymor.reductors.bt.BTReductor (INFO)&gt;
17:32 |ERROR|BTReductor: error -- logger &lt;Logger pymor.reductors.bt.BTReductor (INFO)&gt;
17:32 BTReductor: info -- logger &lt;Logger pymor.reductors.bt.BTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[LQGBTReductor]" time="0.0018148422241210938"><system-err>17:32 |WARNING|LQGBTReductor: warning -- logger &lt;Logger pymor.reductors.bt.LQGBTReductor (INFO)&gt;
17:32 |ERROR|LQGBTReductor: error -- logger &lt;Logger pymor.reductors.bt.LQGBTReductor (INFO)&gt;
17:32 LQGBTReductor: info -- logger &lt;Logger pymor.reductors.bt.LQGBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BRBTReductor]" time="0.0018260478973388672"><system-err>17:32 |WARNING|BRBTReductor: warning -- logger &lt;Logger pymor.reductors.bt.BRBTReductor (INFO)&gt;
17:32 |ERROR|BRBTReductor: error -- logger &lt;Logger pymor.reductors.bt.BRBTReductor (INFO)&gt;
17:32 BRBTReductor: info -- logger &lt;Logger pymor.reductors.bt.BRBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[LTI_BHIReductor]" time="0.0017600059509277344"><system-err>17:32 |WARNING|LTI_BHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.LTI_BHIReductor (INFO)&gt;
17:32 |ERROR|LTI_BHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.LTI_BHIReductor (INFO)&gt;
17:32 LTI_BHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.LTI_BHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SO_BHIReductor]" time="0.001720428466796875"><system-err>17:32 |WARNING|SO_BHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.SO_BHIReductor (INFO)&gt;
17:32 |ERROR|SO_BHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.SO_BHIReductor (INFO)&gt;
17:32 SO_BHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.SO_BHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DelayBHIReductor]" time="0.0016849040985107422"><system-err>17:32 |WARNING|DelayBHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.DelayBHIReductor (INFO)&gt;
17:32 |ERROR|DelayBHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.DelayBHIReductor (INFO)&gt;
17:32 DelayBHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.DelayBHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTpReductor]" time="0.001745462417602539"><system-err>17:32 |WARNING|SOBTpReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTpReductor (INFO)&gt;
17:32 |ERROR|SOBTpReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTpReductor (INFO)&gt;
17:32 SOBTpReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTpReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTvReductor]" time="0.0018322467803955078"><system-err>17:32 |WARNING|SOBTvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTvReductor (INFO)&gt;
17:32 |ERROR|SOBTvReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTvReductor (INFO)&gt;
17:32 SOBTvReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTpvReductor]" time="0.0017917156219482422"><system-err>17:32 |WARNING|SOBTpvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTpvReductor (INFO)&gt;
17:32 |ERROR|SOBTpvReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTpvReductor (INFO)&gt;
17:32 SOBTpvReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTpvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTvpReductor]" time="0.0018336772918701172"><system-err>17:32 |WARNING|SOBTvpReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTvpReductor (INFO)&gt;
17:32 |ERROR|SOBTvpReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTvpReductor (INFO)&gt;
17:32 SOBTvpReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTvpReductor (INFO)&gt;
</system-err></testcase></testsuite>